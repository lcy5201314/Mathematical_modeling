%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 195 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 595.3 841.9 0 1 21 FMDOCUMENT
0 0 /Times-Italic FMFONTDEFINE
1 0 /Times-Bold FMFONTDEFINE
2 0 /Times-Roman FMFONTDEFINE
3 0 /Courier FMFONTDEFINE
4 1 /Symbol FMFONTDEFINE
5 0 /Times-BoldItalic FMFONTDEFINE
6 0 /Courier-BoldOblique FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 .1 FMFILL
2 .3 FMFILL
3 .5 FMFILL
4 .7 FMFILL
5 .9 FMFILL
6 .97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 .9 FMFILL
18 .7 FMFILL
19 .5 FMFILL
20 .3 FMFILL
21 .1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: A4
%%EndPaperSize
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-1) 518.33 61.29 T
1 28 Q
(1 T) 63.65 726.29 T
(utorial) 100.75 726.29 T
2 12 Q
4.82 (M) 135.65 692.95 P
2 10 Q
4.02 (A) 146.31 692.95 P
4.02 (TLAB) 152.42 692.95 P
2 12 Q
4.82 ( has a wide variety of functions useful to the genetic algorithm) 178.51 692.95 P
1.63 (practitioner and those wishing to experiment with the genetic algorithm for the) 135.65 678.95 P
-0.03 (\336rst time. Given the versatility of M) 135.65 664.95 P
2 10 Q
-0.02 (A) 309.05 664.95 P
-0.02 (TLAB) 315.16 664.95 P
2 12 Q
-0.03 (\325) 341.26 664.95 P
-0.03 (s high-level language, problems can be) 344.59 664.95 P
0.58 (coded in m-\336les in a fraction of the time that it would take to create C or Fortran) 135.65 650.95 P
3.7 (programs for the same purpose. Couple this with M) 135.65 636.95 P
2 10 Q
3.09 (A) 412.78 636.95 P
3.09 (TLAB) 418.88 636.95 P
2 12 Q
3.7 (\325) 444.98 636.95 P
3.7 (s advanced data) 448.31 636.95 P
0.17 (analysis, visualisation tools and special purpose application domain toolboxes and) 135.65 622.95 P
2.91 (the user is presented with a uniform environment with which to explore the) 135.65 608.95 P
(potential of genetic algorithms.) 135.65 594.95 T
1.02 (The Genetic Algorithm T) 135.65 568.95 P
1.02 (oolbox uses M) 260.1 568.95 P
2 10 Q
0.85 (A) 332.76 568.95 P
0.85 (TLAB) 338.87 568.95 P
2 12 Q
1.02 ( matrix functions to build a set of) 364.97 568.95 P
0.87 (versatile tools for implementing a wide range of genetic algorithm methods. The) 135.65 554.95 P
1.04 (Genetic Algorithm T) 135.65 540.95 P
1.04 (oolbox is a collection of routines, written mostly in m-\336les,) 237.48 540.95 P
(which implement the most important functions in genetic algorithms.) 135.65 526.95 T
FMENDPAGE
%%EndPage: "1" 2
%%Page: "2" 2
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-2) 518.33 61.29 T
63.65 716.95 531.65 726.95 C
63.65 725.95 531.65 725.95 2 L
1 H
2 Z
0 X
0 K
N
-8.35 24.95 603.65 816.95 C
1 18 Q
0 X
0 K
(Installation) 63.65 732.95 T
2 12 Q
2.37 (Instructions for installing the Genetic Algorithm T) 135.65 694.95 P
2.37 (oolbox can be found in the) 391.55 694.95 P
0.36 (M) 135.65 680.95 P
2 10 Q
0.3 (A) 146.31 680.95 P
0.3 (TLAB) 152.42 680.95 P
2 12 Q
0.36 ( installation instructions. It is recommended that the \336les for this toolbox) 178.51 680.95 P
(are stored in a directory named genetic of) 135.65 666.95 T
(f the main matlab/toolbox directory) 334.93 666.95 T
(.) 504.71 666.95 T
3.33 (A number of demonstrations are available. A single-population binary-coded) 135.65 640.95 P
-0.13 (genetic algorithm to solve a numerical optimization problem is implemented in the) 135.65 626.95 P
-0.25 (m-\336le) 135.65 612.95 P
3 F
-0.61 (sga.m) 167.04 612.95 P
2 F
-0.25 (. The demonstration m-\336le) 203.02 612.95 P
3 F
-0.61 (mpga.m) 332.93 612.95 P
2 F
-0.25 ( implements a real-valued multi-) 376.1 612.95 P
1.29 (population genetic algorithm to solve a dynamic control problem. Both of these) 135.65 598.95 P
(demonstration m-\336les are discussed in detail in the) 135.65 584.95 T
0 F
(Examples) 382.16 584.95 T
2 F
( Section.) 428.79 584.95 T
1.06 (Additionally) 135.65 558.95 P
1.06 (, a set of test functions, drawn from the genetic algorithm literature,) 195.51 558.95 P
2.55 (are supplied in a separate directory) 135.65 544.95 P
2.55 (,) 315.12 544.95 P
3 F
6.11 (test_fns) 323.66 544.95 P
2 F
2.55 (, from the Genetic Algorithm) 381.23 544.95 P
0.05 (T) 135.65 530.95 P
0.05 (oolbox functions. A brief description of these test functions is given at the end of) 142.14 530.95 P
0.93 (the) 135.65 516.95 P
0 F
0.93 (Examples) 154.23 516.95 P
2 F
0.93 ( Section. A further document describes the implementation and use) 200.86 516.95 P
(of these functions.) 135.65 502.95 T
FMENDPAGE
%%EndPage: "2" 3
%%Page: "3" 3
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-3) 518.33 61.29 T
63.65 716.95 531.65 726.95 C
63.65 725.95 531.65 725.95 2 L
1 H
2 Z
0 X
0 K
N
-8.35 24.95 603.65 816.95 C
1 18 Q
0 X
0 K
(An Overview of Genetic Algorithms) 63.65 732.95 T
2 12 Q
-0.06 (In this Section we give a tutorial introduction to the basic Genetic Algorithm \050GA\051) 135.65 694.95 P
(and outline the procedures for solving problems using the GA.) 135.65 680.95 T
1 16 Q
(What ar) 135.65 652.29 T
(e Genetic Algorithms?) 192.66 652.29 T
2 12 Q
0.56 (The GA is a stochastic global search method that mimics the metaphor of natural) 135.65 624.95 P
0.66 (biological evolution. GAs operate on a population of potential solutions applying) 135.65 610.95 P
2.41 (the principle of survival of the \336ttest to produce \050hopefully\051 better and better) 135.65 596.95 P
0.86 (approximations to a solution. At each generation, a new set of approximations is) 135.65 582.95 P
0.15 (created by the process of selecting individuals according to their level of \336tness in) 135.65 568.95 P
1.29 (the problem domain and breeding them together using operators borrowed from) 135.65 554.95 P
0.63 (natural genetics. This process leads to the evolution of populations of individuals) 135.65 540.95 P
2.41 (that are better suited to their environment than the individuals that they were) 135.65 526.95 P
(created from, just as in natural adaptation.) 135.65 512.95 T
3.17 (Individuals, or current approximations, are encoded as strings,) 135.65 486.95 P
0 F
3.17 (chr) 463.14 486.95 P
3.17 (omosomes) 478.68 486.95 P
2 F
3.17 (,) 528.65 486.95 P
0.8 (composed over some alphabet\050s\051, so that the) 135.65 472.95 P
0 F
0.8 (genotypes) 357.07 472.95 P
2 F
0.8 ( \050chromosome values\051 are) 405.03 472.95 P
3.66 (uniquely mapped onto the decision variable \050) 135.65 458.95 P
0 F
3.66 (phenotypic) 374.11 458.95 P
2 F
3.66 (\051 domain. The most) 426.73 458.95 P
0.03 (commonly used representation in GAs is the binary alphabet {0, 1} although other) 135.65 444.95 P
1.05 (representations can be used, e.g. ternary) 135.65 430.95 P
1.05 (, integer) 331.97 430.95 P
1.05 (, real-valued etc. For example, a) 371.85 430.95 P
2.13 (problem with two variables,) 135.65 416.95 P
0 F
2.13 (x) 281.76 416.95 P
0 10 Q
1.78 (1) 287.08 413.95 P
2 12 Q
2.13 ( and) 292.08 416.95 P
0 F
2.13 (x) 319.66 416.95 P
0 10 Q
1.78 (2) 324.98 413.95 P
2 12 Q
2.13 (, may be mapped onto the chromosome) 329.98 416.95 P
(structure in the following way:) 135.65 402.95 T
-0.3 (where) 135.65 299.98 P
0 F
-0.3 (x) 167.65 299.98 P
0 10 Q
-0.25 (1) 172.98 296.98 P
2 12 Q
-0.3 ( is encoded with 10 bits and) 177.97 299.98 P
0 F
-0.3 (x) 312.82 299.98 P
0 10 Q
-0.25 (2) 318.14 296.98 P
2 12 Q
-0.3 ( with 15 bits, possibly re\337ecting the level of) 323.14 299.98 P
-0.2 (accuracy or range of the individual decision variables. Examining the chromosome) 135.65 285.98 P
0.43 (string in isolation yields no information about the problem we are trying to solve.) 135.65 271.98 P
0.11 (It is only with the decoding of the chromosome into its phenotypic values that any) 135.65 257.98 P
1.35 (meaning can be applied to the representation. However) 135.65 243.98 P
1.35 (, as described below) 409.1 243.98 P
1.35 (, the) 509.64 243.98 P
0.55 (search process will operate on this encoding of the decision variables, rather than) 135.65 229.98 P
0.8 (the decision variables themselves, except, of course, where real-valued genes are) 135.65 215.98 P
(used.) 135.65 201.98 T
-0.19 (Having decoded the chromosome representation into the decision variable domain,) 135.65 175.98 P
1.94 (it is possible to assess the performance, or) 135.65 161.98 P
0 F
1.94 (\336tness) 356.04 161.98 P
2 F
1.94 (, of individual members of a) 386.03 161.98 P
3.53 (population. This is done through an objective function that characterises an) 135.65 147.98 P
0.6 (individual\325) 135.65 133.98 P
0.6 (s performance in the problem domain. In the natural world, this would) 187.63 133.98 P
0.08 (be an individual\325) 135.65 119.98 P
0.08 (s ability to survive in its present environment. Thus, the objective) 216.42 119.98 P
63.65 96.95 531.65 744.95 C
135.65 321.98 531.65 398.95 C
146.65 328.95 520.65 391.95 C
146.65 328.95 520.65 391.95 R
7 X
0 K
V
3 12 Q
0 X
(1 0 1 1 0 1 0 0 1 1 0 1 0 1 1 1 0 1 0 1 0 0 1 0 1) 157.35 369.97 T
170.49 343.64 158.95 346.95 170.49 350.26 170.49 346.95 4 Y
V
282.42 350.26 293.95 346.95 282.42 343.64 282.42 346.95 4 Y
V
170.49 346.95 282.42 346.95 2 L
0.5 H
0 Z
N
297.08 382.95 297.08 337.95 2 L
2 Z
11 X
N
311.49 343.64 299.95 346.95 311.49 350.26 311.49 346.95 4 Y
0 X
V
495.42 350.26 506.95 346.95 495.42 343.64 495.42 346.95 4 Y
V
311.49 346.95 495.42 346.95 2 L
0 Z
N
0 F
(x) 221.29 353.75 T
0 10 Q
(1) 226.62 350.75 T
0 12 Q
(x) 398.29 353.75 T
0 10 Q
(2) 403.61 350.75 T
135.65 321.98 531.65 398.95 C
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "3" 4
%%Page: "4" 4
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-4) 518.33 61.29 T
2 12 Q
2.35 (function establishes the basis for selection of pairs of individuals that will be) 135.65 736.95 P
(mated together during reproduction.) 135.65 722.95 T
0.45 (During the reproduction phase, each individual is assigned a \336tness value derived) 135.65 696.95 P
0.94 (from its raw performance measure given by the objective function. This value is) 135.65 682.95 P
1.18 (used in the selection to bias towards more \336t individuals. Highly \336t individuals,) 135.65 668.95 P
2.11 (relative to the whole population, have a high probability of being selected for) 135.65 654.95 P
2.56 (mating whereas less \336t individuals have a correspondingly low probability of) 135.65 640.95 P
(being selected.) 135.65 626.95 T
0.54 (Once the individuals have been assigned a \336tness value, they can be chosen from) 135.65 600.95 P
5.22 (the population, with a probability according to their relative \336tness, and) 135.65 586.95 P
2.85 (recombined to produce the next generation. Genetic operators manipulate the) 135.65 572.95 P
0.61 (characters \050genes\051 of the chromosomes directly) 135.65 558.95 P
0.61 (, using the assumption that certain) 364.71 558.95 P
0.18 (individual\325) 135.65 544.95 P
0.18 (s gene codes, on average, produce \336tter individuals. The recombination) 187.63 544.95 P
0.68 (operator is used to exchange genetic information between pairs, or lar) 135.65 530.95 P
0.68 (ger groups,) 477.01 530.95 P
4.62 (of individuals. The simplest recombination operator is that of single-point) 135.65 516.95 P
(crossover) 135.65 502.95 T
(.) 180.95 502.95 T
(Consider the two parent binary strings:) 135.65 476.95 T
3 F
(P) 171.65 450.95 T
3 10 Q
(1) 178.84 447.95 T
3 12 Q
( = 1 0 0 1 0 1 1 0) 184.84 450.95 T
2 F
(, and) 314.37 450.95 T
3 F
(P) 171.65 424.95 T
3 10 Q
(2) 178.84 421.95 T
3 12 Q
( = 1 0 1 1 1 0 0 0) 184.84 424.95 T
2 F
(.) 314.37 424.95 T
0.59 (If an integer position,) 135.65 398.95 P
0 F
0.59 (i) 244.27 398.95 P
2 F
0.59 (, is selected uniformly at random between 1 and the string) 247.6 398.95 P
0.97 (length,) 135.65 384.95 P
0 F
0.97 (l) 172.6 384.95 P
2 F
0.97 (, minus one [1,) 175.93 384.95 P
0 F
0.97 (l) 254.42 384.95 P
2 F
0.97 (-1], and the genetic information exchanged between the) 257.76 384.95 P
0.15 (individuals about this point, then two new of) 135.65 370.95 P
0.15 (fspring strings are produced. The two) 351.03 370.95 P
(of) 135.65 356.95 T
(fspring below are produced when the crossover point) 145.42 356.95 T
0 F
(i = 5) 403.22 356.95 T
2 F
( is selected,) 426.64 356.95 T
3 F
(O) 171.65 330.95 T
3 10 Q
(1) 178.84 327.95 T
3 12 Q
( = 1 0 0 1 0 0 0 0) 184.84 330.95 T
2 F
(, and) 314.37 330.95 T
3 F
(O) 171.65 304.95 T
3 10 Q
(2) 178.84 301.95 T
3 12 Q
( = 1 0 1 1 1 1 1 0) 184.84 304.95 T
2 F
(.) 314.37 304.95 T
3.99 (This crossover operation is not necessarily performed on all strings in the) 135.65 278.95 P
0.87 (population. Instead, it is applied with a probability) 135.65 264.95 P
0 F
0.87 (Px) 387.77 264.95 P
2 F
0.87 ( when the pairs are chosen) 400.42 264.95 P
-0.2 (for breeding. A further genetic operator) 135.65 250.95 P
-0.2 (, called mutation, is then applied to the new) 324.02 250.95 P
1.8 (chromosomes, again with a set probability) 135.65 236.95 P
1.8 (,) 347.08 236.95 P
0 F
1.8 (Pm) 354.88 236.95 P
2 F
1.8 (. Mutation causes the individual) 370.87 236.95 P
1.06 (genetic representation to be changed according to some probabilistic rule. In the) 135.65 222.95 P
0.41 (binary) 135.65 208.95 P
0.41 (string) 172.7 208.95 P
0.41 ( representation,) 206.01 208.95 P
0.41 ( mutation will cause a single bit to change its state,) 283.36 208.95 P
0.74 (0) 135.65 194.95 P
4 F
0.74 (\336) 145.38 194.95 P
2 F
0.74 (1 or 1) 160.96 194.95 P
4 F
0.74 (\336) 194.15 194.95 P
2 F
0.74 ( 0. So, for example, mutating the fourth bit of) 205.99 194.95 P
3 F
1.77 (O) 434.89 194.95 P
3 10 Q
1.48 (1) 442.09 191.95 P
2 12 Q
0.74 ( leads to the new) 448.09 194.95 P
(string,) 135.65 180.95 T
3 F
(O) 171.65 154.95 T
3 10 Q
(1m) 178.84 151.95 T
3 12 Q
( = 1 0 0 0 0 0 0 0) 190.84 154.95 T
2 F
(.) 320.37 154.95 T
0.19 (Mutation is generally considered to be a background operator that ensures that the) 135.65 128.95 P
0.61 (probability of searching a particular subspace of the problem space is never zero.) 135.65 114.95 P
FMENDPAGE
%%EndPage: "4" 5
%%Page: "5" 5
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-5) 518.33 61.29 T
2 12 Q
1.57 (This has the ef) 135.65 736.95 P
1.57 (fect of tending to inhibit the possibility of conver) 210.43 736.95 P
1.57 (ging to a local) 458.64 736.95 P
(optimum, rather than the global optimum.) 135.65 722.95 T
1.87 (After recombination and mutation, the individual strings are then, if necessary) 135.65 696.95 P
1.87 (,) 528.65 696.95 P
4.09 (decoded, the objective function evaluated, a \336tness value assigned to each) 135.65 682.95 P
-0.01 (individual and individuals selected for mating according to their \336tness, and so the) 135.65 668.95 P
4.08 (process continues through subsequent generations. In this way) 135.65 654.95 P
4.08 (, the average) 462.55 654.95 P
3.36 (performance of individuals in a population is expected to increase, as good) 135.65 640.95 P
0.1 (individuals are preserved and bred with one another and the less \336t individuals die) 135.65 626.95 P
-0.26 (out. The GA is terminated when some criteria are satis\336ed, e.g. a certain number of) 135.65 612.95 P
0.66 (generations, a mean deviation in the population, or when a particular point in the) 135.65 598.95 P
(search space is encountered.) 135.65 584.95 T
1 16 Q
(GAs versus T) 135.65 556.29 T
(raditional Methods) 226.86 556.29 T
2 12 Q
1.06 (From the above discussion, it can be seen that the GA dif) 135.65 528.95 P
1.06 (fers substantially from) 421.6 528.95 P
3.43 (more traditional search and optimization methods. The four most signi\336cant) 135.65 514.95 P
(dif) 135.65 500.95 T
(ferences are:) 148.76 500.95 T
(\245) 157.25 474.95 T
(GAs search a population of points in parallel, not a single point.) 171.65 474.95 T
(\245) 157.25 454.95 T
1.32 (GAs do not require derivative information or other auxiliary knowledge;) 171.65 454.95 P
1.1 (only the objective function and corresponding \336tness levels in\337uence the) 171.65 440.95 P
(directions of search.) 171.65 426.95 T
(\245) 157.25 406.95 T
(GAs use probabilistic transition rules, not deterministic ones.) 171.65 406.95 T
(\245) 157.25 386.95 T
-0.26 (GAs work on an encoding of the parameter set rather than the parameter set) 171.65 386.95 P
(itself \050except in where real-valued individuals are used\051.) 171.65 372.95 T
1.06 (It is important to note that the GA provides a number of potential solutions to a) 135.65 346.95 P
0.5 (given problem and the choice of \336nal solution is left to the user) 135.65 332.95 P
0.5 (. In cases where a) 444.75 332.95 P
0.44 (particular problem does not have one individual solution, for example a family of) 135.65 318.95 P
4.61 (Pareto-optimal solutions, as is the case in multiobjective optimization and) 135.65 304.95 P
3.39 (scheduling problems, then the GA is potentially useful for identifying these) 135.65 290.95 P
(alternative solutions simultaneously) 135.65 276.95 T
(.) 307.44 276.95 T
FMENDPAGE
%%EndPage: "5" 6
%%Page: "6" 6
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-6) 518.33 61.29 T
63.65 716.95 531.65 726.95 C
63.65 725.95 531.65 725.95 2 L
1 H
2 Z
0 X
0 K
N
-8.35 24.95 603.65 816.95 C
1 18 Q
0 X
0 K
(Major Elements of the Genetic Algorithm) 63.65 732.95 T
2 12 Q
0.01 (The simple genetic algorithm \050SGA\051 is described by Goldber) 135.65 694.95 P
0.01 (g [1] and is used here) 428.67 694.95 P
0.09 (to illustrate the basic components of the GA. A pseudo-code outline of the SGA is) 135.65 680.95 P
1.58 (shown in Fig. 1. The population at time) 135.65 666.95 P
0 F
1.58 (t) 340.87 666.95 P
2 F
1.58 ( is represented by the time-dependent) 344.21 666.95 P
0.74 (variable) 135.65 652.95 P
0 F
0.74 (P) 178.02 652.95 P
2 F
0.74 (, with the initial population of random estimates being) 184.02 652.95 P
0 F
0.74 (P\0500\051) 453.87 652.95 P
2 F
0.74 (. Using this) 475.19 652.95 P
0.28 (outline of a GA, the remainder of this Section describes the major elements of the) 135.65 638.95 P
(GA.) 135.65 624.95 T
1 16 Q
(Population Repr) 135.65 336.01 T
(esentation and Initialisation) 248.64 336.01 T
2 12 Q
0.3 (GAs operate on a number of potential solutions, called a population, consisting of) 135.65 308.67 P
2.4 (some encoding of the parameter set simultaneously) 135.65 294.67 P
2.4 (. T) 395.08 294.67 P
2.4 (ypically) 409.97 294.67 P
2.4 (, a population is) 447.83 294.67 P
0.25 (composed of between 30 and 100 individuals, although, a variant called the micro) 135.65 280.67 P
1.11 (GA uses very small populations, ~10 individuals, with a restrictive reproduction) 135.65 266.67 P
(and replacement strategy in an attempt to reach real-time execution [2].) 135.65 252.67 T
0.4 (The most commonly used representation of chromosomes in the GA is that of the) 135.65 226.67 P
2.36 (single-level binary string. Here, each decision variable in the parameter set is) 135.65 212.67 P
0.23 (encoded as a binary string and these are concatenated to form a chromosome. The) 135.65 198.67 P
1.64 (use of Gray coding has been advocated as a method of overcoming the hidden) 135.65 184.67 P
4.2 (representational bias in conventional binary representation as the Hamming) 135.65 170.67 P
1.13 (distance between adjacent values is constant [3]. Empirical evidence of Caruana) 135.65 156.67 P
1.94 (and Schaf) 135.65 142.67 P
1.94 (fer [4] suggests that lar) 185 142.67 P
1.94 (ge Hamming distances in the representational) 303.11 142.67 P
5.36 (mapping between adjacent values, as is the case in the standard binary) 135.65 128.67 P
3.42 (representation, can result in the search process being deceived or unable to) 135.65 114.67 P
63.65 96.95 531.65 744.95 C
133.38 360.67 531.65 620.95 C
162.43 380.97 502.59 600.65 R
7 X
0 K
V
2 12 Q
0 X
(procedure GA) 198.43 592.65 T
(begin) 198.43 577.65 T
(t = 0;) 243.43 562.65 T
(initialize P\050t\051;) 243.43 547.65 T
(evaluate P\050t\051;) 243.43 532.65 T
(while not finished do) 243.43 517.65 T
(begin) 243.43 502.65 T
(t = t + 1;) 315.43 487.65 T
(select P\050t\051 from P\050t-1\051;) 315.43 472.65 T
(reproduce pairs in P\050t\051;) 315.43 457.65 T
(evaluate P\050t\051;) 315.43 442.65 T
(end) 243.43 427.65 T
(end.) 198.43 412.65 T
5 F
(Figure 1: A Simple Genetic Algorithm) 234.43 386.65 T
146.89 370.34 518.14 611.28 R
0.5 H
2 Z
N
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "6" 7
%%Page: "7" 7
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-7) 518.33 61.29 T
2 12 Q
0.64 (ef) 135.65 736.95 P
0.64 (\336ciently locate the global minimum. A further approach of Schmitendor) 144.75 736.95 P
0.64 (gf) 496.04 736.95 P
0 F
0.64 (et-al) 509.66 736.95 P
2 F
5.3 ([5], is the use of logarithmic scaling in the conversion of binary-coded) 135.65 722.95 P
3.46 (chromosomes to their real phenotypic values. Although the precision of the) 135.65 708.95 P
1.48 (parameter values is possibly less consistent over the desired range, in problems) 135.65 694.95 P
0.3 (where the spread of feasible parameters is unknown, a lar) 135.65 680.95 P
0.3 (ger search space may be) 413.9 680.95 P
0.51 (covered with the same number of bits than a linear mapping scheme allowing the) 135.65 666.95 P
-0.2 (computational burden of exploring unknown search spaces to be reduced to a more) 135.65 652.95 P
(manageable level.) 135.65 638.95 T
0.33 (Whilst binary-coded GAs are most commonly used, there is an increasing interest) 135.65 612.95 P
0.52 (in alternative encoding strategies, such as integer and real-valued representations.) 135.65 598.95 P
1.37 (For some problem domains, it is ar) 135.65 584.95 P
1.37 (gued that the binary representation is in fact) 311.22 584.95 P
1.28 (deceptive in that it obscures the nature of the search [6]. In the subset selection) 135.65 570.95 P
0.8 (problem [7], for example, the use of an integer representation and look-up tables) 135.65 556.95 P
5.49 (provides a convenient and natural way of expressing the mapping from) 135.65 542.95 P
(representation to problem domain.) 135.65 528.95 T
0.06 (The use of real-valued genes in GAs is claimed by W) 135.65 502.95 P
0.06 (right [8] to of) 392.27 502.95 P
0.06 (fer a number of) 457.2 502.95 P
1.02 (advantages in numerical function optimization over binary encodings. Ef) 135.65 488.95 P
1.02 (\336ciency) 493.68 488.95 P
0.45 (of the GA is increased as there is no need to convert chromosomes to phenotypes) 135.65 474.95 P
-0.02 (before each function evaluation; less memory is required as ef) 135.65 460.95 P
-0.02 (\336cient \337oating-point) 433.38 460.95 P
-0.03 (internal computer representations can be used directly; there is no loss in precision) 135.65 446.95 P
1.89 (by discretisation to binary or other values; and there is greater freedom to use) 135.65 432.95 P
0.23 (dif) 135.65 418.95 P
0.23 (ferent genetic operators. The use of real-valued encodings is described in detail) 148.76 418.95 P
0.08 (by Michalewicz [9] and in the literature on Evolution Strategies \050see, for example,) 135.65 404.95 P
([10]\051.) 135.65 390.95 T
1.85 (Having decided on the representation, the \336rst step in the SGA is to create an) 135.65 364.95 P
0.93 (initial population. This is usually achieved by generating the required number of) 135.65 350.95 P
0.95 (individuals using a random number generator that uniformly distributes numbers) 135.65 336.95 P
1.57 (in the desired range. For example, with a binary population of) 135.65 322.95 P
0 F
1.57 (N) 453 322.95 P
0 10 Q
1.3 (ind) 461 319.95 P
2 12 Q
1.57 ( individuals) 473.77 322.95 P
1.57 (whose chromosomes are) 135.65 308.95 P
0 F
1.57 (L) 261.27 308.95 P
0 10 Q
1.31 (ind) 267.94 305.95 P
2 12 Q
1.57 ( bits long,) 280.71 308.95 P
0 F
1.57 (N) 336.08 308.95 P
0 10 Q
1.31 (ind) 344.08 305.95 P
4 12 Q
1.57 (\264) 361.42 308.95 P
0 F
1.57 (L) 372.58 308.95 P
0 10 Q
1.31 (ind) 379.24 305.95 P
2 12 Q
1.57 ( random numbers uniformly) 392.02 308.95 P
(distributed from the set {0, 1} would be produced.) 135.65 294.95 T
3.16 (A variation is the) 135.65 268.95 P
0 F
3.16 (extended random initialisation) 234.23 268.95 P
2 F
3.16 ( procedure of Bramlette [6]) 387.8 268.95 P
1.02 (whereby a number of random initialisations are tried for each individual and the) 135.65 254.95 P
0.74 (one with the best performance is chosen for the initial population. Other users of) 135.65 240.95 P
-0.01 (GAs have seeded the initial population with some individuals that are known to be) 135.65 226.95 P
2.31 (in the vicinity of the global minimum \050see, for example, [1) 135.65 212.95 P
2.31 (1] and [12]\051. This) 440.12 212.95 P
3.22 (approach is, of course, only applicable if the nature of the problem is well) 135.65 198.95 P
-0.16 (understood beforehand or if the GA is used in conjunction with a knowledge based) 135.65 184.95 P
(system.) 135.65 170.95 T
5.61 (The GA T) 135.65 144.95 P
5.61 (oolbox supports binary) 195.31 144.95 P
5.61 (, integer and \337oating-point chromosome) 316.35 144.95 P
3.8 (representations. Binary and integer populations may be initialised using the) 135.65 130.95 P
1.9 (T) 135.65 116.95 P
1.9 (oolbox function to create binary populations,) 142.14 116.95 P
3 F
4.55 (crtbp) 372.38 116.95 P
2 F
1.9 (. An additional function,) 408.36 116.95 P
3 F
3.25 (crtbase) 135.65 102.95 P
2 F
1.35 (, is provided that builds a vector describing the integer representation) 186.02 102.95 P
FMENDPAGE
%%EndPage: "7" 8
%%Page: "8" 8
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-8) 518.33 61.29 T
2 12 Q
3.99 (used. Real-valued populations may be initialised with the function) 135.65 736.95 P
3 F
9.57 (crtrp) 492.67 736.95 P
2 F
3.99 (.) 528.65 736.95 P
2.54 (Conversion between binary strings and real values is provided by the routine) 135.65 722.95 P
3 F
(bs2rv) 135.65 708.95 T
2 F
( that supports the use of Gray codes and logarithmic scaling.) 171.63 708.95 T
1 16 Q
(The Objective and Fitness Functions) 135.65 680.29 T
2 12 Q
2.47 (The objective function is used to provide a measure of how individuals have) 135.65 652.95 P
-0.11 (performed in the problem domain. In the case of a minimization problem, the most) 135.65 638.95 P
1.87 (\336t individuals will have the lowest numerical value of the associated objective) 135.65 624.95 P
0.17 (function. This raw measure of \336tness is usually only used as an intermediate stage) 135.65 610.95 P
0.36 (in determining the relative performance of individuals in a GA. Another function,) 135.65 596.95 P
0.05 (the) 135.65 582.95 P
0 F
0.05 (\336tness function) 153.35 582.95 P
2 F
0.05 (, is normally used to transform the objective function value into) 225.7 582.95 P
(a measure of relative \336tness [13], thus:) 135.65 568.95 T
-0.29 (where) 135.65 514.76 P
0 F
-0.29 (f) 167.66 514.76 P
2 F
-0.29 ( is the objective function,) 170.99 514.76 P
0 F
-0.29 (g) 294.13 514.76 P
2 F
-0.29 ( transforms the value of the objective function to) 300.13 514.76 P
2.1 (a non-negative number and) 135.65 500.76 P
0 F
2.1 (F) 277.95 500.76 P
2 F
2.1 ( is the resulting relative \336tness. This mapping is) 285.28 500.76 P
1.97 (always necessary when the objective function is to be minimized as the lower) 135.65 486.76 P
3.03 (objective function values correspond to \336tter individuals. In many cases, the) 135.65 472.76 P
-0.29 (\336tness function value corresponds to the number of of) 135.65 458.76 P
-0.29 (fspring that an individual can) 392.24 458.76 P
0.33 (expect to produce in the next generation. A commonly used transformation is that) 135.65 444.76 P
1.03 (of proportional \336tness assignment \050see, for example, [1]\051. The individual \336tness,) 135.65 430.76 P
0 F
1.4 (F\050x) 135.65 416.76 P
0 10 Q
1.17 (i) 152.29 413.76 P
0 12 Q
1.4 (\051) 155.07 416.76 P
2 F
1.4 (, of each individual is computed as the individual\325) 159.07 416.76 P
1.4 (s raw performance,) 409.79 416.76 P
0 F
1.4 (f\050x) 509.22 416.76 P
0 10 Q
1.17 (i) 521.88 413.76 P
0 12 Q
1.4 (\051) 524.66 416.76 P
2 F
1.4 (,) 528.65 416.76 P
(relative to the whole population, i.e.,) 135.65 402.76 T
(,) 380.93 365.33 T
1.36 (where) 135.65 304.51 P
0 F
1.36 (N) 169.3 304.51 P
0 10 Q
1.13 (ind) 177.3 301.51 P
2 12 Q
1.36 ( is the population size and) 190.08 304.51 P
0 F
1.36 (x) 326.15 304.51 P
0 10 Q
1.13 (i) 331.47 301.51 P
2 12 Q
1.36 ( is the phenotypic value of individual) 334.25 304.51 P
0 F
1.36 (i) 525.32 304.51 P
2 F
1.36 (.) 528.65 304.51 P
1.87 (Whilst this \336tness assignment ensures that each individual has a probability of) 135.65 290.51 P
3.54 (reproducing according to its relative \336tness, it fails to account for negative) 135.65 276.51 P
(objective function values.) 135.65 262.51 T
0.15 (A linear transformation which of) 135.65 236.51 P
0.15 (fsets the objective function [1] is often used prior) 293.92 236.51 P
(to \336tness assignment, such that,) 135.65 222.51 T
0.2 (where) 135.65 168.32 P
0 F
0.2 (a) 168.15 168.32 P
2 F
0.2 ( is a positive scaling factor if the optimization is maximizing and negative) 174.14 168.32 P
-0.1 (if we are minimizing. The of) 135.65 154.32 P
-0.1 (fset) 272.83 154.32 P
0 F
-0.1 (b) 293.04 154.32 P
2 F
-0.1 ( is used to ensure that the resulting \336tness values) 299.04 154.32 P
(are non-negative.) 135.65 140.32 T
288.09 536.76 379.21 550.95 C
0 12 Q
0 X
0 K
(F) 289.09 541.75 T
(x) 304.22 541.75 T
4 F
(\050) 299.12 541.75 T
(\051) 310.16 541.75 T
0 F
(g) 334.73 541.75 T
(f) 348.54 541.75 T
(x) 359.68 541.75 T
4 F
(\050) 354.58 541.75 T
(\051) 365.61 541.75 T
(\050) 343.44 541.75 T
(\051) 372.21 541.75 T
(=) 322.15 541.75 T
-8.35 24.95 603.65 816.95 C
283.37 326.51 380.93 384.76 C
0 12 Q
0 X
0 K
(F) 284.37 365.33 T
(x) 299.5 365.33 T
0 9 Q
(i) 305.29 361.55 T
4 12 Q
(\050) 294.4 365.33 T
(\051) 308.4 365.33 T
0 F
(f) 343.44 375.55 T
(x) 354.58 375.55 T
0 9 Q
(i) 360.36 371.77 T
4 12 Q
(\050) 349.48 375.55 T
(\051) 363.47 375.55 T
0 F
(f) 352.9 343.76 T
(x) 364.04 343.76 T
0 9 Q
(i) 369.83 339.98 T
4 12 Q
(\050) 358.94 343.76 T
(\051) 372.93 343.76 T
0 9 Q
(i) 333.98 329.46 T
2 F
(1) 347.41 329.46 T
4 F
(=) 339.47 329.46 T
0 F
(N) 335.47 360.27 T
0 6 Q
(i) 341.82 357.82 T
(n) 343.94 357.82 T
(d) 347.4 357.82 T
4 18 Q
(\345) 336.52 340.55 T
4 12 Q
(=) 320.39 365.33 T
333.98 367.92 378.68 367.92 2 L
0.33 H
0 Z
N
-8.35 24.95 603.65 816.95 C
285.65 190.32 381.65 204.51 C
0 12 Q
0 X
0 K
(F) 286.65 195.31 T
(x) 301.79 195.31 T
4 F
(\050) 296.68 195.31 T
(\051) 307.72 195.31 T
0 F
(a) 332.3 195.31 T
(f) 339 195.31 T
(x) 350.14 195.31 T
4 F
(\050) 345.04 195.31 T
(\051) 356.07 195.31 T
0 F
(b) 374.65 195.31 T
4 F
(+) 365.07 195.31 T
(=) 319.71 195.31 T
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "8" 9
%%Page: "9" 9
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-9) 518.33 61.29 T
2 12 Q
0.91 (The linear scaling and of) 135.65 736.95 P
0.91 (fsetting outlined above is, however) 258.3 736.95 P
0.91 (, susceptible to rapid) 429.66 736.95 P
6.1 (conver) 135.65 722.95 P
6.1 (gence. The) 168.07 722.95 P
0 F
6.1 (selection) 235.88 722.95 P
2 F
6.1 ( algorithm \050see below\051 selects individuals for) 278.52 722.95 P
3.81 (reproduction on the basis of their relative \336tness. Using linear scaling, the) 135.65 708.95 P
2.09 (expected number of of) 135.65 694.95 P
2.09 (fspring is approximately proportional to that individuals) 249.94 694.95 P
0.83 (performance. As there is no constraint on an individual\325) 135.65 680.95 P
0.83 (s performance in a given) 409.76 680.95 P
6.32 (generation, highly \336t individuals in early generations can dominate the) 135.65 666.95 P
5.59 (reproduction causing rapid conver) 135.65 652.95 P
5.59 (gence to possibly sub-optimal solutions.) 316.4 652.95 P
0.26 (Similarly) 135.65 638.95 P
0.26 (, if there is little deviation in the population, then scaling provides only a) 179.52 638.95 P
(small bias towards the most \336t individuals.) 135.65 624.95 T
0.33 (Baker [14] suggests that by limiting the reproductive range, so that no individuals) 135.65 598.95 P
-0.13 (generate an excessive number of of) 135.65 584.95 P
-0.13 (fspring, prevents premature conver) 304.27 584.95 P
-0.13 (gence. Here,) 471.52 584.95 P
0.97 (individuals are assigned a \336tness according to their rank in the population rather) 135.65 570.95 P
0.72 (than their raw performance. One variable,) 135.65 556.95 P
0 F
0.72 (MAX) 343.76 556.95 P
2 F
0.72 (, is used to determine the bias, or) 368.41 556.95 P
0 F
0.65 (selective pr) 135.65 542.95 P
0.65 (essur) 190.81 542.95 P
0.65 (e) 215.68 542.95 P
2 F
0.65 (, towards the most \336t individuals and the \336tness of the others is) 221.01 542.95 P
(determined by the following rules:) 135.65 528.95 T
(\245) 157.25 502.95 T
0 F
(MIN) 164.44 502.95 T
2 F
( = 2.0 -) 186.43 502.95 T
0 F
(MAX) 224.17 502.95 T
2 F
(\245) 157.25 482.95 T
0 F
(INC) 164.44 482.95 T
2 F
( = 2.0) 184.44 482.95 T
4 F
(\264) 215.19 482.95 T
2 F
( \050) 221.77 482.95 T
0 F
(MAX) 228.76 482.95 T
2 F
( -1.0\051 /) 253.41 482.95 T
0 F
(N) 288.72 482.95 T
0 10 Q
(ind) 296.72 479.95 T
2 12 Q
(\245) 157.25 462.95 T
0 F
(LOW) 164.44 462.95 T
2 F
( =) 189.76 462.95 T
0 F
(INC) 202.52 462.95 T
2 F
( / 2.0) 222.52 462.95 T
2.81 (where) 135.65 442.95 P
0 F
2.81 (MIN) 170.75 442.95 P
2 F
2.81 ( is the lower bound,) 192.74 442.95 P
0 F
2.81 (INC) 304.71 442.95 P
2 F
2.81 ( is the dif) 324.7 442.95 P
2.81 (ference between the \336tness of) 377.88 442.95 P
0.97 (adjacent individuals and) 135.65 428.95 P
0 F
0.97 (LOW) 258.13 428.95 P
2 F
0.97 ( is the expected number of trials \050number of times) 283.45 428.95 P
1.2 (selected\051 of the least \336t individual.) 135.65 414.95 P
0 F
1.2 (MAX) 311.73 414.95 P
2 F
1.2 ( is typically chosen in the interval [1.1,) 336.38 414.95 P
0.66 (2.0]. Hence, for a population size of) 135.65 400.95 P
0 F
0.66 (N) 316.12 400.95 P
0 10 Q
0.55 (ind) 324.11 397.95 P
2 12 Q
0.66 ( = 40 and) 336.89 400.95 P
0 F
0.66 (MAX) 387.59 400.95 P
2 F
0.66 ( = 1.1, we obtain) 412.24 400.95 P
0 F
0.66 (MIN) 499.24 400.95 P
2 F
0.66 ( =) 521.23 400.95 P
-0.18 (0.9,) 135.65 386.95 P
0 F
-0.18 (INC) 156.46 386.95 P
2 F
-0.18 ( = 0.05 and) 176.45 386.95 P
0 F
-0.18 (LOW) 232.81 386.95 P
2 F
-0.18 ( = 0.025. The \336tness of individuals in the population may) 258.13 386.95 P
(also be calculated directly as,) 135.65 372.95 T
(,) 439.73 335.53 T
(where) 135.65 299.28 T
0 F
(x) 167.95 299.28 T
0 10 Q
(i) 173.27 296.28 T
2 12 Q
( is the position in the ordered population of individual) 176.05 299.28 T
0 F
(i) 437.9 299.28 T
2 F
(.) 441.24 299.28 T
-0.04 (Objective functions must be created by the user) 135.65 273.28 P
-0.04 (, although a number of example m-) 363.03 273.28 P
0.7 (\336les are supplied with the T) 135.65 259.28 P
0.7 (oolbox that implement common test functions. These) 271.91 259.28 P
0.98 (objective functions all have the \336lename pre\336x) 135.65 245.28 P
3 F
2.36 (obj) 370.71 245.28 P
2 F
0.98 (. The T) 392.3 245.28 P
0.98 (oolbox supports both) 428.4 245.28 P
1.65 (linear and non-linear ranking methods,) 135.65 231.28 P
3 F
3.97 (ranking) 333.11 231.28 P
2 F
1.65 (, and includes a simple linear) 383.48 231.28 P
1.26 (scaling function,) 135.65 217.28 P
3 F
3.02 (scaling) 221.11 217.28 P
2 F
1.26 (, for completeness. It should be noted that the linear) 271.49 217.28 P
-0.14 (scaling function is not suitable for use with objective functions that return negative) 135.65 203.28 P
(\336tness values.) 135.65 189.28 T
1 16 Q
(Selection) 135.65 160.61 T
2 12 Q
0.46 (Selection is the process of determining the number of times, or) 135.65 133.28 P
0 F
0.46 (trials) 445.13 133.28 P
2 F
0.46 (, a particular) 470.46 133.28 P
1.43 (individual is chosen for reproduction and, thus, the number of of) 135.65 119.28 P
1.43 (fspring that an) 459.51 119.28 P
224.57 321.28 439.73 354.95 C
0 12 Q
0 X
0 K
(F) 225.57 335.53 T
(x) 240.7 335.53 T
0 9 Q
(i) 246.49 331.75 T
4 12 Q
(\050) 235.6 335.53 T
(\051) 249.59 335.53 T
2 F
(2) 274.17 335.53 T
0 F
(M) 292.75 335.53 T
(A) 303.45 335.53 T
(X) 311.48 335.53 T
4 F
(-) 283.17 335.53 T
2 F
(2) 331.39 335.53 T
0 F
(M) 345.2 335.53 T
(A) 355.89 335.53 T
(X) 363.93 335.53 T
2 F
(1) 383.84 335.53 T
4 F
(-) 374.26 335.53 T
(\050) 340.1 335.53 T
(\051) 390.45 335.53 T
0 F
(x) 404.51 345.75 T
0 9 Q
(i) 410.29 341.97 T
2 12 Q
(1) 425.37 345.75 T
4 F
(-) 415.79 345.75 T
0 F
(N) 398.14 327.91 T
0 9 Q
(i) 406.61 324.13 T
(n) 409.63 324.13 T
(d) 414.66 324.13 T
2 12 Q
(1) 431.73 327.91 T
4 F
(-) 422.15 327.91 T
(+) 321.81 335.53 T
(=) 261.59 335.53 T
398.14 338.12 437.48 338.12 2 L
0.33 H
0 Z
N
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "9" 10
%%Page: "10" 10
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-10) 513.33 61.29 T
2 12 Q
-0.28 (individual will produce. The selection of individuals can be viewed as two separate) 135.65 736.95 P
(processes:) 135.65 722.95 T
(1\051) 135.65 696.95 T
0.93 (determination of the number of trials an individual can expect to receive,) 171.65 696.95 P
(and) 171.65 682.95 T
(2\051) 135.65 662.95 T
2.6 (conversion of the expected number of trials into a discrete number of) 171.65 662.95 P
(of) 171.65 648.95 T
(fspring.) 181.42 648.95 T
-0.07 (The \336rst part is concerned with the transformation of raw \336tness values into a real-) 135.65 628.95 P
0.47 (valued expectation of an individual\325) 135.65 614.95 P
0.47 (s probability to reproduce and is dealt with in) 310.06 614.95 P
0.51 (the previous subsection as \336tness assignment. The second part is the probabilistic) 135.65 600.95 P
-0.19 (selection of individuals for reproduction based on the \336tness of individuals relative) 135.65 586.95 P
3.05 (to one another and is sometimes known as) 135.65 572.95 P
0 F
3.05 (sampling) 365.89 572.95 P
2 F
3.05 (. The remainder of this) 409.87 572.95 P
2.11 (subsection will review some of the more popular selection methods in current) 135.65 558.95 P
(usage.) 135.65 544.95 T
-0.17 (Baker [15] presented three measures of performance for selection algorithms,) 135.65 518.95 P
0 F
-0.17 (bias) 508.66 518.95 P
2 F
-0.17 (,) 528.65 518.95 P
0 F
3.37 (spr) 135.65 504.95 P
3.37 (ead) 150.53 504.95 P
2 F
3.37 ( and) 167.85 504.95 P
0 F
3.37 (ef\336ciency) 197.9 504.95 P
2 F
3.37 (. Bias is de\336ned as the absolute dif) 242.41 504.95 P
3.37 (ference between an) 432.34 504.95 P
4.34 (individual\325) 135.65 490.95 P
4.34 (s actual and expected selection probability) 187.63 490.95 P
4.34 (. Optimal zero bias is) 412.04 490.95 P
1.03 (therefore achieved when an individual\325) 135.65 476.95 P
1.03 (s selection probability equals its expected) 326.95 476.95 P
(number of trials.) 135.65 462.95 T
-0.05 (Spread is the range in the possible number of trials that an individual may achieve.) 135.65 436.95 P
0.71 (If) 135.65 422.95 P
0 F
0.71 (f\050i\051) 147.34 422.95 P
2 F
0.71 ( is the actual number of trials that individual) 162 422.95 P
0 F
0.71 (i) 383.91 422.95 P
2 F
0.71 ( receives, then the \322minimum) 387.24 422.95 P
(spread\323 is the smallest spread that theoretically permits zero bias, i.e.) 135.65 408.95 T
0.3 (where) 135.65 321.65 P
0 F
0.3 (et\050i\051) 168.24 321.65 P
2 F
0.3 ( is the expected number of trials of individual) 188.23 321.65 P
0 F
0.3 (i) 412.42 321.65 P
2 F
0.3 (,) 415.76 321.65 P
0.3 ( is the \337oor of) 463.16 321.65 P
1.64 (et\050i\051 and) 135.65 307.65 P
1.64 ( is the ceil. Thus, while bias is an indication of accuracy) 223.32 307.65 P
1.64 (, the) 509.36 307.65 P
(spread of a selection method measures its consistency) 135.65 293.65 T
(.) 393.02 293.65 T
0.88 (The desire for ef) 135.65 267.65 P
0.88 (\336cient selection methods is motivated by the need to maintain a) 217.67 267.65 P
1.72 (GAs overall time complexity) 135.65 253.65 P
1.72 (. It has been shown in the literature that the other) 279.61 253.65 P
4.96 (phases of a GA \050excluding the actual objective function evaluations\051 are) 135.65 239.65 P
1 (O\050L) 135.65 225.65 P
2 10 Q
0.83 (ind) 155.63 222.65 P
2 12 Q
1 (.N) 168.4 225.65 P
2 10 Q
0.83 (ind) 180.06 222.65 P
2 12 Q
1 (\051 or better time complexity) 192.83 225.65 P
1 (, where L) 324.64 225.65 P
2 10 Q
0.83 (ind) 372.27 222.65 P
2 12 Q
1 ( is the length of an individual) 385.05 225.65 P
0.71 (and N) 135.65 211.65 P
2 10 Q
0.59 (ind) 165.33 208.65 P
2 12 Q
0.71 ( is the population size. The selection algorithm should thus achieve zero) 178.1 211.65 P
1.51 (bias whilst maintaining a minimum spread and not contributing to an increased) 135.65 197.65 P
(time complexity of the GA.) 135.65 183.65 T
1 14 Q
(Roulette Wheel Selection Methods) 135.65 156.31 T
2 12 Q
8.61 (Many selection techniques employ a \322roulette wheel\323 mechanism to) 135.65 129.65 P
-0.14 (probabilistically select individuals based on some measure of their performance. A) 135.65 115.65 P
2.72 (real-valued interval,) 135.65 101.65 P
0 F
2.72 (Sum) 240.67 101.65 P
2 F
2.72 (, is determined as either the sum of the individuals\325) 261.32 101.65 P
261.26 343.65 406.04 390.95 C
0 12 Q
0 X
0 K
(f) 262.26 364.71 T
(i) 273.4 364.71 T
4 F
(\050) 268.3 364.71 T
(\051) 277.34 364.71 T
0 F
(e) 312.75 365.19 T
(t) 318.78 365.19 T
(i) 329.92 365.19 T
4 F
(\050) 324.82 365.19 T
(\051) 333.86 365.19 T
0 F
(e) 357.85 365.19 T
(t) 363.89 365.19 T
(i) 375.03 365.19 T
4 F
(\050) 369.92 365.19 T
(\051) 378.97 365.19 T
(,) 345.86 365.19 T
(\376) 394.67 350.05 T
(\375) 394.67 362.17 T
(\374) 394.67 374.29 T
(\356) 299.88 350.05 T
(\355) 299.88 362.17 T
(\354) 299.88 374.29 T
(\316) 286.33 364.71 T
307.75 362.2 307.75 373.4 2 L
0.33 H
0 Z
N
307.75 362.2 310.75 362.2 2 L
N
343.86 362.2 343.86 373.4 2 L
N
343.86 362.2 340.86 362.2 2 L
N
352.85 362.2 352.85 373.4 2 L
N
352.85 373.4 355.85 373.4 2 L
N
388.96 362.2 388.96 373.4 2 L
N
388.96 373.4 385.96 373.4 2 L
N
-8.35 24.95 603.65 816.95 C
422.05 316.65 463.16 330.85 C
0 12 Q
0 X
0 K
(e) 429.05 321.65 T
(t) 435.08 321.65 T
(i) 446.23 321.65 T
4 F
(\050) 441.12 321.65 T
(\051) 450.17 321.65 T
424.05 318.65 424.05 329.85 2 L
0.33 H
0 Z
N
424.05 318.65 427.05 318.65 2 L
N
460.16 318.65 460.16 329.85 2 L
N
460.16 318.65 457.16 318.65 2 L
N
-8.35 24.95 603.65 816.95 C
182.22 302.65 223.32 316.85 C
0 12 Q
0 X
0 K
(e) 189.22 307.65 T
(t) 195.25 307.65 T
(i) 206.39 307.65 T
4 F
(\050) 201.29 307.65 T
(\051) 210.33 307.65 T
184.22 304.65 184.22 315.85 2 L
0.33 H
0 Z
N
184.22 315.85 187.22 315.85 2 L
N
220.32 304.65 220.32 315.85 2 L
N
220.32 315.85 217.32 315.85 2 L
N
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "10" 11
%%Page: "11" 11
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-11) 513.33 61.29 T
2 12 Q
1.17 (expected selection probabilities or the sum of the raw \336tness values over all the) 135.65 736.95 P
0.26 (individuals in the current population. Individuals are then mapped one-to-one into) 135.65 722.95 P
1.69 (contiguous intervals in the range [0,) 135.65 708.95 P
0 F
1.69 (Sum) 321.33 708.95 P
2 F
1.69 (]. The size of each individual interval) 341.98 708.95 P
-0.14 (corresponds to the \336tness value of the associated individual. For example, in Fig. 2) 135.65 694.95 P
1.38 (the circumference of the roulette wheel is the sum of all six individual\325) 135.65 680.95 P
1.38 (s \336tness) 491.95 680.95 P
1.76 (values. Individual 5 is the most \336t individual and occupies the lar) 135.65 666.95 P
1.76 (gest interval,) 467.93 666.95 P
1.97 (whereas individuals 6 and 4 are the least \336t and have correspondingly smaller) 135.65 652.95 P
1.31 (intervals within the roulette wheel. T) 135.65 638.95 P
1.31 (o select an individual, a random number is) 318.59 638.95 P
1.88 (generated in the interval [0,) 135.65 624.95 P
0 F
1.88 (Sum) 280.29 624.95 P
2 F
1.88 (] and the individual whose segment spans the) 300.94 624.95 P
1.11 (random number is selected. This process is repeated until the desired number of) 135.65 610.95 P
(individuals have been selected.) 135.65 596.95 T
-0.04 (The basic roulette wheel selection method is stochastic sampling with replacement) 135.65 570.95 P
4.89 (\050SSR\051. Here, the segment size and selection probability remain the same) 135.65 556.95 P
3.36 (throughout the selection phase and individuals are selected according to the) 135.65 542.95 P
0.48 (procedure outlined above. SSR gives zero bias but a potentially unlimited spread.) 135.65 528.95 P
(Any individual with a segment size > 0 could entirely \336ll the next population.) 135.65 514.95 T
3.91 (Stochastic sampling with partial replacement \050SSPR\051 extends upon SSR by) 135.65 271.94 P
3.1 (resizing an individual\325) 135.65 257.94 P
3.1 (s segment if it is selected. Each time an individual is) 249.12 257.94 P
1.33 (selected, the size of its segment is reduced by 1.0. If the segment size becomes) 135.65 243.94 P
2.15 (negative, then it is set to 0.0. This provides an upper bound on the spread of) 135.65 229.94 P
-0.2 (. However) 176.76 215.94 P
-0.2 (, the lower bound is zero and the bias is higher than that of SSR.) 226.02 215.94 P
1.29 (Remainder sampling methods involve two distinct phases. In the integral phase,) 135.65 189.94 P
2.36 (individuals are selected deterministically according to the integer part of their) 135.65 175.94 P
0.4 (expected trials. The remaining individuals are then selected probabilistically from) 135.65 161.94 P
3.95 (the fractional part of the individuals expected values. Remainder stochastic) 135.65 147.94 P
1.82 (sampling with replacement \050RSSR\051 uses roulette wheel selection to sample the) 135.65 133.94 P
3.42 (individual not assigned deterministically) 135.65 119.94 P
3.42 (. During the roulette wheel selection) 340.02 119.94 P
3.29 (phase, individual\325) 135.65 105.94 P
3.29 (s fractional parts remain unchanged and, thus, compete for) 224.22 105.94 P
63.65 96.95 531.65 744.95 C
133.38 293.94 531.65 510.95 C
0.5 H
2 Z
0 X
0 K
90 450 70.87 70.87 332.51 420.22 A
332.51 491.09 332.51 420.22 2 L
N
332.51 420.22 282.91 370.61 2 L
N
332.51 420.22 384.95 466.76 2 L
N
332.51 420.22 394.88 389.74 2 L
N
2 12 Q
(1) 358.18 462.39 T
90 450 7.09 7.09 361.18 466.48 A
(3) 350.03 366.22 T
90 450 7.09 7.09 353.03 370.31 A
(2) 382.66 416.22 T
90 450 7.09 7.09 385.66 420.31 A
(4) 299.18 370.87 T
90 450 7.09 7.09 302.18 374.96 A
332.51 420.22 303.38 484.74 2 L
N
(5) 278.18 428.87 T
90 450 7.09 7.09 281.18 432.96 A
332.38 418.74 305.38 355.74 2 L
N
(6) 319.18 469.89 T
90 450 7.09 7.09 322.18 473.98 A
5 F
(Figure 2: Roulette Wheel Selection) 245.56 316.24 T
146.49 303.24 518.54 501.66 R
N
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
135.65 210.95 176.75 225.15 C
0 12 Q
0 X
0 K
(e) 142.65 215.94 T
(t) 148.68 215.94 T
(i) 159.82 215.94 T
4 F
(\050) 154.72 215.94 T
(\051) 163.76 215.94 T
137.65 212.95 137.65 224.15 2 L
0.33 H
0 Z
N
137.65 224.15 140.65 224.15 2 L
N
173.76 212.95 173.76 224.15 2 L
N
173.76 224.15 170.76 224.15 2 L
N
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "11" 12
%%Page: "12" 12
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-12) 513.33 61.29 T
2 12 Q
2.99 (selection between \322spins\323. RSSR provides zero bias and the spread is lower) 135.65 736.95 P
0.55 (bounded. The upper bound is limited only by the number of fractionally assigned) 135.65 722.95 P
2.87 (samples and the size of the integral part of an individual. For example, any) 135.65 708.95 P
-0.04 (individual with a fractional part > 0 could win all the samples during the fractional) 135.65 694.95 P
2.65 (phase. Remainder stochastic sampling without replacement \050RSSWR\051 sets the) 135.65 680.95 P
0.02 (fractional part of an individual\325) 135.65 666.95 P
0.02 (s expected values to zero if it is sampled during the) 285.62 666.95 P
2.51 (fractional phase. This gives RSSWR minimum spread, although this selection) 135.65 652.95 P
(method is biased in favour of smaller fractions.) 135.65 638.95 T
1 14 Q
(Stochastic Universal Sampling) 135.65 611.62 T
2 12 Q
1.84 (Stochastic universal sampling \050SUS\051 is a single-phase sampling algorithm with) 135.65 584.95 P
0.05 (minimum spread and zero bias. Instead of the single selection pointer employed in) 135.65 570.95 P
2.58 (roulette wheel methods, SUS uses) 135.65 556.95 P
0 F
2.58 (N) 315.09 556.95 P
2 F
2.58 ( equally spaced pointers, where) 323.09 556.95 P
0 F
2.58 (N) 489.84 556.95 P
2 F
2.58 ( is the) 497.84 556.95 P
1.13 (number of selections required. The population is shuf) 135.65 542.95 P
1.13 (\337ed randomly and a single) 399.86 542.95 P
1.43 (random number in the range [0) 135.65 528.95 P
0 F
1.43 (Sum) 296.11 528.95 P
2 F
1.43 (/) 316.77 528.95 P
0 F
1.43 (N) 320.1 528.95 P
2 F
1.43 (] is generated,) 328.1 528.95 P
0 F
1.43 (ptr) 402.99 528.95 P
2 F
1.43 (. The) 416.33 528.95 P
0 F
1.43 (N) 446.84 528.95 P
2 F
1.43 ( individuals are) 454.84 528.95 P
-0.2 (then chosen by generating the) 135.65 514.95 P
0 F
-0.2 (N) 280.87 514.95 P
2 F
-0.2 ( pointers spaced by 1, [) 288.87 514.95 P
0 F
-0.2 (ptr) 399.13 514.95 P
2 F
-0.2 (,) 412.64 514.95 P
0 F
-0.2 (ptr) 418.44 514.95 P
2 F
-0.2 (+1, ...,) 432.44 514.95 P
0 F
-0.2 (ptr) 465.79 514.95 P
2 F
-0.2 (+) 479.78 514.95 P
0 F
-0.2 (N) 486.55 514.95 P
2 F
-0.2 (-1], and) 494.55 514.95 P
1.84 (selecting the individuals whose \336tnesses span the positions of the pointers. An) 135.65 500.95 P
0.78 (individual is thus guaranteed to be selected a minimum of) 135.65 486.95 P
0.78 ( times and no) 465.02 486.95 P
1.34 (more than) 135.65 472.95 P
1.34 (, thus achieving minimum spread. In addition, as individuals) 230.74 472.95 P
(are selected entirely on their position in the population, SUS has zero bias.) 135.65 458.95 T
3.69 (The roulette wheel selection methods can all be implemented as O\050NlogN\051) 135.65 432.95 P
0.4 (although SUS is a simpler algorithm and has time complexity O\050N\051. The T) 135.65 418.95 P
0.4 (oolbox) 498.33 418.95 P
4.7 (supplies a stochastic universal sampling function,) 135.65 404.95 P
3 F
11.28 (sus) 404.69 404.95 P
2 F
4.7 (, and the stochastic) 426.28 404.95 P
(sampling with replacement algorithm,) 135.65 390.95 T
3 F
(rws) 321.2 390.95 T
2 F
(.) 342.79 390.95 T
1 16 Q
(Cr) 135.65 362.29 T
(ossover \050Recombination\051) 154.01 362.29 T
2 12 Q
-0.08 (The basic operator for producing new chromosomes in the GA is that of crossover) 135.65 334.95 P
-0.08 (.) 528.65 334.95 P
0.39 (Like its counterpart in nature, crossover produces new individuals that have some) 135.65 320.95 P
1.05 (parts of both parent\325) 135.65 306.95 P
1.05 (s genetic material. The simplest form of crossover is that of) 235.72 306.95 P
3.04 (single-point crossover) 135.65 292.95 P
3.04 (, described in the Overview of GAs. In this Section, a) 244.47 292.95 P
1.75 (number of variations on crossover are described and discussed and the relative) 135.65 278.95 P
(merits of each reviewed.) 135.65 264.95 T
1 14 Q
(Multi-point Cr) 135.65 237.62 T
(ossover) 224.4 237.62 T
2 12 Q
0.7 (For multi-point crossover) 135.65 210.95 P
0.7 (,) 259.16 210.95 P
0 F
0.7 (m) 265.86 210.95 P
2 F
0.7 ( crossover positions,) 274.52 210.95 P
0.7 (, where) 483.85 210.95 P
0 F
0.7 (k) 523.54 210.95 P
0 10 Q
0.58 (i) 528.87 207.95 P
2 12 Q
2.14 (are the crossover points and) 135.65 196.95 P
0 F
2.14 (l) 283.23 196.95 P
2 F
2.14 ( is the length of the chromosome, are chosen at) 286.57 196.95 P
0.08 (random with no duplicates and sorted into ascending order) 135.65 182.95 P
0.08 (. Then, the bits between) 416.75 182.95 P
-0.18 (successive crossover points are exchanged between the two parents to produce two) 135.65 168.95 P
423.91 481.96 465.02 496.16 C
0 12 Q
0 X
0 K
(e) 430.91 486.95 T
(t) 436.94 486.95 T
(i) 448.08 486.95 T
4 F
(\050) 442.98 486.95 T
(\051) 452.02 486.95 T
425.91 483.96 425.91 495.16 2 L
0.33 H
0 Z
N
425.91 483.96 428.91 483.96 2 L
N
462.02 483.96 462.02 495.16 2 L
N
462.02 483.96 459.02 483.96 2 L
N
-8.35 24.95 603.65 816.95 C
189.63 467.96 230.74 482.16 C
0 12 Q
0 X
0 K
(e) 196.63 472.95 T
(t) 202.66 472.95 T
(i) 213.8 472.95 T
4 F
(\050) 208.7 472.95 T
(\051) 217.74 472.95 T
191.63 469.96 191.63 481.16 2 L
0.33 H
0 Z
N
191.63 481.16 194.63 481.16 2 L
N
227.74 469.96 227.74 481.16 2 L
N
227.74 481.16 224.74 481.16 2 L
N
-8.35 24.95 603.65 816.95 C
377.89 204.32 483.85 220.16 C
0 12 Q
0 X
0 K
(k) 378.89 210.95 T
0 9 Q
(i) 384.68 207.17 T
2 12 Q
(1) 410.59 210.95 T
(2) 422.58 210.95 T
4 F
(\274) 434.58 210.95 T
0 F
(l) 452.57 210.95 T
2 F
(1) 468.49 210.95 T
4 F
(-) 458.91 210.95 T
(,) 416.59 210.95 T
(,) 428.58 210.95 T
(,) 446.57 210.95 T
({) 403.73 210.95 T
(}) 475.09 210.95 T
(\316) 390.17 210.95 T
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "12" 13
%%Page: "13" 13
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-13) 513.33 61.29 T
2 12 Q
0.51 (new of) 135.65 736.95 P
0.51 (fspring. The section between the \336rst allele position and the \336rst crossover) 168.91 736.95 P
(point is not exchanged between individuals. This process is illustrated in Fig. 3.) 135.65 722.95 T
0.94 (The idea behind multi-point, and indeed many of the variations on the crossover) 135.65 557.78 P
0.7 (operator) 135.65 543.78 P
0.7 (, is that the parts of the chromosome representation that contribute to the) 175.13 543.78 P
4.05 (most to the performance of a particular individual may not necessarily be) 135.65 529.78 P
0.41 (contained in adjacent substrings [16]. Further) 135.65 515.78 P
0.41 (, the disruptive nature of multi-point) 355.05 515.78 P
1.73 (crossover appears to encourage the exploration of the search space, rather than) 135.65 501.78 P
0.29 (favoring the conver) 135.65 487.78 P
0.29 (gence to highly \336t individuals early in the search, thus making) 229.93 487.78 P
(the search more robust [17].) 135.65 473.78 T
1 14 Q
(Uniform Cr) 135.65 446.44 T
(ossover) 206.51 446.44 T
2 12 Q
0.42 (Single and multi-point crossover de\336ne cross points as places between loci where) 135.65 419.78 P
1.9 (a chromosome can be split. Uniform crossover [18] generalises this scheme to) 135.65 405.78 P
0.75 (make every locus a potential crossover point. A crossover mask, the same length) 135.65 391.78 P
0.26 (as the chromosome structures is created at random and the parity of the bits in the) 135.65 377.78 P
1.13 (mask indicates which parent will supply the of) 135.65 363.78 P
1.13 (fspring with which bits. Consider) 366.88 363.78 P
(the following two parents, crossover mask and resulting of) 135.65 349.78 T
(fspring:) 416.9 349.78 T
3 F
(P) 143.73 323.78 T
3 10 Q
(1) 150.92 320.78 T
3 12 Q
(= 1 0 1 1 0 0 0 1 1 1) 186.25 323.78 T
(P) 143.73 305.78 T
3 10 Q
(2) 150.92 302.78 T
3 12 Q
(= 0 0 0 1 1 1 1 0 0 0) 186.25 305.78 T
(Mask) 143.73 287.78 T
(= 0 0 1 1 0 0 1 1 0 0) 186.25 287.78 T
(O) 143.73 269.78 T
3 10 Q
(1) 150.92 266.78 T
3 12 Q
(= 0 0 1 1 1 1 0 1 0 0) 186.25 269.78 T
(O) 143.73 251.78 T
3 10 Q
(2) 150.92 248.78 T
3 12 Q
(= 1 0 0 1 0 0 1 0 1 1) 186.25 251.78 T
2 F
3.65 (Here, the \336rst of) 135.65 221.78 P
3.65 (fspring,) 224.98 221.78 P
3 F
8.75 (O) 268.6 221.78 P
3 10 Q
7.29 (1) 275.79 218.78 P
2 12 Q
3.65 (, is produced by taking the bit from) 281.79 221.78 P
3 F
8.75 (P) 483.18 221.78 P
3 10 Q
7.29 (1) 490.38 218.78 P
2 12 Q
3.65 ( if the) 496.38 221.78 P
0.5 (corresponding mask bit is 1 or the bit from) 135.65 207.78 P
3 F
1.21 (P) 348.37 207.78 P
3 10 Q
1 (2) 355.57 204.78 P
2 12 Q
0.5 ( if the corresponding mask bit is 0.) 361.57 207.78 P
-0.28 (Of) 135.65 193.78 P
-0.28 (fspring) 148.09 193.78 P
3 F
-0.67 (O) 184.78 193.78 P
3 10 Q
-0.56 (2) 191.98 190.78 P
2 12 Q
-0.28 ( is created using the inverse of the mask or) 197.97 193.78 P
-0.28 (, equivalently) 399.82 193.78 P
-0.28 (, swapping) 464.05 193.78 P
3 F
-0.67 (P) 518.46 193.78 P
3 10 Q
-0.56 (1) 525.65 190.78 P
2 12 Q
(and) 135.65 179.78 T
3 F
(P) 155.96 179.78 T
3 10 Q
(2) 163.16 176.78 T
2 12 Q
(.) 169.16 179.78 T
0.08 (Uniform crossover) 135.65 153.78 P
0.08 (, like multi-point crossover) 225.51 153.78 P
0.08 (, has been claimed to reduce the bias) 355.21 153.78 P
2.24 (associated with the length of the binary representation used and the particular) 135.65 139.78 P
0.79 (coding for a given parameter set. This helps to overcome the bias in single-point) 135.65 125.78 P
0.58 (crossover towards short substrings without requiring precise understanding of the) 135.65 111.78 P
63.65 96.95 531.65 744.95 C
124.27 579.78 531.65 718.95 C
151.07 674.97 307.83 682.06 R
8 X
0 K
V
0.5 H
2 Z
0 X
N
151.07 646.62 307.83 653.71 R
4 X
V
0 X
N
164.13 689.14 164.13 639.54 2 L
N
190.26 689.14 190.26 639.54 2 L
N
242.51 689.14 242.51 639.54 2 L
N
278.44 689.14 278.44 639.54 2 L
N
301.3 689.14 301.3 639.54 2 L
N
360.08 674.97 373.15 682.06 R
8 X
V
0 X
N
373.15 646.62 399.28 653.71 R
8 X
V
0 X
N
399.27 674.97 451.53 682.06 R
8 X
V
0 X
N
451.53 646.62 487.45 653.71 R
8 X
V
0 X
N
487.45 674.97 510.32 682.06 R
8 X
V
0 X
N
510.32 646.62 516.85 653.71 R
8 X
V
0 X
N
373.15 674.97 399.28 682.06 R
4 X
V
0 X
N
451.53 674.97 487.45 682.06 R
4 X
V
0 X
N
510.32 674.97 516.85 682.06 R
4 X
V
0 X
N
360.08 646.62 373.15 653.71 R
4 X
V
0 X
N
399.27 646.62 451.53 653.71 R
4 X
V
0 X
N
487.45 646.62 510.32 653.71 R
4 X
V
0 X
N
335.49 667.65 347.02 664.34 335.49 661.03 335.49 664.34 4 Y
V
320.89 664.34 335.49 664.34 2 L
N
5 12 Q
(Figure 3: Multi-point Crossover \050m=5\051) 237.91 612.02 T
138 594.44 529.92 704.29 R
N
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "13" 14
%%Page: "14" 14
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-14) 513.33 61.29 T
2 12 Q
1.26 (signi\336cance of individual bits in the chromosome representation. Spears and De) 135.65 736.95 P
1.96 (Jong [19] have demonstrated how uniform crossover may be parameterised by) 135.65 722.95 P
0.09 (applying a probability to the swapping of bits. This extra parameter can be used to) 135.65 708.95 P
0.56 (control the amount of disruption during recombination without introducing a bias) 135.65 694.95 P
1.78 (towards the length of the representation used. When uniform crossover is used) 135.65 680.95 P
(with real-valued alleles, it is usually referred to as) 135.65 666.95 T
0 F
(discr) 378.13 666.95 T
(ete r) 401.67 666.95 T
(ecombination) 422.88 666.95 T
2 F
(.) 488.17 666.95 T
1 14 Q
(Other Cr) 135.65 639.62 T
(ossover Operators) 190.96 639.62 T
2 12 Q
-0.05 (A related crossover operator is that of) 135.65 612.95 P
0 F
-0.05 (shuf\337e) 319.45 612.95 P
2 F
-0.05 ( [20]. A single cross-point is selected,) 350.77 612.95 P
-0.24 (but before the bits are exchanged, they are randomly shuf) 135.65 598.95 P
-0.24 (\337ed in both parents. After) 409.03 598.95 P
-0.15 (recombination, the bits in the of) 135.65 584.95 P
-0.15 (fspring are unshuf) 287.92 584.95 P
-0.15 (\337ed. This too removes positional) 374.67 584.95 P
(bias as the bits are randomly reassigned each time crossover is performed.) 135.65 570.95 T
0.72 (The) 135.65 544.95 P
0 F
0.72 (r) 158.02 544.95 P
0.72 (educed surr) 162.24 544.95 P
0.72 (ogate) 219.47 544.95 P
2 F
0.72 ( operator [16] constrains crossover to always produce new) 246.12 544.95 P
2.89 (individuals wherever possible. Usually) 135.65 530.95 P
2.89 (, this is implemented by restricting the) 330.08 530.95 P
2.18 (location of crossover points such that crossover points only occur where gene) 135.65 516.95 P
(values dif) 135.65 502.95 T
(fer) 182.4 502.95 T
(.) 195.05 502.95 T
1 14 Q
(Intermediate Recombination) 135.65 475.62 T
2 12 Q
5.99 (Given a real-valued encoding of the chromosome structure, intermediate) 135.65 448.95 P
0.54 (recombination is a method of producing new phenotypes around and between the) 135.65 434.95 P
1.68 (values of the parents phenotypes [21]. Of) 135.65 420.95 P
1.68 (fspring are produced according to the) 343.71 420.95 P
(rule,) 135.65 406.95 T
(,) 391.24 379.75 T
2.92 (where) 135.65 351.04 P
4 F
2.92 (a) 170.87 351.04 P
2 F
2.92 ( is a scaling factor chosen uniformly at random over some interval,) 178.43 351.04 P
3.3 (typically [-0.25, 1.25] and) 135.65 337.04 P
0 F
3.3 (P) 277.1 337.04 P
0 10 Q
2.75 (1) 284.42 334.04 P
2 12 Q
3.3 ( and) 289.42 337.04 P
0 F
3.3 (P) 319.34 337.04 P
0 10 Q
2.75 (2) 326.67 334.04 P
2 12 Q
3.3 ( are the parent chromosomes \050see, for) 331.67 337.04 P
2.82 (example, [21]\051. Each variable in the of) 135.65 323.04 P
2.82 (fspring is the result of combining the) 337.52 323.04 P
-0.04 (variables in the parents according to the above expression with a new) 135.65 309.04 P
4 F
-0.04 (a) 470.88 309.04 P
2 F
-0.04 ( chosen for) 478.45 309.04 P
3.03 (each pair of parent genes. In geometric terms, intermediate recombination is) 135.65 295.04 P
273.05 373.04 391.24 388.95 C
0 12 Q
0 X
0 K
(O) 274.05 379.75 T
2 9 Q
(1) 283.17 375.99 T
0 12 Q
(P) 306.25 379.75 T
2 9 Q
(1) 314.04 375.99 T
4 12 Q
(a) 331.12 379.75 T
0 F
(P) 346.49 379.75 T
2 9 Q
(2) 354.28 375.99 T
0 12 Q
(P) 371.36 379.75 T
2 9 Q
(1) 379.15 375.99 T
4 12 Q
(-) 361.78 379.75 T
(\050) 341.39 379.75 T
(\051) 384.25 379.75 T
(\264) 321.53 379.75 T
(=) 293.67 379.75 T
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "14" 15
%%Page: "15" 15
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-15) 513.33 61.29 T
2 12 Q
1.47 (capable of producing new variables within a slightly lar) 135.65 736.95 P
1.47 (ger hypercube than that) 414.33 736.95 P
(de\336ned by the parents but constrained by the range of) 135.65 722.95 T
4 F
(a) 396.12 722.95 T
2 F
(. as shown in Fig 4.) 403.69 722.95 T
1 14 Q
(Line Recombination) 135.65 481.79 T
2 12 Q
0.13 (Line recombination [21] is similar to intermediate recombination, except that only) 135.65 455.12 P
0.29 (one value of) 135.65 441.12 P
4 F
0.29 (a) 198.79 441.12 P
2 F
0.29 ( is used in the recombination. Fig. 5 shows how line recombination) 206.36 441.12 P
0.88 (can generate any point on the line de\336ned by the parents within the limits of the) 135.65 427.12 P
(perturbation,) 135.65 413.12 T
4 F
(a,) 200.27 413.12 T
2 F
(for a recombination in two variables.) 213.83 413.12 T
1 14 Q
(Discussion) 135.65 165.83 T
2 12 Q
2.58 (The binary operators discussed in this Section have all, to some extent, used) 135.65 139.16 P
0.03 (disruption in the representation to help improve exploration during recombination.) 135.65 125.16 P
1.99 (Whilst these operators may be used with real-valued populations, the resulting) 135.65 111.16 P
63.65 96.95 531.65 744.95 C
133.38 505.12 531.65 718.95 C
205.79 685.03 209.1 696.57 212.41 685.03 209.1 685.03 4 Y
0 X
0 K
V
209.1 565.46 209.1 685.03 2 L
0.5 H
2 Z
N
1 X
90 450 5.32 5.32 249.85 655.82 G
0 X
90 450 5.32 5.32 249.85 655.82 A
230.36 590.27 315.4 675.31 R
8 X
N
325.12 572.18 336.66 568.87 325.12 565.56 325.12 568.87 4 Y
0 X
V
205.56 568.87 325.12 568.87 2 L
N
1 X
90 450 5.32 5.32 295.91 609.75 G
0 X
90 450 5.32 5.32 295.91 609.75 A
4 X
90 450 5.32 5.32 271.11 662.9 G
0 X
90 450 5.32 5.32 271.11 662.9 A
4 X
90 450 5.32 5.32 260.48 631.01 G
0 X
90 450 5.32 5.32 260.48 631.01 A
4 X
90 450 5.32 5.32 242.76 602.67 G
0 X
90 450 5.32 5.32 242.76 602.67 A
4 X
90 450 5.32 5.32 285.28 641.64 G
0 X
90 450 5.32 5.32 285.28 641.64 A
1 X
90 450 5.32 5.32 356.15 634.56 G
0 X
90 450 5.32 5.32 356.15 634.56 A
4 X
90 450 5.32 5.32 356.15 609.75 G
0 X
90 450 5.32 5.32 356.15 609.75 A
2 12 Q
(Gene1) 255.46 553.89 T
(Gene 2) 0 -270 197.02 611.53 TF
(Parents) 368.55 630.47 T
(Potential of) 368.55 605.66 T
(fspring) 423.97 605.66 T
(Area of possible of) 350.83 656.65 T
(fspring) 442.21 656.65 T
330.48 657.43 318.94 660.74 330.48 664.05 330.48 660.74 4 Y
V
347.29 660.74 330.48 660.74 2 L
N
5 F
(Figure 4: Geometric Ef) 186.7 529.94 T
(fect of Intermediate Recombination) 302.75 529.94 T
141.18 514.6 523.85 709.48 R
N
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
63.65 96.95 531.65 744.95 C
133.38 189.16 531.65 409.12 C
196.34 372.12 199.64 383.66 202.95 372.12 199.64 372.12 4 Y
0 X
0 K
V
199.64 252.55 199.64 372.12 2 L
0.5 H
2 Z
N
1 X
90 450 5.32 5.32 228.24 352.09 G
0 X
90 450 5.32 5.32 228.24 352.09 A
315.67 259.27 327.2 255.96 315.67 252.65 315.67 255.96 4 Y
V
196.1 255.96 315.67 255.96 2 L
N
1 X
90 450 5.32 5.32 299.08 281.22 G
0 X
90 450 5.32 5.32 299.08 281.22 A
4 X
90 450 5.32 5.32 221.15 359.14 G
0 X
90 450 5.32 5.32 221.15 359.14 A
4 X
90 450 5.32 5.32 255.87 324.45 G
0 X
90 450 5.32 5.32 255.87 324.45 A
4 X
90 450 5.32 5.32 239.55 340.03 G
0 X
90 450 5.32 5.32 239.55 340.03 A
1 X
90 450 5.32 5.32 346.69 321.65 G
0 X
90 450 5.32 5.32 346.69 321.65 A
4 X
90 450 5.32 5.32 346.69 296.85 G
0 X
90 450 5.32 5.32 346.69 296.85 A
2 12 Q
(Gene1) 246 240.98 T
(Gene 2) 0 -270 187.56 298.62 TF
(Parents) 359.09 317.56 T
(Potential of) 359.09 292.76 T
(fspring) 414.51 292.76 T
5 F
(Figure 5: Geometric Ef) 197.57 217.03 T
(fect of Line Recombination) 313.62 217.03 T
141.18 201.7 523.85 396.58 R
N
4 X
90 450 5.32 5.32 270.76 309.57 G
0 X
90 450 5.32 5.32 270.76 309.57 A
4 X
90 450 5.32 5.32 286.33 293.94 G
0 X
90 450 5.32 5.32 286.33 293.94 A
4 X
90 450 5.32 5.32 306.88 273.42 G
0 X
90 450 5.32 5.32 306.88 273.42 A
4 X
90 450 5.32 5.32 314.68 265.62 G
0 X
90 450 5.32 5.32 314.68 265.62 A
4 X
90 450 5.32 5.32 214.04 366.26 G
0 X
90 450 5.32 5.32 214.04 366.26 A
213.69 366.6 312.9 267.39 2 L
V
8 X
N
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "15" 16
%%Page: "16" 16
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-16) 513.33 61.29 T
2 12 Q
0.19 (changes in the genetic material after recombination would not extend to the actual) 135.65 736.95 P
0.54 (values of the decision variables, although of) 135.65 722.95 P
0.54 (fspring may) 350.19 722.95 P
0.54 (, of course, contain genes) 407.58 722.95 P
1.14 (from either parent. The intermediate and line recombination operators overcome) 135.65 708.95 P
3.39 (this limitation by acting on the decision variables themselves. Like uniform) 135.65 694.95 P
-0.23 (crossover) 135.65 680.95 P
-0.23 (, the real-valued operators may also be parameterised to provide a control) 181.13 680.95 P
4.94 (over the level of disruption introduced into of) 135.65 666.95 P
4.94 (fspring. For discrete-valued) 388.87 666.95 P
-0.07 (representations, variations on the recombination operators may be used that ensure) 135.65 652.95 P
(that only valid values are produced as a result of crossover [22].) 135.65 638.95 T
1.04 (The GA T) 135.65 612.95 P
1.04 (oolbox provides a number of crossover routines incorporating most of) 186.18 612.95 P
0.24 (the methods described above. Single-point, double-point and shuf) 135.65 598.95 P
0.24 (\337e crossover are) 452.58 598.95 P
0.73 (implemented in the T) 135.65 584.95 P
0.73 (oolbox functions) 239.92 584.95 P
3 F
1.74 (xovsp) 325.33 584.95 P
2 F
0.73 (,) 361.31 584.95 P
3 F
1.74 (xovdp) 368.03 584.95 P
2 F
0.73 ( and) 404.01 584.95 P
3 F
1.74 (xovsh) 428.77 584.95 P
2 F
0.73 (, respectively) 464.76 584.95 P
0.73 (,) 528.65 584.95 P
0.56 (and can operate on any chromosome representation. Reduced surrogate crossover) 135.65 570.95 P
3.17 (is supported with both single-point,) 135.65 556.95 P
3 F
7.62 (xovsprs) 324.77 556.95 P
2 F
3.17 (, and double-point,) 375.14 556.95 P
3 F
7.62 (xovdprs) 478.28 556.95 P
2 F
3.17 (,) 528.65 556.95 P
2.17 (crossover and with shuf) 135.65 542.95 P
2.17 (\337e crossover) 256.2 542.95 P
2.17 (,) 318.85 542.95 P
3 F
5.22 (xovshrs) 327.02 542.95 P
2 F
2.17 (. A further general multi-point) 377.39 542.95 P
1.09 (crossover routine,) 135.65 528.95 P
3 F
2.61 (xovmp) 226.75 528.95 P
2 F
1.09 (, is also provided. T) 262.73 528.95 P
1.09 (o support real-valued chromosome) 361.51 528.95 P
1.62 (representations, discrete, intermediate and line recombination operators are also) 135.65 514.95 P
1.57 (included. The discrete recombination operator) 135.65 500.95 P
1.57 (,) 362.95 500.95 P
3 F
3.77 (recdis) 370.52 500.95 P
2 F
1.57 (, performs crossover on) 413.69 500.95 P
1.86 (real-valued individuals in a similar manner to the uniform crossover operators.) 135.65 486.95 P
0.37 (Line and intermediate recombination are supported by the functions) 135.65 472.95 P
3 F
0.9 (reclin) 467.78 472.95 P
2 F
0.37 ( and) 510.96 472.95 P
3 F
0.26 (recint) 135.65 458.95 P
2 F
0.11 ( respectively) 178.82 458.95 P
0.11 (. A high-level entry function to all of the crossover operators) 239.1 458.95 P
(is provided by the function) 135.65 444.95 T
3 F
(recombin) 267.9 444.95 T
2 F
(.) 325.47 444.95 T
1 16 Q
(Mutation) 135.65 416.29 T
2 12 Q
1.09 (In natural evolution, mutation is a random process where one allele of a gene is) 135.65 388.95 P
2.75 (replaced by another to produce a new genetic structure. In GAs, mutation is) 135.65 374.95 P
0.53 (randomly applied with low probability) 135.65 360.95 P
0.53 (, typically in the range 0.001 and 0.01, and) 322.21 360.95 P
3.36 (modi\336es elements in the chromosomes. Usually considered as a background) 135.65 346.95 P
2.57 (operator) 135.65 332.95 P
2.57 (, the role of mutation is often seen as providing a guarantee that the) 175.13 332.95 P
0.45 (probability of searching any given string will never be zero and acting as a safety) 135.65 318.95 P
3.12 (net to recover good genetic material that may be lost through the action of) 135.65 304.95 P
(selection and crossover [1].) 135.65 290.95 T
2.61 (The ef) 135.65 264.95 P
2.61 (fect of mutation on a binary string is illustrated in Fig. 6 for a 10-bit) 169.01 264.95 P
0.05 (chromosome representing a real value decoded over the interval [0, 10] using both) 135.65 250.95 P
1.59 (standard and Gray coding and a mutation point of 3 in the binary string. Here,) 135.65 236.95 P
1.41 (binary mutation \337ips the value of the bit at the loci selected to be the mutation) 135.65 222.95 P
-0.23 (point. Given that mutation is generally applied uniformly to an entire population of) 135.65 208.95 P
FMENDPAGE
%%EndPage: "16" 17
%%Page: "17" 17
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-17) 513.33 61.29 T
2 12 Q
0.82 (strings, it is possible that a given binary string may be mutated at more than one) 135.65 736.95 P
(point.) 135.65 722.95 T
2.23 (W) 135.65 580.82 P
2.23 (ith non-binary representations, mutation is achieved by either perturbing the) 146.49 580.82 P
0.87 (gene values or random selection of new values within the allowed range. W) 135.65 566.82 P
0.87 (right) 508.99 566.82 P
-0 ([8] and Janikow and Michalewicz [23] demonstrate how real-coded GAs may take) 135.65 552.82 P
0.21 (advantage of higher mutation rates than binary-coded GAs, increasing the level of) 135.65 538.82 P
5.94 (possible exploration of the search space without adversely af) 135.65 524.82 P
5.94 (fecting the) 474.74 524.82 P
1.62 (conver) 135.65 510.82 P
1.62 (gence characteristics. Indeed, T) 168.07 510.82 P
1.62 (ate and Smith [24] ar) 323.63 510.82 P
1.62 (gue that for codings) 431.17 510.82 P
-0.22 (more complex than binary) 135.65 496.82 P
-0.22 (, high mutation rates can be both desirable and necessary) 260.46 496.82 P
0.57 (and show how) 135.65 482.82 P
0.57 (, for a complex combinatorial optimization problem, high mutation) 205.29 482.82 P
0.62 (rates and non-binary coding yielded signi\336cantly better solutions than the normal) 135.65 468.82 P
(approach.) 135.65 454.82 T
2.89 (Many variations on the mutation operator have been proposed. For example,) 135.65 428.82 P
0.6 (biasing the mutation towards individuals with lower \336tness values to increase the) 135.65 414.82 P
-0.25 (exploration in the search without losing information from the \336tter individuals [25]) 135.65 400.82 P
2.48 (or parameterising the mutation such that the mutation rate decreases with the) 135.65 386.82 P
0.13 (population conver) 135.65 372.82 P
0.13 (gence [26]. M\237hlenbein [21] has introduced a mutation operator) 222.5 372.82 P
0.5 (for the real-coded GA that uses a non-linear term for the distribution of the range) 135.65 358.82 P
0.38 (of mutation applied to gene values. It is claimed that by biasing mutation towards) 135.65 344.82 P
3.96 (smaller changes in gene values, mutation can be used in conjunction with) 135.65 330.82 P
0.7 (recombination as a foreground search process. Other mutation operations include) 135.65 316.82 P
2.66 (that of) 135.65 302.82 P
0 F
2.66 (trade mutation) 174.94 302.82 P
2 F
2.66 ( [7], whereby the contribution of individual genes in a) 248.57 302.82 P
3.95 (chromosome is used to direct mutation towards weaker terms, and) 135.65 288.82 P
0 F
3.95 (r) 495.89 288.82 P
3.95 (eor) 500.12 288.82 P
3.95 (der) 515.66 288.82 P
0.71 (mutation) 135.65 274.82 P
2 F
0.71 ( [7], that swaps the positions of bits or genes to increase diversity in the) 178.3 274.82 P
(decision variable space.) 135.65 260.82 T
1.82 (Binary and integer mutation are provided in the T) 135.65 234.82 P
1.82 (oolbox by the function) 387.85 234.82 P
3 F
4.36 (mut) 507.06 234.82 P
2 F
1.82 (.) 528.65 234.82 P
0.54 (Real-valued mutation is available using the function) 135.65 220.82 P
3 F
1.29 (mutbga) 392.92 220.82 P
2 F
0.54 (. A high-level entry) 436.1 220.82 P
(function to the mutation operators is provided by the function) 135.65 206.82 T
3 F
(mutate) 434.13 206.82 T
2 F
(.) 477.3 206.82 T
63.65 96.95 531.65 744.95 C
133.42 602.82 531.65 718.95 C
5 12 Q
0 X
0 K
(Figure 6: Binary Mutation) 266.07 625.61 T
141.21 613.74 523.89 708.01 R
0.5 H
2 Z
N
2 F
( Original string -) 170.1 671.56 T
( Mutated string -) 170.1 653.69 T
(binary) 413.58 689.43 T
(Gray) 466.52 689.43 T
3 F
(0 0 0 1 1 0 0 0 1 0) 255.14 671.91 T
(0 0 1 1 1 0 0 0 1 0) 255.14 654.04 T
2 F
(0.9659) 412.41 671.56 T
(2.2146) 412.41 653.69 T
(0.6634) 462.02 671.56 T
(1.8439) 462.02 653.69 T
281.81 650.83 291.75 681.92 R
8 X
N
0 X
(mutation point) 172.34 690.39 T
279.39 694.94 285.77 684.78 274.98 690.02 277.19 692.48 4 Y
V
248.93 693.96 275.26 694.21 277.19 692.48 3 L
N
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "17" 18
%%Page: "18" 18
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-18) 513.33 61.29 T
1 16 Q
(Reinsertion) 135.65 734.29 T
2 12 Q
2.42 (Once a new population has been produced by selection and recombination of) 135.65 706.95 P
2.66 (individuals from the old population, the \336tness of the individuals in the new) 135.65 692.95 P
7.66 (population may be determined. If fewer individuals are produced by) 135.65 678.95 P
4.52 (recombination than the size of the original population, then the fractional) 135.65 664.95 P
1.26 (dif) 135.65 650.95 P
1.26 (ference between the new and old population sizes is termed a generation gap) 148.76 650.95 P
-0.08 ([27]. In the case where the number of new individuals produced at each generation) 135.65 636.95 P
0.43 (is one or two, the GA is said to be steady-state [28] or incremental [29]. If one or) 135.65 622.95 P
0.6 (more of the most \336t individuals is deterministically allowed to propagate through) 135.65 608.95 P
(successive generations then the GA is said to use an) 135.65 594.95 T
0 F
(elitist strategy) 388.13 594.95 T
2 F
(.) 455.66 594.95 T
1.67 (T) 135.65 568.95 P
1.67 (o maintain the size of the original population, the new individuals have to be) 142.14 568.95 P
-0.07 (reinserted into the old population. Similarly) 135.65 554.95 P
-0.07 (, if not all the new individuals are to be) 344.4 554.95 P
0.46 (used at each generation or if more of) 135.65 540.95 P
0.46 (fspring are generated than the size of the old) 314.82 540.95 P
0.17 (population then a reinsertion scheme must be used to determine which individuals) 135.65 526.95 P
2.22 (are to exist in the new population. An important feature of not creating more) 135.65 512.95 P
5.28 (of) 135.65 498.95 P
5.28 (fspring than the current population size at each generation is that the) 145.42 498.95 P
1.12 (generational computational time is reduced, most dramatically in the case of the) 135.65 484.95 P
2.39 (steady-state GA, and that the memory requirements are smaller as fewer new) 135.65 470.95 P
(individuals need to be stored while of) 135.65 456.95 T
(fspring are produced.) 315.98 456.95 T
0.19 (When selecting which members of the old population should be replaced the most) 135.65 430.95 P
0.23 (apparent strategy is to replace the least \336t members deterministically) 135.65 416.95 P
0.23 (. However) 466.39 416.95 P
0.23 (, in) 516.09 416.95 P
2.7 (studies, Fogarty [30] has shown that no signi\336cant dif) 135.65 402.95 P
2.7 (ference in conver) 415.24 402.95 P
2.7 (gence) 503.68 402.95 P
2.15 (characteristics was found when the individuals selected for replacement where) 135.65 388.95 P
0.69 (chosen with inverse proportional selection or deterministically as the least \336t. He) 135.65 374.95 P
0.01 (further asserts that replacing the least \336t members ef) 135.65 360.95 P
0.01 (fectively implements an elitist) 386.69 360.95 P
5.91 (strategy as the most \336t will probabilistically survive through successive) 135.65 346.95 P
-0.23 (generations. Indeed, the most successful replacement scheme was one that selected) 135.65 332.95 P
-0.23 (the oldest members of a population for replacement. This is reported as being more) 135.65 318.95 P
0.03 (in keeping with generational reproduction as every member of the population will,) 135.65 304.95 P
4.87 (at some time, be replaced. Thus, for an individual to survive successive) 135.65 290.95 P
5.74 (generations, it must be suf) 135.65 276.95 P
5.74 (\336ciently \336t to ensure propagation into future) 284.66 276.95 P
(generations.) 135.65 262.95 T
-0.23 (The GA T) 135.65 236.95 P
-0.23 (oolbox provides a function for reinserting individuals into the population) 183.63 236.95 P
1.89 (after recombination,) 135.65 222.95 P
3 F
4.55 (reins) 239.69 222.95 P
2 F
1.89 (. Optional input parameters allow the use of either) 275.67 222.95 P
0.3 (uniform random or \336tness-based reinsertion. Additionally) 135.65 208.95 P
0.3 (, this routine can also be) 413.54 208.95 P
(selected to reinsert fewer of) 135.65 194.95 T
(fspring than those produced at recombination.) 268.64 194.95 T
1 16 Q
(T) 135.65 166.29 T
(ermination of the GA) 144.84 166.29 T
2 12 Q
1.32 (Because the GA is a stochastic search method, it is dif) 135.65 138.95 P
1.32 (\336cult to formally specify) 408.77 138.95 P
-0.06 (conver) 135.65 124.95 P
-0.06 (gence criteria. As the \336tness of a population may remain static for a number) 168.07 124.95 P
5.99 (of generations before a superior individual is found, the application of) 135.65 110.95 P
FMENDPAGE
%%EndPage: "18" 19
%%Page: "19" 19
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-19) 513.33 61.29 T
2 12 Q
1.07 (conventional termination criteria becomes problematic. A common practice is to) 135.65 736.95 P
2.19 (terminate the GA after a prespeci\336ed number of generations and then test the) 135.65 722.95 P
0.17 (quality of the best members of the population against the problem de\336nition. If no) 135.65 708.95 P
-0.22 (acceptable solutions are found, the GA may be restarted or a fresh search initiated.) 135.65 694.95 P
FMENDPAGE
%%EndPage: "19" 20
%%Page: "20" 20
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-20) 513.33 61.29 T
63.65 716.95 531.65 726.95 C
63.65 725.95 531.65 725.95 2 L
1 H
2 Z
0 X
0 K
N
-8.35 24.95 603.65 816.95 C
1 18 Q
0 X
0 K
(Data Structur) 63.65 732.95 T
(es) 170.74 732.95 T
2 12 Q
1.25 (M) 135.65 694.95 P
2 10 Q
1.04 (A) 146.31 694.95 P
1.04 (TLAB) 152.42 694.95 P
2 12 Q
1.25 ( essentially supports only one data type, a rectangular matrix of real or) 178.51 694.95 P
1.93 (complex numeric elements. The main data structures in the Genetic Algorithm) 135.65 680.95 P
(toolbox are:) 135.65 666.95 T
(\245) 157.25 640.95 T
(chromosomes) 171.65 640.95 T
(\245) 157.25 620.95 T
(phenotypes) 171.65 620.95 T
(\245) 157.25 600.95 T
(objective function values) 171.65 600.95 T
(\245) 157.25 580.95 T
(\336tness values) 171.65 580.95 T
(These data structures are discussed in the following subsections.) 135.65 560.95 T
1 16 Q
(Chr) 135.65 532.29 T
(omosomes) 162.9 532.29 T
2 12 Q
1.24 (The chromosome data structure stores an entire population in a single matrix of) 135.65 504.95 P
1.17 (size) 135.65 490.95 P
3 F
2.81 (Nind) 158.47 490.95 P
4 F
1.17 (\264) 191.42 490.95 P
3 F
2.81 (Lind) 202.18 490.95 P
2 F
1.17 (, where) 230.96 490.95 P
3 F
2.81 (Nind) 271.6 490.95 P
2 F
1.17 ( is the number of individuals in the population) 300.39 490.95 P
0.48 (and) 135.65 476.95 P
3 F
1.16 (Lind) 156.45 476.95 P
2 F
0.48 ( is the length of the genotypic representation of those individuals. Each) 185.23 476.95 P
-0.26 (row corresponds to an individual\325) 135.65 462.95 P
-0.26 (s genotype, consisting of base-) 295.83 462.95 P
0 F
-0.26 (n) 442.34 462.95 P
2 F
-0.26 (, typically binary) 448.34 462.95 P
-0.26 (,) 528.65 462.95 P
(values.) 135.65 448.95 T
(An example of the chromosome data structure is shown below) 135.65 422.95 T
(.) 434.32 422.95 T
1 (This data representation does not force a structure on the chromosome structure,) 135.65 262.48 P
4.56 (only requiring that all chromosomes are of equal length. Thus, structured) 135.65 248.48 P
2.9 (populations or populations with varying genotypic bases may be used in the) 135.65 234.48 P
1.08 (Genetic Algorithm T) 135.65 220.48 P
1.08 (oolbox provided that a suitable decoding function, mapping) 237.58 220.48 P
0.48 (chromosomes onto phenotypes, is employed. The role of the decoding function is) 135.65 206.48 P
(described below) 135.65 192.48 T
(.) 213.14 192.48 T
1 16 Q
(Phenotypes) 135.65 163.81 T
2 12 Q
1.57 (The decision variables, or phenotypes, in the genetic algorithm are obtained by) 135.65 136.48 P
2.06 (applying some mapping from the chromosome representation into the decision) 135.65 122.48 P
0.9 (variable space. Here, each string contained in the chromosome structure decodes) 135.65 108.48 P
154.05 284.48 513.25 404.95 C
3 12 Q
0 X
0 K
(C) 155.05 341.98 T
(h) 162.95 341.98 T
(r) 170.85 341.98 T
(o) 178.76 341.98 T
(m) 186.66 341.98 T
0 F
(g) 224.47 376.28 T
2 9 Q
(1) 230.93 372.52 T
(1) 239.92 372.52 T
4 F
(,) 235.43 372.52 T
0 12 Q
(g) 263.48 376.28 T
2 9 Q
(1) 269.94 372.52 T
(2) 278.93 372.52 T
4 F
(,) 274.44 372.52 T
0 12 Q
(g) 304.29 376.28 T
2 9 Q
(1) 310.75 372.52 T
(3) 319.74 372.52 T
4 F
(,) 315.25 372.52 T
4 12 Q
(\274) 337.57 376.28 T
0 F
(g) 362.89 376.28 T
2 9 Q
(1) 369.35 372.52 T
3 F
(L) 378.34 372.52 T
(i) 384.27 372.52 T
(n) 390.19 372.52 T
(d) 396.11 372.52 T
4 F
(,) 373.85 372.52 T
0 12 Q
(g) 224.47 358.37 T
2 9 Q
(2) 230.93 354.6 T
(1) 239.92 354.6 T
4 F
(,) 235.43 354.6 T
0 12 Q
(g) 263.48 358.37 T
2 9 Q
(2) 269.94 354.6 T
(2) 278.93 354.6 T
4 F
(,) 274.44 354.6 T
0 12 Q
(g) 304.29 358.37 T
2 9 Q
(2) 310.75 354.6 T
(3) 319.74 354.6 T
4 F
(,) 315.25 354.6 T
4 12 Q
(\274) 337.57 358.37 T
0 F
(g) 362.89 358.37 T
2 9 Q
(2) 369.35 354.6 T
3 F
(L) 378.34 354.6 T
(i) 384.27 354.6 T
(n) 390.19 354.6 T
(d) 396.11 354.6 T
4 F
(,) 373.85 354.6 T
0 12 Q
(g) 224.47 340.45 T
2 9 Q
(3) 230.93 336.69 T
(1) 239.92 336.69 T
4 F
(,) 235.43 336.69 T
0 12 Q
(g) 263.48 340.45 T
2 9 Q
(3) 269.94 336.69 T
(2) 278.93 336.69 T
4 F
(,) 274.44 336.69 T
0 12 Q
(g) 304.29 340.45 T
2 9 Q
(3) 310.75 336.69 T
(3) 319.74 336.69 T
4 F
(,) 315.25 336.69 T
4 12 Q
(\274) 337.57 340.45 T
0 F
(g) 362.89 340.45 T
2 9 Q
(3) 369.35 336.69 T
3 F
(L) 378.34 336.69 T
(i) 384.27 336.69 T
(n) 390.19 336.69 T
(d) 396.11 336.69 T
4 F
(,) 373.85 336.69 T
2 12 Q
(.) 232.45 322.56 T
(.) 271.46 322.56 T
(.) 312.27 322.56 T
4 F
(\274) 337.57 322.56 T
2 F
(.) 380.2 322.56 T
0 F
(g) 216.94 306.36 T
2 9 Q
(N) 223.4 302.6 T
(i) 230.41 302.6 T
(n) 233.44 302.6 T
(d) 238.47 302.6 T
(1) 247.46 302.6 T
4 F
(,) 242.96 302.6 T
0 12 Q
(g) 255.95 306.36 T
2 9 Q
(N) 262.41 302.6 T
(i) 269.43 302.6 T
(n) 272.45 302.6 T
(d) 277.48 302.6 T
(2) 286.47 302.6 T
4 F
(,) 281.97 302.6 T
0 12 Q
(g) 294.96 306.36 T
3 9 Q
(N) 301.42 302.6 T
(i) 307.34 302.6 T
(n) 313.26 302.6 T
(d) 319.19 302.6 T
2 F
(3) 329.08 302.6 T
4 F
(,) 324.58 302.6 T
4 12 Q
(\274) 337.57 306.36 T
0 F
(g) 353.56 306.36 T
3 9 Q
(N) 360.02 302.74 T
(i) 365.94 302.74 T
(n) 371.86 302.74 T
(d) 377.79 302.74 T
(L) 387.67 302.74 T
(i) 393.6 302.74 T
(n) 399.52 302.74 T
(d) 405.44 302.74 T
4 F
(,) 383.18 302.74 T
2 12 Q
(i) 432.35 376.89 T
(n) 435.68 376.89 T
(d) 441.68 376.89 T
(i) 447.67 376.89 T
(v) 451.01 376.89 T
(i) 457 376.89 T
(d) 460.34 376.89 T
(u) 466.33 376.89 T
(a) 472.33 376.89 T
(l) 477.66 376.89 T
(\021) 480.99 376.89 T
(1) 483.99 376.89 T
(i) 432.35 359.09 T
(n) 435.68 359.09 T
(d) 441.68 359.09 T
(i) 447.67 359.09 T
(v) 451.01 359.09 T
(i) 457 359.09 T
(d) 460.34 359.09 T
(u) 466.33 359.09 T
(a) 472.33 359.09 T
(l) 477.66 359.09 T
(\021) 480.99 359.09 T
(2) 483.99 359.09 T
(i) 432.35 341.29 T
(n) 435.68 341.29 T
(d) 441.68 341.29 T
(i) 447.67 341.29 T
(v) 451.01 341.29 T
(i) 457 341.29 T
(d) 460.34 341.29 T
(u) 466.33 341.29 T
(a) 472.33 341.29 T
(l) 477.66 341.29 T
(\021) 480.99 341.29 T
(3) 483.99 341.29 T
(.) 459.67 323.49 T
(i) 419.54 305.69 T
(n) 422.87 305.69 T
(d) 428.87 305.69 T
(i) 434.87 305.69 T
(v) 438.2 305.69 T
(i) 444.2 305.69 T
(d) 447.53 305.69 T
(u) 453.53 305.69 T
(a) 459.52 305.69 T
(l) 464.85 305.69 T
(\021) 468.18 305.69 T
3 F
(N) 472.89 305.69 T
(i) 480.79 305.69 T
(n) 488.69 305.69 T
(d) 496.6 305.69 T
4 F
(=) 199.85 341.98 T
218.44 300.65 214.44 300.65 2 L
0.33 H
0 Z
N
214.44 300.65 214.44 388.49 2 L
N
214.44 388.49 218.44 388.49 2 L
N
408.33 300.65 412.33 300.65 2 L
N
412.33 300.65 412.33 388.49 2 L
N
412.33 388.49 408.33 388.49 2 L
N
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "20" 21
%%Page: "21" 21
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-21) 513.33 61.29 T
2 12 Q
1.97 (to a row vector of order) 135.65 736.95 P
3 F
4.73 (Nvar) 264.05 736.95 P
2 F
1.97 (, according to the number of dimensions in the) 292.35 736.95 P
(search space and corresponding to the decision variable vector value.) 135.65 722.95 T
1.7 (The decision variables are stored in a numerical matrix of size) 135.65 696.95 P
3 F
4.08 (Nind) 455.76 696.95 P
4 F
1.7 (\264) 489.24 696.95 P
3 F
4.08 (Nvar) 500.52 696.95 P
2 F
1.7 (.) 528.65 696.95 P
0.96 (Again, each row corresponds to a particular individual\325) 135.65 682.95 P
0.96 (s phenotype. An example) 406.85 682.95 P
-0.11 (of the phenotype data structure is given below) 135.65 668.95 P
-0.11 (, where) 355.59 668.95 P
3 F
-0.27 (DECODE) 393.66 668.95 P
2 F
-0.11 ( is used to represent) 436.83 668.95 P
0.25 (an arbitrary function, possibly from the GA T) 135.65 654.95 P
0.25 (oolbox, mapping the genotypes onto) 355.74 654.95 P
(the phenotypes.) 135.65 640.95 T
0.29 (The actual mapping between the chromosome representation and their phenotypic) 135.65 456.66 P
0.39 (values depends upon the) 135.65 442.66 P
3 F
0.94 (DECODE) 257.8 442.66 P
2 F
0.39 ( function used. It is perfectly feasible using this) 300.98 442.66 P
4.22 (representation to have vectors of decision variables of dif) 135.65 428.66 P
4.22 (ferent types. For) 444.28 428.66 P
2.81 (example, it is possible to mix integer) 135.65 414.66 P
2.81 (, real-valued and alphanumeric decision) 328.91 414.66 P
(variables in the same) 135.65 400.66 T
3 F
(Phen) 239.57 400.66 T
2 F
( data structure.) 268.36 400.66 T
1 16 Q
(Objective function values) 135.65 372 T
2 12 Q
0.05 (An objective function is used to evaluate the performance of the phenotypes in the) 135.65 344.66 P
3.4 (problem domain. Objective function values can be scalar or) 135.65 330.66 P
3.4 (, in the case of) 448.45 330.66 P
2.36 (multiobjective problems, vectorial. Note that objective function values are not) 135.65 316.66 P
(necessarily the same as the \336tness values.) 135.65 302.66 T
0.47 (Objective function values are stored in a numerical matrix of size) 135.65 276.66 P
3 F
1.12 (Nind) 457.56 276.66 P
4 F
0.47 (\264) 489.81 276.66 P
3 F
1.12 (Nobj) 499.86 276.66 P
2 F
0.47 (,) 528.65 276.66 P
1.65 (where) 135.65 262.66 P
3 F
3.96 (Nobj) 169.6 262.66 P
2 F
1.65 ( is the number of objectives. Each row corresponds to a particular) 198.38 262.66 P
1.86 (individual\325) 135.65 248.66 P
1.86 (s objective vector) 187.63 248.66 P
1.86 (. An example of the objective function values data) 275.29 248.66 P
3.98 (structure is shown below) 135.65 234.66 P
3.98 (, with) 266.4 234.66 P
3 F
9.56 (OBJFUN) 304.68 234.66 P
2 F
3.98 ( representing an arbitrary objective) 347.86 234.66 P
(function.) 135.65 220.66 T
144.97 478.66 522.32 622.95 C
3 12 Q
0 X
0 K
(P) 146.97 613.96 T
(h) 153.87 613.96 T
(e) 161.78 613.96 T
(n) 169.68 613.96 T
(D) 195.46 613.96 T
(E) 203.36 613.96 T
(C) 211.26 613.96 T
(O) 219.16 613.96 T
(D) 227.07 613.96 T
(E) 234.97 613.96 T
(C) 249.97 613.96 T
(h) 257.87 613.96 T
(r) 265.77 613.96 T
(o) 273.68 613.96 T
(m) 281.58 613.96 T
4 F
(\050) 244.87 613.96 T
(\051) 289.38 613.96 T
3 F
(%) 309.08 613.96 T
(\021) 316.28 613.96 T
(M) 323.47 613.96 T
(a) 330.67 613.96 T
(p) 337.86 613.96 T
(\021) 345.06 613.96 T
(G) 352.26 613.96 T
(e) 359.45 613.96 T
(n) 366.65 613.96 T
(o) 373.85 613.96 T
(t) 381.04 613.96 T
(y) 388.24 613.96 T
(p) 395.43 613.96 T
(e) 402.63 613.96 T
(\021) 409.83 613.96 T
(t) 417.02 613.96 T
(o) 424.22 613.96 T
(\021) 431.41 613.96 T
(P) 438.61 613.96 T
(h) 445.81 613.96 T
(e) 453 613.96 T
(n) 460.2 613.96 T
(o) 467.39 613.96 T
(t) 474.59 613.96 T
(y) 481.79 613.96 T
(p) 488.98 613.96 T
(e) 496.18 613.96 T
4 F
(=) 182.87 613.96 T
0 F
(x) 207.38 568.27 T
2 9 Q
(1) 213.17 564.51 T
(1) 222.16 564.51 T
4 F
(,) 217.67 564.51 T
0 12 Q
(x) 249.32 568.27 T
2 9 Q
(1) 255.11 564.51 T
(2) 264.1 564.51 T
4 F
(,) 259.6 564.51 T
0 12 Q
(x) 291.26 568.27 T
2 9 Q
(1) 297.04 564.51 T
(3) 306.03 564.51 T
4 F
(,) 301.54 564.51 T
4 12 Q
(\274) 323.86 568.27 T
0 F
(x) 349.18 568.27 T
2 9 Q
(1) 354.97 564.51 T
3 F
(N) 363.96 564.51 T
(v) 369.88 564.51 T
(a) 375.8 564.51 T
(r) 381.73 564.51 T
4 F
(,) 359.46 564.51 T
0 12 Q
(x) 207.38 550.35 T
2 9 Q
(2) 213.17 546.59 T
(1) 222.16 546.59 T
4 F
(,) 217.67 546.59 T
0 12 Q
(x) 249.32 550.35 T
2 9 Q
(2) 255.11 546.59 T
(2) 264.1 546.59 T
4 F
(,) 259.6 546.59 T
0 12 Q
(x) 291.26 550.35 T
2 9 Q
(2) 297.04 546.59 T
(3) 306.03 546.59 T
4 F
(,) 301.54 546.59 T
4 12 Q
(\274) 323.86 550.35 T
0 F
(x) 349.18 550.35 T
2 9 Q
(2) 354.97 546.59 T
3 F
(N) 363.96 546.59 T
(v) 369.88 546.59 T
(a) 375.8 546.59 T
(r) 381.73 546.59 T
4 F
(,) 359.46 546.59 T
0 12 Q
(x) 207.38 532.44 T
2 9 Q
(3) 213.17 528.68 T
(1) 222.16 528.68 T
4 F
(,) 217.67 528.68 T
0 12 Q
(x) 249.32 532.44 T
2 9 Q
(3) 255.11 528.68 T
(2) 264.1 528.68 T
4 F
(,) 259.6 528.68 T
0 12 Q
(x) 291.26 532.44 T
2 9 Q
(3) 297.04 528.68 T
(3) 306.03 528.68 T
4 F
(,) 301.54 528.68 T
4 12 Q
(\274) 323.86 532.44 T
0 F
(x) 349.18 532.44 T
2 9 Q
(3) 354.97 528.68 T
3 F
(N) 363.96 528.68 T
(v) 369.88 528.68 T
(a) 375.8 528.68 T
(r) 381.73 528.68 T
4 F
(,) 359.46 528.68 T
2 12 Q
(.) 215.02 514.55 T
(.) 256.96 514.55 T
(.) 298.89 514.55 T
4 F
(\274) 323.86 514.55 T
2 F
(.) 366.15 514.55 T
0 F
(x) 198.05 498.35 T
3 9 Q
(N) 203.84 494.59 T
(i) 209.76 494.59 T
(n) 215.68 494.59 T
(d) 221.6 494.59 T
2 F
(1) 231.49 494.59 T
4 F
(,) 227 494.59 T
0 12 Q
(x) 239.99 498.35 T
3 9 Q
(N) 245.77 494.59 T
(i) 251.7 494.59 T
(n) 257.62 494.59 T
(d) 263.54 494.59 T
2 F
(2) 273.43 494.59 T
4 F
(,) 268.93 494.59 T
0 12 Q
(x) 281.92 498.35 T
3 9 Q
(N) 287.71 494.59 T
(i) 293.63 494.59 T
(n) 299.55 494.59 T
(d) 305.48 494.59 T
2 F
(3) 315.36 494.59 T
4 F
(,) 310.87 494.59 T
4 12 Q
(\274) 323.86 498.35 T
0 F
(x) 339.85 498.35 T
3 9 Q
(N) 345.64 494.73 T
(i) 351.56 494.73 T
(n) 357.48 494.73 T
(d) 363.4 494.73 T
(N) 373.29 494.73 T
(v) 379.21 494.73 T
(a) 385.14 494.73 T
(r) 391.06 494.73 T
4 F
(,) 368.8 494.73 T
2 12 Q
(i) 417.96 568.88 T
(n) 421.3 568.88 T
(d) 427.29 568.88 T
(i) 433.29 568.88 T
(v) 436.62 568.88 T
(i) 442.62 568.88 T
(d) 445.96 568.88 T
(u) 451.95 568.88 T
(a) 457.95 568.88 T
(l) 463.27 568.88 T
(\021) 466.61 568.88 T
(1) 469.61 568.88 T
(i) 417.96 551.08 T
(n) 421.3 551.08 T
(d) 427.29 551.08 T
(i) 433.29 551.08 T
(v) 436.62 551.08 T
(i) 442.62 551.08 T
(d) 445.96 551.08 T
(u) 451.95 551.08 T
(a) 457.95 551.08 T
(l) 463.27 551.08 T
(\021) 466.61 551.08 T
(2) 469.61 551.08 T
(i) 417.96 533.28 T
(n) 421.3 533.28 T
(d) 427.29 533.28 T
(i) 433.29 533.28 T
(v) 436.62 533.28 T
(i) 442.62 533.28 T
(d) 445.96 533.28 T
(u) 451.95 533.28 T
(a) 457.95 533.28 T
(l) 463.27 533.28 T
(\021) 466.61 533.28 T
(3) 469.61 533.28 T
(.) 445.28 515.48 T
(i) 405.16 497.68 T
(n) 408.49 497.68 T
(d) 414.49 497.68 T
(i) 420.48 497.68 T
(v) 423.82 497.68 T
(i) 429.82 497.68 T
(d) 433.15 497.68 T
(u) 439.15 497.68 T
(a) 445.14 497.68 T
(l) 450.47 497.68 T
(\021) 453.8 497.68 T
3 F
(N) 458.51 497.68 T
(i) 466.41 497.68 T
(n) 474.31 497.68 T
(d) 482.21 497.68 T
4 F
(=) 180.97 533.96 T
199.55 492.64 195.55 492.64 2 L
0.33 H
0 Z
N
195.55 492.64 195.55 580.48 2 L
N
195.55 580.48 199.55 580.48 2 L
N
393.95 492.64 397.95 492.64 2 L
N
397.95 492.64 397.95 580.48 2 L
N
397.95 580.48 393.95 580.48 2 L
N
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "21" 22
%%Page: "22" 22
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-22) 513.33 61.29 T
1 16 Q
(Fitness values) 135.65 577.51 T
2 12 Q
2.12 (Fitness values are derived from objective function values through a scaling or) 135.65 550.18 P
2.59 (ranking function. Fitnesses are non-negative scalars and are stored in column) 135.65 536.18 P
0.07 (vectors of length) 135.65 522.18 P
3 F
0.17 (Nind) 219.46 522.18 P
2 F
0.07 (, an example of which is shown below) 248.25 522.18 P
0.07 (. Again, FITNESS is) 431.82 522.18 P
(an arbitrary \336tness function.) 135.65 508.18 T
1.6 (Note that for multiobjective functions, the \336tness of a particular individual is a) 135.65 335.63 P
2.33 (function of a vector of objective function values. Multiobjective problems are) 135.65 321.62 P
2.49 (characterised by having no single unique solution, but a family of equally \336t) 135.65 307.62 P
2.42 (solutions with dif) 135.65 293.62 P
2.42 (ferent values of decision variables. Care should therefore be) 224.23 293.62 P
0.26 (taken to adopt some mechanism to ensure that the population is able to evolve the) 135.65 279.62 P
1.35 (set of Pareto optimal solutions, for example by using \336tness sharing [31] in the) 135.65 265.62 P
-0.04 (selection method. Although not supported in this version of the Genetic Algorithm) 135.65 251.62 P
1.73 (T) 135.65 237.62 P
1.73 (oolbox, it is planned that multiobjective search will be implemented in future) 142.14 237.62 P
(versions.) 135.65 223.62 T
152.42 602.18 514.87 744.95 C
3 12 Q
0 X
0 K
(O) 162.01 735.96 T
(b) 169.91 735.96 T
(j) 177.82 735.96 T
(V) 185.72 735.96 T
(O) 211.5 735.96 T
(B) 219.4 735.96 T
(J) 227.3 735.96 T
(F) 235.2 735.96 T
(U) 243.1 735.96 T
(N) 251.01 735.96 T
(P) 266.01 735.96 T
(h) 273.91 735.96 T
(e) 281.81 735.96 T
(n) 289.72 735.96 T
4 F
(\050) 260.91 735.96 T
(\051) 297.52 735.96 T
3 F
(%) 317.22 735.96 T
(\021) 324.42 735.96 T
(O) 331.61 735.96 T
(b) 338.81 735.96 T
(j) 346 735.96 T
(e) 353.2 735.96 T
(c) 360.39 735.96 T
(t) 367.59 735.96 T
(i) 374.79 735.96 T
(v) 381.98 735.96 T
(e) 389.18 735.96 T
(\021) 396.38 735.96 T
(F) 403.57 735.96 T
(u) 410.77 735.96 T
(n) 417.96 735.96 T
(c) 425.16 735.96 T
(t) 432.36 735.96 T
(i) 439.55 735.96 T
(o) 446.75 735.96 T
(n) 453.94 735.96 T
4 F
(=) 198.91 735.96 T
0 F
(y) 223.43 690.27 T
2 9 Q
(1) 229.21 686.51 T
(1) 238.2 686.51 T
4 F
(,) 233.71 686.51 T
0 12 Q
(y) 265.36 690.27 T
2 9 Q
(1) 271.15 686.51 T
(2) 280.14 686.51 T
4 F
(,) 275.64 686.51 T
0 12 Q
(y) 307.3 690.27 T
2 9 Q
(1) 313.08 686.51 T
(3) 322.07 686.51 T
4 F
(,) 317.58 686.51 T
4 12 Q
(\274) 339.9 690.27 T
0 F
(y) 365.22 690.27 T
2 9 Q
(1) 371.01 686.51 T
3 F
(N) 380 686.51 T
(v) 385.92 686.51 T
(a) 391.85 686.51 T
(r) 397.77 686.51 T
4 F
(,) 375.5 686.51 T
0 12 Q
(y) 223.43 672.36 T
2 9 Q
(2) 229.21 668.59 T
(1) 238.2 668.59 T
4 F
(,) 233.71 668.59 T
0 12 Q
(y) 265.36 672.36 T
2 9 Q
(2) 271.15 668.59 T
(2) 280.14 668.59 T
4 F
(,) 275.64 668.59 T
0 12 Q
(y) 307.3 672.36 T
2 9 Q
(2) 313.08 668.59 T
(3) 322.07 668.59 T
4 F
(,) 317.58 668.59 T
4 12 Q
(\274) 339.9 672.36 T
0 F
(y) 365.22 672.36 T
2 9 Q
(2) 371.01 668.59 T
3 F
(N) 380 668.59 T
(v) 385.92 668.59 T
(a) 391.85 668.59 T
(r) 397.77 668.59 T
4 F
(,) 375.5 668.59 T
0 12 Q
(y) 223.43 654.44 T
2 9 Q
(3) 229.21 650.68 T
(1) 238.2 650.68 T
4 F
(,) 233.71 650.68 T
0 12 Q
(y) 265.36 654.44 T
2 9 Q
(3) 271.15 650.68 T
(2) 280.14 650.68 T
4 F
(,) 275.64 650.68 T
0 12 Q
(y) 307.3 654.44 T
2 9 Q
(3) 313.08 650.68 T
(3) 322.07 650.68 T
4 F
(,) 317.58 650.68 T
4 12 Q
(\274) 339.9 654.44 T
0 F
(y) 365.22 654.44 T
2 9 Q
(3) 371.01 650.68 T
3 F
(N) 380 650.68 T
(v) 385.92 650.68 T
(a) 391.85 650.68 T
(r) 397.77 650.68 T
4 F
(,) 375.5 650.68 T
2 12 Q
(.) 231.06 636.55 T
(.) 273 636.55 T
(.) 314.93 636.55 T
4 F
(\274) 339.9 636.55 T
2 F
(.) 382.19 636.55 T
0 F
(y) 214.09 620.35 T
3 9 Q
(N) 219.88 616.59 T
(i) 225.8 616.59 T
(n) 231.72 616.59 T
(d) 237.65 616.59 T
2 F
(1) 247.53 616.59 T
4 F
(,) 243.04 616.59 T
0 12 Q
(y) 256.03 620.35 T
3 9 Q
(N) 261.82 616.59 T
(i) 267.74 616.59 T
(n) 273.66 616.59 T
(d) 279.58 616.59 T
2 F
(2) 289.47 616.59 T
4 F
(,) 284.97 616.59 T
0 12 Q
(y) 297.96 620.35 T
3 9 Q
(N) 303.75 616.59 T
(i) 309.67 616.59 T
(n) 315.59 616.59 T
(d) 321.52 616.59 T
2 F
(3) 331.4 616.59 T
4 F
(,) 326.91 616.59 T
4 12 Q
(\274) 339.9 620.35 T
0 F
(y) 355.89 620.35 T
3 9 Q
(N) 361.68 616.73 T
(i) 367.6 616.73 T
(n) 373.52 616.73 T
(d) 379.44 616.73 T
(N) 389.33 616.73 T
(v) 395.26 616.73 T
(a) 401.18 616.73 T
(r) 407.1 616.73 T
4 F
(,) 384.84 616.73 T
2 12 Q
(i) 434 690.88 T
(n) 437.34 690.88 T
(d) 443.33 690.88 T
(i) 449.33 690.88 T
(v) 452.66 690.88 T
(i) 458.66 690.88 T
(d) 461.99 690.88 T
(u) 467.99 690.88 T
(a) 473.99 690.88 T
(l) 479.31 690.88 T
(\021) 482.65 690.88 T
(1) 485.65 690.88 T
(i) 434 673.08 T
(n) 437.34 673.08 T
(d) 443.33 673.08 T
(i) 449.33 673.08 T
(v) 452.66 673.08 T
(i) 458.66 673.08 T
(d) 461.99 673.08 T
(u) 467.99 673.08 T
(a) 473.99 673.08 T
(l) 479.31 673.08 T
(\021) 482.65 673.08 T
(2) 485.65 673.08 T
(i) 434 655.28 T
(n) 437.34 655.28 T
(d) 443.33 655.28 T
(i) 449.33 655.28 T
(v) 452.66 655.28 T
(i) 458.66 655.28 T
(d) 461.99 655.28 T
(u) 467.99 655.28 T
(a) 473.99 655.28 T
(l) 479.31 655.28 T
(\021) 482.65 655.28 T
(3) 485.65 655.28 T
(.) 461.32 637.48 T
(i) 421.2 619.68 T
(n) 424.53 619.68 T
(d) 430.53 619.68 T
(i) 436.52 619.68 T
(v) 439.86 619.68 T
(i) 445.86 619.68 T
(d) 449.19 619.68 T
(u) 455.19 619.68 T
(a) 461.18 619.68 T
(l) 466.51 619.68 T
(\021) 469.84 619.68 T
3 F
(N) 474.55 619.68 T
(i) 482.45 619.68 T
(n) 490.35 619.68 T
(d) 498.25 619.68 T
4 F
(=) 197.01 655.96 T
215.59 614.64 211.59 614.64 2 L
0.33 H
0 Z
N
211.59 614.64 211.59 702.48 2 L
N
211.59 702.48 215.59 702.48 2 L
N
409.99 614.64 413.99 614.64 2 L
N
413.99 614.64 413.99 702.48 2 L
N
413.99 702.48 409.99 702.48 2 L
N
-8.35 24.95 603.65 816.95 C
182.59 357.63 484.7 488.74 C
3 12 Q
0 X
0 K
(F) 195.87 479.75 T
(i) 203.77 479.75 T
(t) 211.68 479.75 T
(n) 219.58 479.75 T
(F) 245.36 479.75 T
(I) 253.26 479.75 T
(T) 261.16 479.75 T
(N) 269.07 479.75 T
(E) 276.97 479.75 T
(S) 284.87 479.75 T
(S) 292.77 479.75 T
(O) 307.77 479.75 T
(b) 315.68 479.75 T
(j) 323.58 479.75 T
(V) 331.48 479.75 T
4 F
(\050) 302.67 479.75 T
(\051) 339.28 479.75 T
3 F
(\021) 345.98 479.75 T
(%) 353.18 479.75 T
(\021) 360.37 479.75 T
(F) 367.57 479.75 T
(i) 374.77 479.75 T
(t) 381.96 479.75 T
(n) 389.16 479.75 T
(e) 396.36 479.75 T
(s) 403.55 479.75 T
(s) 410.75 479.75 T
(\021) 417.94 479.75 T
(F) 425.14 479.75 T
(u) 432.33 479.75 T
(n) 439.53 479.75 T
(c) 446.73 479.75 T
(t) 453.92 479.75 T
(i) 461.12 479.75 T
(o) 468.32 479.75 T
(n) 475.51 479.75 T
4 F
(=) 232.77 479.75 T
0 F
(f) 259.74 442.24 T
2 9 Q
(1) 263.54 438.48 T
0 12 Q
(f) 259.74 424.33 T
2 9 Q
(2) 263.54 420.56 T
0 12 Q
(f) 259.74 406.41 T
2 9 Q
(3) 263.54 402.65 T
2 12 Q
(.) 261.89 388.52 T
0 F
(f) 250.41 373.71 T
3 9 Q
(N) 254.2 370.09 T
(i) 260.13 370.09 T
(n) 266.05 370.09 T
(d) 271.97 370.09 T
2 12 Q
(i) 298.32 442.15 T
(n) 301.65 442.15 T
(d) 307.64 442.15 T
(i) 313.64 442.15 T
(v) 316.98 442.15 T
(i) 322.97 442.15 T
(d) 326.31 442.15 T
(u) 332.3 442.15 T
(a) 338.3 442.15 T
(l) 343.63 442.15 T
(\021) 346.96 442.15 T
(1) 349.96 442.15 T
(i) 298.32 424.35 T
(n) 301.65 424.35 T
(d) 307.64 424.35 T
(i) 313.64 424.35 T
(v) 316.98 424.35 T
(i) 322.97 424.35 T
(d) 326.31 424.35 T
(u) 332.3 424.35 T
(a) 338.3 424.35 T
(l) 343.63 424.35 T
(\021) 346.96 424.35 T
(2) 349.96 424.35 T
(i) 298.32 406.55 T
(n) 301.65 406.55 T
(d) 307.64 406.55 T
(i) 313.64 406.55 T
(v) 316.98 406.55 T
(i) 322.97 406.55 T
(d) 326.31 406.55 T
(u) 332.3 406.55 T
(a) 338.3 406.55 T
(l) 343.63 406.55 T
(\021) 346.96 406.55 T
(3) 349.96 406.55 T
(.) 328.11 388.75 T
(i) 286.07 373.97 T
(n) 289.4 373.97 T
(d) 295.4 373.97 T
(i) 301.39 373.97 T
(v) 304.73 373.97 T
(i) 310.73 373.97 T
(d) 314.06 373.97 T
(u) 320.06 373.97 T
(a) 326.05 373.97 T
(l) 331.38 373.97 T
(\021) 334.71 373.97 T
3 F
(N) 339.42 373.97 T
(i) 346.61 373.97 T
(n) 353.81 373.97 T
(d) 361.01 373.97 T
4 F
(=) 233.32 408.75 T
251.91 368.23 247.91 368.23 2 L
0.33 H
0 Z
N
247.91 368.23 247.91 454.45 2 L
N
247.91 454.45 251.91 454.45 2 L
N
274.86 368.23 278.86 368.23 2 L
N
278.86 368.23 278.86 454.45 2 L
N
278.86 454.45 274.86 454.45 2 L
N
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "22" 23
%%Page: "23" 23
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-23) 513.33 61.29 T
63.65 716.95 531.65 726.95 C
63.65 725.95 531.65 725.95 2 L
1 H
2 Z
0 X
0 K
N
-8.35 24.95 603.65 816.95 C
1 18 Q
0 X
0 K
(Support for Multiple Populations) 63.65 732.95 T
2 12 Q
0.49 (The GA T) 135.65 694.95 P
0.49 (oolbox provides support for multiple subpopulations through the use of) 185.09 694.95 P
2.44 (high-level genetic operator functions and a routine for exchanging individuals) 135.65 680.95 P
0.12 (between subpopulations. In the literature, the use of multiple populations has been) 135.65 666.95 P
1.48 (shown, in most cases, to improve the quality of the results obtained using GAs) 135.65 652.95 P
(compared to the single population GA \050see, for example, [32] and [33]\051.) 135.65 638.95 T
0.36 (The GA T) 135.65 612.95 P
0.36 (oolbox supports the use of a single population divided into a number of) 184.83 612.95 P
3.75 (subpopulations or) 135.65 598.95 P
0 F
3.75 (demes) 231.76 598.95 P
2 F
3.75 ( by modifying the use of data structures such that) 261.74 598.95 P
4.05 (subpopulations are stored in contiguous blocks within a single matrix. For) 135.65 584.95 P
5.76 (example, the chromosome data structure,) 135.65 570.95 P
3 F
13.81 (Chrom) 364.61 570.95 P
2 F
5.76 (, composed of) 400.59 570.95 P
3 F
13.81 (SUBPOP) 488.47 570.95 P
2 F
(subpopulations each of length) 135.65 556.95 T
3 F
(N) 282.22 556.95 T
2 F
( individuals is stored as:) 289.42 556.95 T
2.16 (This is known as the) 135.65 242.2 P
0 F
2.16 (Migration) 248.04 242.2 P
2 F
2.16 (, or) 296.69 242.2 P
0 F
2.16 (Island) 319.99 242.2 P
2 F
2.16 (, model [34]. Each subpopulation is) 349.97 242.2 P
1.3 (evolved over generations by a traditional GA and from time to time individuals) 135.65 228.2 P
5.19 (migrate from one subpopulation to another) 135.65 214.2 P
5.19 (. The amount of migration of) 366.46 214.2 P
3.82 (individuals and the pattern of that migration determines how much genetic) 135.65 200.2 P
(diversity can occur) 135.65 186.2 T
(.) 226.25 186.2 T
2.83 (T) 135.65 160.2 P
2.83 (o allow the T) 142.14 160.2 P
2.83 (oolbox routines to operate independently on subpopulations, a) 213.4 160.2 P
-0.29 (number of high-level entry functions are provided that accept an optional ar) 135.65 146.2 P
-0.29 (gument) 495.67 146.2 P
1.24 (that determines the number of subpopulations contained in a data structure. The) 135.65 132.2 P
0.5 (low-level routines are then called independently) 135.65 118.2 P
0.5 (, in turn, with each subpopulation) 368.22 118.2 P
238.13 264.2 429.16 548.95 C
3 12 Q
0 X
0 K
(C) 239.13 402.93 T
(h) 246.33 402.93 T
(r) 253.52 402.93 T
(o) 260.72 402.93 T
(m) 267.92 402.93 T
(I) 317.18 515.29 T
(n) 324.38 515.29 T
(d) 331.58 515.29 T
(1) 340.23 509.8 T
(S) 349.14 515.29 T
(u) 356.33 515.29 T
(b) 363.53 515.29 T
(P) 370.73 515.29 T
(o) 377.92 515.29 T
(p) 385.12 515.29 T
(1) 393.77 509.8 T
(I) 317.68 495.33 T
(n) 324.88 495.33 T
(d) 332.08 495.33 T
(2) 340.73 489.85 T
(S) 348.64 495.33 T
(u) 355.83 495.33 T
(b) 363.03 495.33 T
(P) 370.23 495.33 T
(o) 377.42 495.33 T
(p) 384.62 495.33 T
(1) 393.27 489.85 T
4 F
(\274) 353.58 475.38 T
3 F
(I) 317.18 459.4 T
(n) 324.38 459.4 T
(d) 331.58 459.4 T
(N) 340.23 453.92 T
(S) 349.14 459.4 T
(u) 356.33 459.4 T
(b) 363.53 459.4 T
(P) 370.73 459.4 T
(o) 377.92 459.4 T
(p) 385.12 459.4 T
(1) 393.77 453.92 T
(I) 317.68 439.45 T
(n) 324.88 439.45 T
(d) 332.08 439.45 T
(1) 340.73 433.96 T
(S) 349.64 439.45 T
(u) 356.83 439.45 T
(b) 364.03 439.45 T
(P) 371.23 439.45 T
(o) 378.42 439.45 T
(p) 385.62 439.45 T
(2) 394.27 433.96 T
(I) 317.68 419.49 T
(n) 324.88 419.49 T
(d) 332.08 419.49 T
(2) 340.73 414.01 T
(S) 348.64 419.49 T
(u) 355.83 419.49 T
(b) 363.03 419.49 T
(P) 370.23 419.49 T
(o) 377.42 419.49 T
(p) 384.62 419.49 T
(2) 393.27 414.01 T
4 F
(\274) 353.58 399.54 T
3 F
(I) 317.18 383.56 T
(n) 324.38 383.56 T
(d) 331.58 383.56 T
(N) 340.23 378.07 T
(S) 349.14 383.56 T
(u) 356.33 383.56 T
(b) 363.53 383.56 T
(P) 370.73 383.56 T
(o) 377.92 383.56 T
(p) 385.12 383.56 T
(2) 393.77 378.07 T
4 F
(\274) 353.58 363.6 T
3 F
(I) 299.2 347.62 T
(n) 306.39 347.62 T
(d) 313.59 347.62 T
(1) 322.24 342.14 T
(S) 331.15 347.62 T
(u) 338.34 347.62 T
(b) 345.54 347.62 T
(P) 352.73 347.62 T
(o) 359.93 347.62 T
(p) 367.13 347.62 T
(S) 375.79 342.14 T
(U) 382.98 342.14 T
(B) 390.18 342.14 T
(P) 397.37 342.14 T
(O) 404.57 342.14 T
(P) 411.77 342.14 T
(I) 299.7 327.67 T
(n) 306.89 327.67 T
(d) 314.09 327.67 T
(2) 322.74 322.18 T
(S) 330.65 327.67 T
(u) 337.84 327.67 T
(b) 345.04 327.67 T
(P) 352.23 327.67 T
(o) 359.43 327.67 T
(p) 366.63 327.67 T
(S) 375.29 322.18 T
(U) 382.48 322.18 T
(B) 389.68 322.18 T
(P) 396.87 322.18 T
(O) 404.07 322.18 T
(P) 411.27 322.18 T
4 F
(\274) 353.58 307.72 T
3 F
(I) 299.2 291.73 T
(n) 306.39 291.73 T
(d) 313.59 291.73 T
(N) 322.24 286.25 T
(S) 331.15 291.73 T
(u) 338.34 291.73 T
(b) 345.54 291.73 T
(P) 352.73 291.73 T
(o) 359.93 291.73 T
(p) 367.13 291.73 T
(S) 375.79 286.25 T
(U) 382.98 286.25 T
(B) 390.18 286.25 T
(P) 397.37 286.25 T
(O) 404.57 286.25 T
(P) 411.77 286.25 T
2 F
(.) 424.17 402.93 T
4 F
(=) 282.11 402.93 T
300.7 283.77 296.7 283.77 2 L
0.33 H
0 Z
N
296.7 283.77 296.7 527.27 2 L
N
296.7 527.27 300.7 527.27 2 L
N
417.46 283.77 421.46 283.77 2 L
N
421.46 283.77 421.46 527.27 2 L
N
421.46 527.27 417.46 527.27 2 L
N
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "23" 24
%%Page: "24" 24
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-24) 513.33 61.29 T
2 12 Q
0.1 (to perform functions such as selection, crossover and reinsertion. These high-level) 135.65 736.95 P
(functions are listed in the T) 135.65 722.95 T
(able below) 266.39 722.95 T
(.) 317.9 722.95 T
1 F
(Note:) 135.65 570.95 T
2 F
( As currently implemented, all subpopulations must be of equal size.) 163.62 570.95 T
0.04 (The transfer of individuals between subpopulations is implemented in the T) 135.65 544.95 P
0.04 (oolbox) 498.33 544.95 P
0.57 (function) 135.65 530.95 P
3 F
1.37 (migrate) 179.19 530.95 P
2 F
0.57 (. A single scalar is used to determine the amount of migration) 229.56 530.95 P
3.62 (of individuals from one subpopulation to another) 135.65 516.95 P
3.62 (. Thus, given a population) 391.9 516.95 P
1.6 (comprised of a number of subpopulations, the same number of individuals will) 135.65 502.95 P
1.86 (always be transferred from a subpopulation as the number it will receive from) 135.65 488.95 P
0.15 (another subpopulation. A second parameter to the function) 135.65 474.95 P
3 F
0.37 (migrate) 421.67 474.95 P
2 F
0.15 ( controls the) 472.05 474.95 P
3.59 (manner in which individuals are selected for migration, either uniformly or) 135.65 460.95 P
4.25 (according to \336tness. Uniform selection picks individuals for migration and) 135.65 446.95 P
2.52 (replaces individuals in a subpopulation with immigrants in a random manner) 135.65 432.95 P
2.52 (.) 528.65 432.95 P
2.4 (Fitness-based migration selects individuals according to their \336tness level, the) 135.65 418.95 P
0.08 (most \336t individuals being the ones selected for migration, and replaces individuals) 135.65 404.95 P
(in a subpopulation uniformly at random.) 135.65 390.95 T
1.09 (A further parameter speci\336es the population topology over which migration will) 135.65 364.95 P
-0.26 (take place. Fig. 7 shows the most basic migration paths implemented in) 135.65 350.95 P
3 F
-0.63 (migrate) 478.28 350.95 P
2 F
-0.26 (,) 528.65 350.95 P
0.71 (the ring topology) 135.65 336.95 P
0.71 (. Here individuals are transferred between directionally adjacent) 218.92 336.95 P
1.69 (subpopulations. For example, individuals from subpopulation 6 migrate only to) 135.65 322.95 P
6.65 (subpopulation 1 and individuals from subpopulation 1 only migrate to) 135.65 308.95 P
(subpopulation 2.) 135.65 294.95 T
(SUBPOPULA) 222.4 690.95 T
(TION SUPPOR) 291.04 690.95 T
(T FUNCTIONS) 367.28 690.95 T
3 F
(mutate) 141.65 666.95 T
2 F
(mutation operators) 249.65 666.95 T
3 F
(recombin) 141.65 644.95 T
2 F
(crossover and recombination operators) 249.65 644.95 T
3 F
(reins) 141.65 622.95 T
2 F
(uniform random and \336tness-based reinsertion) 249.65 622.95 T
3 F
(select) 141.65 600.95 T
2 F
(independent subpopulation selection) 249.65 600.95 T
135.65 706.7 135.65 593.2 2 L
V
0.5 H
0 Z
N
243.65 679.45 243.65 592.7 2 L
V
N
531.65 706.7 531.65 593.2 2 L
V
N
135.4 706.95 531.9 706.95 2 L
V
N
135.9 682.2 531.4 682.2 2 L
V
N
135.9 679.7 531.4 679.7 2 L
V
N
135.4 592.95 531.9 592.95 2 L
V
N
63.65 96.95 531.65 744.95 C
133.38 126.4 531.65 290.95 C
314.34 259.94 354.02 279.78 9.92 RR
7 X
0 K
V
0.5 H
2 Z
0 X
N
2 9 Q
(SubPop 1) 316.82 266.16 T
373.86 190.49 413.55 210.33 9.92 RR
7 X
V
0 X
N
(SubPop 3) 376.35 196.71 T
254.81 190.49 294.49 210.33 9.92 RR
7 X
V
0 X
N
(SubPop 5) 257.3 196.71 T
254.81 230.17 294.49 250.02 9.92 RR
7 X
V
0 X
N
(SubPop 6) 257.3 236.4 T
373.86 230.17 413.55 250.02 9.92 RR
7 X
V
0 X
N
(SubPop 2) 376.35 236.4 T
314.34 160.72 354.02 180.57 9.92 RR
7 X
V
0 X
N
(SubPop 4) 316.82 166.95 T
308.7 272.85 314.34 269.86 308.93 266.48 308.81 269.67 4 Y
V
98 180 39.68 19.84 314.34 250.02 A
395.27 255.94 393.69 250.02 389.35 254.35 392.31 255.15 4 Y
V
15 90 39.68 19.84 354.02 250.02 A
273.07 184.57 274.65 190.49 278.99 186.17 276.03 185.37 4 Y
V
195 270 39.68 19.84 314.34 190.49 A
359.65 167.65 354.02 170.65 359.43 174.03 359.54 170.84 4 Y
V
278 360 39.68 19.84 354.02 190.49 A
396.7 215.53 393.7 210.33 390.7 215.53 393.7 215.53 4 Y
V
393.7 230.17 393.7 215.53 2 L
N
271.65 224.98 274.65 230.17 277.65 224.98 274.65 224.98 4 Y
V
274.65 210.33 274.65 224.98 2 L
N
5 12 Q
(Figure 7: Ring Migration T) 246.77 143.55 T
(opology) 382.95 143.55 T
142.84 130.96 525.52 287.44 R
N
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "24" 25
%%Page: "25" 25
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-25) 513.33 61.29 T
2 12 Q
1.18 (A similar strategy to the ring topology is the neighbourhood migration of Fig.8.) 135.65 736.95 P
3.3 (Like the ring topology) 135.65 722.95 P
3.3 (, migration is made only between nearest neighbours,) 252.38 722.95 P
2.19 (however) 135.65 708.95 P
2.19 (, migration may occur in either direction between subpopulations. For) 176.46 708.95 P
2.73 (each subpopulation, the possible immigrants are determined, according to the) 135.65 694.95 P
0.13 (desired selection method, from adjacent subpopulations and a \336nal selection made) 135.65 680.95 P
0.07 (from this pool of individuals. This ensures that individuals will not migrate from a) 135.65 666.95 P
(subpopulation to the same subpopulation.) 135.65 652.95 T
-0.1 (The most general migration strategy supported by) 135.65 458.75 P
3 F
-0.25 (migrate) 377.1 458.75 P
2 F
-0.1 ( is that of unrestricted) 427.47 458.75 P
3.36 (migration, Fig. 9. Here, individuals may migrate from any subpopulation to) 135.65 444.75 P
2.16 (another) 135.65 430.75 P
2.16 (. For each subpopulation, a pool of potential immigrants is constructed) 170.96 430.75 P
3.58 (from the other subpopulations. The individual migrants are then determined) 135.65 416.75 P
(according to the appropriate selection strategy) 135.65 402.75 T
(.) 356.36 402.75 T
0.63 (An example of a GA with multiple subpopulations is considered in the) 135.65 215.11 P
0 F
0.63 (Examples) 485.02 215.11 P
2 F
(Section.) 135.65 201.11 T
63.65 96.95 531.65 744.95 C
133.38 470.75 531.65 648.95 C
312.67 609.34 352.35 629.18 9.92 RR
7 X
0 K
V
0.5 H
0 Z
0 X
N
2 9 Q
(SubPop 1) 315.16 615.56 T
372.2 539.9 411.88 559.74 9.92 RR
7 X
V
0 X
N
(SubPop 3) 374.68 546.12 T
253.14 539.9 292.83 559.74 9.92 RR
7 X
V
0 X
N
(SubPop 5) 255.63 546.12 T
253.14 579.58 292.83 599.42 9.92 RR
7 X
V
0 X
N
(SubPop 6) 255.63 585.8 T
372.2 579.58 411.88 599.42 9.92 RR
7 X
V
0 X
N
(SubPop 2) 374.68 585.8 T
312.67 510.13 352.35 529.97 9.92 RR
7 X
V
0 X
N
(SubPop 4) 315.16 516.35 T
277.32 603.75 272.98 599.42 271.4 605.35 274.36 604.55 4 Y
V
307.04 622.26 312.67 619.26 307.26 615.88 307.15 619.07 4 Y
V
98 165 39.68 19.84 312.67 599.42 A
357.77 615.88 352.36 619.26 357.99 622.26 357.88 619.07 4 Y
V
393.6 605.35 392.03 599.42 387.68 603.75 390.64 604.55 4 Y
V
15 82 39.68 19.84 352.35 599.42 A
307.26 523.43 312.67 520.05 307.04 517.06 307.15 520.25 4 Y
V
271.4 533.98 272.98 539.9 277.32 535.57 274.36 534.77 4 Y
V
195 262 39.68 19.84 312.67 539.9 A
387.68 535.57 392.03 539.9 393.6 533.98 390.64 534.77 4 Y
V
357.99 517.06 352.36 520.05 357.77 523.43 357.88 520.25 4 Y
V
278 345 39.68 19.84 352.35 539.9 A
389.04 574.38 392.04 579.58 395.04 574.38 392.04 574.38 4 Y
V
395.04 564.93 392.04 559.74 389.04 564.93 392.04 564.93 4 Y
V
392.04 574.38 392.04 564.93 2 L
N
275.99 564.93 272.99 559.74 269.99 564.93 272.99 564.93 4 Y
V
269.99 574.38 272.99 579.58 275.99 574.38 272.99 574.38 4 Y
V
272.99 564.93 272.99 574.38 2 L
N
5 12 Q
(Figure 8: Neighbourhood Migration T) 218.12 492.95 T
(opology) 408.27 492.95 T
141.18 481.15 523.85 638.55 R
2 Z
N
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
63.65 96.95 531.65 744.95 C
133.38 227.11 531.65 398.75 C
311.25 362.42 353.77 382.26 9.92 RR
7 X
0 K
V
0.5 H
0 Z
0 X
N
2 9 Q
(SubPop 1) 315.16 369.28 T
382.12 291.56 424.64 311.4 9.92 RR
7 X
V
0 X
N
(SubPop 3) 386.02 298.41 T
311.25 263.21 353.77 283.05 9.92 RR
7 X
V
0 X
N
(SubPop 4) 315.16 270.07 T
240.39 334.08 282.91 353.92 9.92 RR
7 X
V
0 X
N
(SubPop 6) 244.29 340.93 T
382.12 334.08 424.64 353.92 9.92 RR
7 X
V
0 X
N
(SubPop 2) 386.02 340.93 T
240.39 291.56 282.91 311.4 9.92 RR
7 X
V
0 X
N
(SubPop 5) 244.29 298.41 T
288.1 339.74 282.91 342.74 288.1 345.74 288.1 342.74 4 Y
V
376.92 345.74 382.12 342.74 376.92 339.74 376.92 342.74 4 Y
V
288.1 342.74 376.92 342.74 2 L
N
288.1 297.22 282.91 300.22 288.1 303.22 288.1 300.22 4 Y
V
376.92 303.22 382.12 300.22 376.92 297.22 376.92 300.22 4 Y
V
288.1 300.22 376.92 300.22 2 L
N
259.27 328.82 262.45 333.91 265.27 328.61 262.27 328.72 4 Y
V
264.83 316.48 261.64 311.4 258.83 316.7 261.83 316.59 4 Y
V
262.27 328.71 261.83 316.59 2 L
N
400.7 328.77 403.79 333.91 406.69 328.66 403.69 328.71 4 Y
V
406.47 316.54 403.38 311.4 400.47 316.65 403.47 316.59 4 Y
V
403.7 328.71 403.48 316.59 2 L
N
335.55 288.23 332.51 283.05 329.55 288.27 332.55 288.25 4 Y
V
330.08 357.4 333.12 362.57 336.08 357.36 333.08 357.38 4 Y
V
332.55 288.25 333.08 357.38 2 L
N
265.7 357.93 261.12 353.91 259.92 359.88 262.81 358.91 4 Y
V
304.36 376.57 310.45 373.24 304.52 369.63 304.44 373.1 4 Y
V
97 165 49.33 19.33 310.46 353.91 A
358.95 369.45 353.79 372.57 359.07 375.49 359.01 372.47 4 Y
V
404.8 360.17 403.78 353.91 398.86 357.93 401.83 359.05 4 Y
V
16 84 50 18.67 353.79 353.91 A
398.23 287.21 403.12 291.24 404.17 284.99 401.2 286.1 4 Y
V
359.87 269.25 353.78 272.58 359.71 276.19 359.79 272.72 4 Y
V
277 344 49.33 18.67 353.79 291.24 A
305.19 275.53 311.12 271.91 305.02 268.58 305.11 272.05 4 Y
V
260.59 285.27 261.79 291.24 266.36 287.22 263.48 286.24 4 Y
V
195 263 49.33 19.33 311.12 291.24 A
377.29 310.28 382.45 306.58 376.66 303.96 376.97 307.12 4 Y
V
339.96 356.6 343.12 362.57 346.72 356.84 343.34 356.72 4 Y
V
186 262 39.33 56 382.46 362.57 A
314.84 356.76 318.45 362.57 321.68 356.54 318.26 356.65 4 Y
V
289.05 303.42 283.12 305.91 288.24 309.8 288.64 306.61 4 Y
V
279 354 35.33 56.67 283.12 362.57 A
286.86 334.27 281.79 337.91 287.48 340.48 287.17 337.37 4 Y
V
323.54 289.08 320.45 283.24 316.94 288.83 320.24 288.96 4 Y
V
6 82 38.67 54.67 281.79 283.24 A
343.9 289.35 340.45 283.91 337.47 289.62 340.69 289.49 4 Y
V
378.27 339.89 383.78 337.24 378.73 333.79 378.5 336.84 4 Y
V
97 174 43.33 53.33 383.79 283.91 A
5 12 Q
(Figure 9: Unrestricted Migration T) 226.45 246.03 T
(opology) 399.93 246.03 T
141.18 238.52 523.85 387.34 R
2 Z
N
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "25" 26
%%Page: "26" 26
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-26) 513.33 61.29 T
63.65 716.95 531.65 726.95 C
63.65 725.95 531.65 725.95 2 L
1 H
2 Z
0 X
0 K
N
-8.35 24.95 603.65 816.95 C
1 18 Q
0 X
0 K
(Examples) 63.65 732.95 T
2 12 Q
2.91 (This Section contains two detailed examples using the GA T) 135.65 694.95 P
2.91 (oolbox to solve) 451.86 694.95 P
(optimization problems:) 135.65 680.95 T
(\245) 157.25 654.95 T
(A simple binary GA to solve De Jong\325) 171.65 654.95 T
(s \336rst test function [13].) 355.87 654.95 T
(\245) 157.25 634.95 T
(A real-valued multi-population GA to solve the Harvest problem [9].) 171.65 634.95 T
1 16 Q
(The Simple GA) 135.65 598.29 T
2 12 Q
1.33 (This example demonstrates how a simple GA can be constructed using routines) 135.65 570.95 P
0.28 (from the GA T) 135.65 556.95 P
0.28 (oolbox to solve an optimization problem. The objective function to) 207.28 556.95 P
(be minimized is an extended version of De Jong\325) 135.65 542.95 T
(s \336rst test function [13]:) 370.15 542.95 T
(,) 315.32 503.13 T
0.97 (where) 135.65 463.88 P
0 F
0.97 (n) 168.91 463.88 P
2 F
0.97 ( de\336nes the number of dimensions of the problem. For this example, we) 174.91 463.88 P
(choose) 135.65 449.88 T
0 F
(n) 171.95 449.88 T
2 F
( = 20. The minimum of this function is, of course, located at) 177.95 449.88 T
0 F
(x) 469.87 449.88 T
0 10 Q
(i) 475.19 446.88 T
2 12 Q
( = 0.) 477.97 449.88 T
1 (The computational element of the M) 135.65 423.88 P
2 10 Q
0.84 (A) 316.21 423.88 P
0.84 (TLAB) 322.32 423.88 P
2 12 Q
1 ( objective function is encapsulated in) 348.42 423.88 P
(the code segment below) 135.65 409.88 T
(.) 250.45 409.88 T
3 F
(function ObjVal = objfun1\050 Phen \051) 171.65 383.88 T
(ObjVal = sum\050\050Phen .* Phen\051\325\051\325;) 171.65 363.88 T
2 F
1.32 (An m-\336le implementing this objective function,) 135.65 337.88 P
3 F
3.15 (objfun1) 375.74 337.88 P
2 F
1.32 (, is included with the) 426.11 337.88 P
(GA T) 135.65 323.88 T
(oolbox software.) 162.45 323.88 T
1.92 (Having written an m-\336le for the objective function, the GA code may now be) 135.65 297.88 P
-0.07 (constructed. This can be done directly from the M) 135.65 283.88 P
2 10 Q
-0.06 (A) 375.22 283.88 P
-0.06 (TLAB) 381.33 283.88 P
2 12 Q
-0.07 ( command line, in a script) 407.42 283.88 P
2.05 (\336le or as a M) 135.65 269.88 P
2 10 Q
1.71 (A) 207.13 269.88 P
1.71 (TLAB) 213.24 269.88 P
2 12 Q
2.05 ( function. Fig. 10 shows an outline of the script \336le) 239.33 269.88 P
3 F
4.92 (sga) 510.06 269.88 P
2 F
(supplied with the toolbox that implements a simple GA to solve this problem.) 135.65 255.88 T
3.3 (The \336rst \336ve lines describe the major variables of the GA. The number of) 135.65 229.88 P
1.5 (individuals is set to) 135.65 215.88 P
3 F
3.6 (NIND = 40) 237.61 215.88 P
2 F
1.5 ( and the number of generations) 309.58 215.88 P
3 F
3.6 (MAXGEN =) 470.48 215.88 P
-0.31 (300) 135.65 201.88 P
2 F
-0.13 (. The number of variables used is) 157.24 201.88 P
3 F
-0.31 (NVAR = 20) 318.87 201.88 P
2 F
-0.13 ( and each variable uses a 20 bit) 383.01 201.88 P
1.58 (representation,) 135.65 187.88 P
3 F
3.8 (PRECI = 20) 211.17 187.88 P
2 F
1.58 (. This example uses a generation gap,) 290.73 187.88 P
3 F
3.8 (GGAP =) 484.67 187.88 P
4.4 (0.9) 135.65 173.88 P
2 F
1.83 (, and \336tness-based reinsertion to implement an elitist strategy whereby the) 157.24 173.88 P
2.92 (four most \336t individuals always propagate through to successive generations.) 135.65 159.88 P
(Thus, 36 \050) 135.65 145.88 T
3 F
(NIND) 184.62 145.88 T
4 F
(\264) 216.4 145.88 T
3 F
(GGAP) 225.98 145.88 T
2 F
(\051 new individuals are produced at each generation.) 254.77 145.88 T
237.51 485.88 315.32 524.95 C
0 12 Q
0 X
0 K
(f) 238.51 503.13 T
2 9 Q
(1) 242.31 499.36 T
0 12 Q
(x) 254.61 503.13 T
4 F
(\050) 249.51 503.13 T
(\051) 260.54 503.13 T
0 F
(x) 304.04 503.13 T
0 9 Q
(i) 309.83 499.35 T
2 F
(2) 309.83 509.24 T
0 F
(i) 285.12 488.83 T
2 F
(1) 298.55 488.83 T
4 F
(=) 290.62 488.83 T
0 F
(n) 291.83 517.81 T
4 18 Q
(\345) 287.67 499.93 T
4 12 Q
(=) 272.53 503.13 T
-8.35 24.95 603.65 816.95 C
351.3 496.49 429.79 512.33 C
2 12 Q
0 X
0 K
(5) 359.35 503.13 T
(1) 365.35 503.13 T
(2) 371.34 503.13 T
4 F
(-) 352.3 503.13 T
0 F
(x) 389.92 503.13 T
0 9 Q
(i) 395.71 499.35 T
2 12 Q
(5) 410.8 503.13 T
(1) 416.79 503.13 T
(2) 422.79 503.13 T
4 F
(\243) 380.34 503.13 T
(\243) 401.21 503.13 T
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "26" 27
%%Page: "27" 27
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-27) 513.33 61.29 T
2 12 Q
1.06 (The \336eld descriptor is constructed using the matrix replication function,) 135.65 178.42 P
3 F
2.54 (rep) 493.67 178.42 P
2 F
1.06 (, to) 515.26 178.42 P
3.96 (build the matrix,) 135.65 164.42 P
3 F
9.51 (FieldD) 230.16 164.42 P
2 F
3.96 (, describing the chromosomes\325 representation and) 273.34 164.42 P
-0.2 (interpretation. In this case,) 135.65 150.42 P
3 F
-0.49 (FieldD) 265.41 150.42 P
2 F
-0.2 ( describes 20 variables, each Gray coded using) 308.59 150.42 P
0.35 (20 bits over the interval [-512, 512]. An initial population is then created with the) 135.65 136.42 P
(function) 135.65 122.42 T
3 F
(crtbp) 178.62 122.42 T
2 F
( thus,) 214.6 122.42 T
63.65 96.95 531.65 744.95 C
136.44 200.42 531.65 732.95 C
142.71 234 525.38 722.98 R
7 X
0 K
V
3 12 Q
0 X
(NIND = 40;) 142.71 714.98 T
(% Number of individuals) 305.86 714.98 T
(MAXGEN = 300;) 142.71 700.98 T
(% Maximum no. of generations) 305.86 700.98 T
(NVAR = 20;) 142.71 686.98 T
(% No. of variables) 305.86 686.98 T
(PRECI = 20;) 142.71 672.98 T
(% Precision of variables) 305.86 672.98 T
(GGAP = 0.9;) 142.71 658.98 T
(% Generation gap) 305.86 658.98 T
(% Build f) 142.71 639.98 T
(ield descriptor) 207.47 639.98 T
(FieldD = [rep\050[PRECI],[1,NVAR]\051;...) 142.71 625.98 T
(rep\050[-512;512],[1,NVAR]\051; rep\050[1;0;1;1],[1,NVAR]\051];) 157.1 611.98 T
(% Initialise population) 142.71 592.98 T
(Chrom = crtbp\050NIND, NVAR*PRECI\051;) 142.71 578.98 T
(gen = 0;) 142.71 559.98 T
(% Counter) 305.86 559.98 T
(% Evaluate initial population) 142.71 540.98 T
(ObjV = objfun1\050bs2rv\050Chrom,FieldD\051\051;) 142.71 526.98 T
(% Generational loop) 142.71 507.98 T
(while gen < MAXGEN,) 142.71 493.98 T
(% Assign f) 167.91 474.98 T
(itness values to entire population) 239.87 474.98 T
(FitnV = ranking\050ObjV\051;) 167.91 460.98 T
(% Select individuals for breeding) 167.91 441.98 T
(SelCh = select\050\325sus\325, Chrom, FitnV, GGAP\051;) 167.91 427.98 T
(% Recombine individuals \050crossover\051) 167.91 408.98 T
(SelCh = recombin\050\325xovsp\325,SelCh,0.7\051;) 167.91 394.98 T
(% Apply mutation) 167.91 375.98 T
(SelCh = mut\050SelCh\051;) 167.91 361.98 T
(% Evaluate offspring, call objective function) 167.91 342.98 T
(ObjVSel = objfun1\050bs2rv\050SelCh,FieldD\051\051;) 167.91 328.98 T
(% Reinsert offspring into population) 167.91 309.98 T
([Chrom ObjV]=reins\050Chrom,SelCh,1,1,ObjV,ObjVSel\051;) 167.91 295.98 T
(% Increment counter) 167.91 276.98 T
(gen = gen+1;) 167.91 262.98 T
(end) 142.71 243.98 T
139.16 204.48 528.92 728.89 R
0.5 H
2 Z
N
5 F
(Figure 10: The Simple GA in M) 238.91 212.83 T
5 10 Q
(A) 397.51 212.83 T
(TLAB) 403.63 212.83 T
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "27" 28
%%Page: "28" 28
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-28) 513.33 61.29 T
3 12 Q
(Chrom = crtbp\050NIND, NVAR*PRECI\051;) 171.65 736.95 T
2 F
0.14 (producing a matrix,) 135.65 710.95 P
3 F
0.35 (Chrom) 233.35 710.95 P
2 F
0.14 (, of) 269.33 710.95 P
3 F
0.35 (NIND) 288.6 710.95 P
2 F
0.14 ( uniformly distributed random binary strings) 317.39 710.95 P
(of length) 135.65 696.95 T
3 F
(NVAR) 181.62 696.95 T
4 F
(\264) 213.4 696.95 T
3 F
(PRECI) 222.98 696.95 T
2 F
(.) 258.96 696.95 T
0.86 (The generation counter) 135.65 670.95 P
0.86 (,) 248.12 670.95 P
3 F
2.06 (gen) 254.98 670.95 P
2 F
0.86 (, is set to zero. The following line then converts the) 276.57 670.95 P
0.12 (binary strings to real-values using the function) 135.65 656.95 P
3 F
0.28 (bs2rv) 362.64 656.95 P
2 F
0.12 ( and evaluates the objective) 398.62 656.95 P
1.26 (function,) 135.65 642.95 P
3 F
3.03 (objfun1) 182.88 642.95 P
2 F
1.26 (, for all of the individuals in the initial population as shown) 233.25 642.95 P
(below) 135.65 628.95 T
(.) 164.18 628.95 T
3 F
(ObjV = objfun1\050bs2rv\050Chrom, FieldD\051\051;) 171.65 602.95 T
2 F
2.08 (The function) 135.65 576.95 P
3 F
4.98 (bs2rv) 204.42 576.95 P
2 F
2.08 ( converts the binary strings in the matrix) 240.4 576.95 P
3 F
4.98 (Chrom) 454.22 576.95 P
2 F
2.08 ( to real-) 490.2 576.95 P
1.74 (values according to the \336eld descriptor) 135.65 562.95 P
1.74 (,) 330.07 562.95 P
3 F
4.18 (FieldD) 337.81 562.95 P
2 F
1.74 (, and returns a matrix of real-) 380.99 562.95 P
1.05 (valued phenotypes. The return value matrix of) 135.65 548.95 P
3 F
2.52 (bs2rv) 368.17 548.95 P
2 F
1.05 ( is then passed directly as) 404.15 548.95 P
4.34 (the input ar) 135.65 534.95 P
4.34 (gument to the objective function,) 198.74 534.95 P
3 F
10.41 (objfun1) 382.32 534.95 P
2 F
4.34 (, and the resulting) 432.69 534.95 P
0.18 (objective function values are returned in the matrix) 135.65 520.95 P
3 F
0.44 (ObjV) 385.59 520.95 P
2 F
0.18 (. The GA then enters the) 412.83 520.95 P
(generational) 135.65 506.95 T
3 F
(while) 197.93 506.95 T
2 F
( loop.) 233.91 506.95 T
1.49 (The \336rst step in the generational loop is the assignment of \336tness values to the) 135.65 480.95 P
3.02 (individuals. In this example, rank-based \336tness assignment is used as shown) 135.65 466.95 P
(below) 135.65 452.95 T
(,) 164.18 452.95 T
3 F
(FitnV = ranking\050ObjV\051;) 171.65 426.95 T
2 F
2.36 (Here, the objective function values, ObjV) 135.65 400.95 P
2.36 (, are passed to the T) 346.1 400.95 P
2.36 (oolbox function) 452.99 400.95 P
3 F
1.32 (ranking) 135.65 386.95 P
2 F
0.55 ( with no other ar) 186.02 386.95 P
0.55 (guments. The default setting for the ranking algorithm) 267.29 386.95 P
-0.1 (assume a selective pressure of 2 and linear ranking, giving the most \336t individual a) 135.65 372.95 P
1.62 (\336tness value of 2 and the least \336t individual a \336tness value of 0. Note that the) 135.65 358.95 P
1.78 (ranking algorithm assumes that the objective function is to be) 135.65 344.95 P
1 F
1.78 (minimised) 451.91 344.95 P
2 F
1.78 (. The) 505.22 344.95 P
(resulting \336tness values are returned in the vector) 135.65 330.95 T
3 F
(FitnV) 371.47 330.95 T
2 F
(.) 405.91 330.95 T
2.13 (The selection stage uses the high-level function) 135.65 304.95 P
3 F
5.1 (select) 381.37 304.95 P
2 F
2.13 ( to call the low-level) 424.55 304.95 P
(stochastic universal sampling routine,) 135.65 290.95 T
3 F
(sus) 319.87 290.95 T
2 F
(, as follows,) 341.45 290.95 T
3 F
(SelCh = select\050\325sus\325, Chrom, FitnV, GGAP\051;) 171.65 264.95 T
2 F
2.64 (After selection,) 135.65 238.95 P
3 F
6.33 (SelCh) 217.86 238.95 P
2 F
2.64 ( contains) 253.84 238.95 P
3 F
6.33 (GGAP) 305.09 238.95 P
4 F
2.64 (\264) 339.51 238.95 P
3 F
6.33 (NIND) 351.73 238.95 P
2 F
2.64 ( individuals from the original) 380.51 238.95 P
1.73 (population) 135.65 224.95 P
3 F
4.16 (Chrom) 191.68 224.95 P
2 F
1.73 (. These individuals are now recombined using the high-level) 227.67 224.95 P
(function) 135.65 210.95 T
3 F
(recombin) 178.62 210.95 T
2 F
( as shown below) 236.19 210.95 T
(.) 315.02 210.95 T
3 F
(SelCh = recombin\050\325xovsp\325, SelCh, 0.7\051;) 171.65 184.95 T
1.76 (recombin) 135.65 158.95 P
2 F
0.73 ( takes the individuals selected for reproduction,) 193.22 158.95 P
3 F
1.76 (SelCh) 428.85 158.95 P
2 F
0.73 (, and uses the) 464.83 158.95 P
-0.27 (single-point crossover routine,) 135.65 144.95 P
3 F
-0.65 (xovsp) 284.07 144.95 P
2 F
-0.27 (, to perform crossover with probability) 320.05 144.95 P
-0.27 (,) 503.78 144.95 P
0 F
-0.27 (Px) 509.5 144.95 P
2 F
-0.27 ( =) 522.16 144.95 P
-0.21 (0.7. The individuals in the input matrix) 135.65 130.95 P
3 F
-0.51 (SelCh) 325.06 130.95 P
2 F
-0.21 ( are ordered such that individuals in) 361.04 130.95 P
2.9 (odd numbered positions are crossed with the individual in the adjacent even) 135.65 116.95 P
1.66 (numbered position. If the number of individuals in) 135.65 102.95 P
3 F
3.98 (SelCh) 394.43 102.95 P
2 F
1.66 ( is odd then the last) 430.41 102.95 P
FMENDPAGE
%%EndPage: "28" 29
%%Page: "29" 29
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-29) 513.33 61.29 T
2 12 Q
0.28 (individual is always returned uncrossed. The of) 135.65 736.95 P
0.28 (fspring produced by this crossover) 364.63 736.95 P
-0.05 (are returned in the same matrix,) 135.65 722.95 P
3 F
-0.13 (SelCh) 290.87 722.95 P
2 F
-0.05 (. The actual crossover routine used may be) 326.85 722.95 P
5.34 (changed by supplying a dif) 135.65 708.95 P
5.34 (ferent function name in the string passed to) 286.72 708.95 P
3 F
(recombin) 135.65 694.95 T
2 F
(.) 193.22 694.95 T
2.79 (Having produced a set of of) 135.65 668.95 P
2.79 (fspring, mutation may now be applied using the) 282.93 668.95 P
(mutation function) 135.65 654.95 T
3 F
(mut) 224.27 654.95 T
2 F
(:) 245.85 654.95 T
3 F
(SelCh = mut\050SelCh\051;) 171.65 628.95 T
2 F
2.71 (Again, the of) 135.65 602.95 P
2.71 (fspring are returned in the matrix) 203.8 602.95 P
3 F
6.49 (SelCh) 381.91 602.95 P
2 F
2.71 (. As no probability of) 417.89 602.95 P
-0.08 (mutation has been speci\336ed in the function call, the default value of) 135.65 588.95 P
0 F
-0.08 (Pm) 462.74 588.95 P
2 F
-0.08 ( = 0.7/) 478.73 588.95 P
0 F
-0.08 (Lind) 509.65 588.95 P
2 F
(= 0.0017, where) 135.65 574.95 T
0 F
(Lind) 216.69 574.95 T
2 F
( is the length of an individual, is assumed.) 238.68 574.95 T
-0.02 (The objective function values for the of) 135.65 548.95 P
-0.02 (fspring,) 325.16 548.95 P
3 F
-0.05 (ObjVSel) 365.12 548.95 P
2 F
-0.02 (, may now be calculated) 415.49 548.95 P
(thus:) 135.65 534.95 T
3 F
(ObjVSel = objfun1\050bs2rv\050SelCh, FieldD\051\051;) 171.65 508.95 T
2 F
0.92 (Because we have used a generation gap, the number of of) 135.65 482.95 P
0.92 (fspring is less than the) 420.71 482.95 P
1.1 (size of the population. Therefore, we must reinsert the of) 135.65 468.95 P
1.1 (fspring into the current) 418.1 468.95 P
(population. This is achieved using the reinsertion function,) 135.65 454.95 T
3 F
(reins) 420.8 454.95 T
2 F
(, as follows:) 456.78 454.95 T
3 F
([Chrom,ObjV]=reins\050Chrom, SelCh,1,1,ObjV,ObjVSel\051;) 171.65 428.95 T
2 F
0.57 (Here,) 135.65 402.95 P
3 F
1.37 (Chrom) 165.52 402.95 P
2 F
0.57 ( and) 201.5 402.95 P
3 F
1.37 (SelCh) 225.95 402.95 P
2 F
0.57 ( are matrices containing the original population and the) 261.93 402.95 P
1.36 (resulting of) 135.65 388.95 P
1.36 (fspring. The two occurrences of the numeral) 191.76 388.95 P
3 F
3.26 (1) 417.09 388.95 P
2 F
1.36 ( indicate that a single) 424.28 388.95 P
2.69 (population is used and that \336tness-based reinsertion be applied. Fitness-based) 135.65 374.95 P
3.38 (reinsertion replaces the least \336t members of) 135.65 360.95 P
3 F
8.12 (Chrom) 371.51 360.95 P
2 F
3.38 ( with the individuals in) 407.49 360.95 P
3 F
2.11 (SelCh) 135.65 346.95 P
2 F
0.88 (. The objective function values of the original population,) 171.63 346.95 P
3 F
2.11 (ObjV) 459.02 346.95 P
2 F
0.88 (, are thus) 486.26 346.95 P
2.41 (required as a parameter to) 135.65 332.95 P
3 F
5.79 (reins) 275.25 332.95 P
2 F
2.41 (. In addition, so that the objective function) 311.23 332.95 P
1.58 (values of the new population can be returned without having to re-evaluate the) 135.65 318.95 P
0.74 (objective function for the entire population, the objective values of the of) 135.65 304.95 P
0.74 (fspring,) 494.67 304.95 P
3 F
-0.64 (ObjVSel) 135.65 290.95 P
2 F
-0.27 (, are also supplied.) 186.02 290.95 P
3 F
-0.64 (reins) 277.56 290.95 P
2 F
-0.27 ( returns the new population with the of) 313.54 290.95 P
-0.27 (fspring) 497.67 290.95 P
(inserted,) 135.65 276.95 T
3 F
(Chrom) 179.62 276.95 T
2 F
(, and the objective function values for this population,) 215.6 276.95 T
3 F
(ObjV) 477.76 276.95 T
2 F
(.) 505 276.95 T
0.09 (Finally) 135.65 250.95 P
0.09 (, the generational counter) 168.86 250.95 P
0.09 (,) 290.54 250.95 P
3 F
0.21 (gen) 296.62 250.95 P
2 F
0.09 (, is incremented. The GA iterates around the) 318.21 250.95 P
0.49 (loop until) 135.65 236.95 P
3 F
1.17 (gen = MAXGEN) 185.94 236.95 P
2 F
0.49 (, in this case 300, and then terminates. The results of) 274.62 236.95 P
1.28 (the genetic optimization are contained in the matrix ObjV and the values of the) 135.65 222.95 P
(decision variables may be obtained by:) 135.65 208.95 T
3 F
(Phen = bs2rv\050Chrom, FieldD\051;) 171.65 182.95 T
FMENDPAGE
%%EndPage: "29" 30
%%Page: "30" 30
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-30) 513.33 61.29 T
1 16 Q
(A Multi-population GA) 135.65 734.29 T
2 12 Q
3.7 (This example shows how functions from the GA T) 135.65 706.95 P
3.7 (oolbox may be used to) 408.25 706.95 P
1.76 (implement a real-valued, multi-population GA. A M) 135.65 692.95 P
2 10 Q
1.47 (A) 398.07 692.95 P
1.47 (TLAB) 404.18 692.95 P
2 12 Q
1.76 ( m-\336le script) 430.27 692.95 P
3 F
4.24 (mpga) 499.86 692.95 P
2 F
1.76 (,) 528.65 692.95 P
0.49 (supplied with the T) 135.65 678.95 P
0.49 (oolbox, implements the code described in this subsection. The) 229.23 678.95 P
2.82 (objective function chosen is that of the harvest problem [9] which is a one-) 135.65 664.95 P
(dimensional equation of growth:) 135.65 650.95 T
(,) 378.2 623.75 T
(with one equality constraint,) 135.65 595.02 T
(,) 353.47 567.81 T
0.35 (where) 135.65 539.1 P
0 F
0.35 (x) 168.29 539.1 P
0 10 Q
0.29 (0) 173.62 536.1 P
2 12 Q
0.35 ( is the initial condition of the state,) 178.62 539.1 P
0 F
0.35 (a) 350.98 539.1 P
2 F
0.35 ( is a scalar constant, and) 356.98 539.1 P
0 F
0.35 (x) 478.65 539.1 P
0 10 Q
0.29 (k) 483.97 536.1 P
4 12 Q
0.35 (\316) 491.76 539.1 P
0 F
0.35 (R) 503.65 539.1 P
2 F
0.35 (and) 514.33 539.1 P
0 F
0.25 (u) 135.65 525.1 P
0 10 Q
0.21 (k) 141.65 522.1 P
4 12 Q
0.25 (\316) 149.33 525.1 P
0 F
0.25 ( R) 157.88 525.1 P
0 10 Q
0.21 (+) 168.46 529.9 P
2 12 Q
0.25 ( are the state and nonnegative control respectively) 175.2 525.1 P
0.25 (. The objective function) 416.31 525.1 P
(is de\336ned as:) 135.65 511.1 T
(,) 375.47 471.18 T
0.04 (where) 135.65 431.93 P
0 F
0.04 (N) 167.98 431.93 P
2 F
0.04 ( is the number of control steps over which the problem is to be solved. An) 175.98 431.93 P
1.19 (m-\336le implementing this objective function,) 135.65 417.93 P
3 F
2.86 (objharv) 356.16 417.93 P
2 F
1.19 (, is supplied with the GA) 405.75 417.93 P
1.41 (T) 135.65 403.93 P
1.41 (oolbox software. Note that as this is a maximisation problem and the T) 142.14 403.93 P
1.41 (oolbox) 498.33 403.93 P
5.62 (routines are implemented to minimise, the objective function,) 135.65 389.93 P
3 F
13.48 (objharv) 479.06 389.93 P
2 F
5.62 (,) 528.65 389.93 P
-0.25 (multiplies) 135.65 375.93 P
0 F
-0.25 (J) 186.38 375.93 P
2 F
-0.25 ( by -1 to produce a minimisation problem. The initial condition is set to) 191.71 375.93 P
0 F
2.3 (x) 135.65 361.93 P
0 10 Q
1.92 (0) 140.97 358.93 P
2 12 Q
2.3 ( = 100 and the scalar is chosen as) 145.97 361.93 P
0 F
2.3 (a) 329.64 361.93 P
2 F
2.3 ( = 1.1. Additionally) 335.64 361.93 P
2.3 (, the exact optimal) 436.14 361.93 P
(solution for this problem can be determined analytically as:) 135.65 347.93 T
(.) 384.8 299.39 T
2.08 (The number of control steps for this problem is) 135.65 260.73 P
0 F
2.08 (N) 383.86 260.73 P
2 F
2.08 ( = 20, thus,) 391.86 260.73 P
3 F
4.99 (NVAR = 20) 456.91 260.73 P
2 F
2.9 (decision variables will be used, one for each control input,) 135.65 246.73 P
0 F
2.9 (u) 447.79 246.73 P
0 10 Q
2.42 (k) 453.79 243.73 P
2 12 Q
2.9 (. The decision) 458.23 246.73 P
-0.02 (variables are bounded in the range) 135.65 232.73 P
3 F
-0.04 (RANGE = [0, 200]) 303.4 232.73 P
2 F
-0.02 (, limiting the maximum) 418.41 232.73 P
0.99 (control input, at any time-step, to 200. The \336eld descriptor) 135.65 218.73 P
0.99 (,) 424.54 218.73 P
3 F
2.37 (FieldD) 431.52 218.73 P
2 F
0.99 (, describing) 474.7 218.73 P
1.46 (the decision variables may be constructed using the matrix replication function,) 135.65 204.73 P
3 F
(rep) 135.65 190.73 T
2 F
(, thus:) 157.24 190.73 T
3 F
(NVAR = 20;) 171.65 164.73 T
(RANGE = [0; 200];) 171.65 149.73 T
(FieldD = rep\050RANGE,[1,NVAR]\051;) 171.65 134.73 T
286.1 617.02 378.2 632.95 C
0 12 Q
0 X
0 K
(x) 287.1 623.75 T
0 9 Q
(k) 292.89 619.97 T
2 F
(1) 306.31 619.97 T
4 F
(+) 299.13 619.97 T
0 12 Q
(a) 329.39 623.75 T
(x) 344.39 623.75 T
4 F
(\327) 338.39 623.75 T
0 9 Q
(k) 350.17 619.97 T
0 12 Q
(u) 366.75 623.75 T
0 9 Q
(k) 373.21 619.97 T
4 12 Q
(-) 357.16 623.75 T
(=) 316.81 623.75 T
-8.35 24.95 603.65 816.95 C
310.83 561.1 353.47 577.02 C
0 12 Q
0 X
0 K
(x) 311.83 567.81 T
2 9 Q
(0) 317.61 564.05 T
0 12 Q
(x) 340.69 567.81 T
0 9 Q
(N) 346.48 564.03 T
4 12 Q
(=) 328.11 567.81 T
-8.35 24.95 603.65 816.95 C
288.83 453.93 375.47 493.1 C
0 12 Q
0 X
0 K
(J) 289.83 471.18 T
2 F
(m) 313.74 471.18 T
(a) 323.07 471.18 T
(x) 328.39 471.18 T
0 F
(u) 364.02 471.18 T
0 9 Q
(k) 370.48 467.4 T
(k) 336.35 456.88 T
2 F
(0) 351.27 456.88 T
4 F
(=) 343.34 456.88 T
0 F
(N) 336.1 485.95 T
2 F
(1) 351.53 485.95 T
4 F
(-) 344.34 485.95 T
4 18 Q
(\345) 339.64 467.97 T
4 12 Q
(=) 301.15 471.18 T
374.47 482.38 364.02 482.38 2 L
0.33 H
0 Z
N
364.02 482.38 361.02 467.54 2 L
N
361.02 467.54 359.02 471.75 2 L
N
359.02 471.75 358.02 469.65 2 L
N
-8.35 24.95 603.65 816.95 C
279.49 282.73 384.8 329.93 C
0 12 Q
0 X
0 K
(J) 280.49 299.39 T
2 9 Q
(*) 285.82 305.5 T
0 12 Q
(x) 320.47 309.69 T
2 9 Q
(0) 326.26 305.93 T
0 12 Q
(a) 338.56 309.69 T
0 9 Q
(N) 344.56 315.75 T
2 12 Q
(1) 363.14 309.69 T
4 F
(-) 353.55 309.69 T
(\050) 333.46 309.69 T
(\051) 369.74 309.69 T
2 9 Q
(2) 375.73 319.8 T
0 12 Q
(a) 317.9 287.73 T
0 9 Q
(N) 323.89 293.83 T
2 F
(1) 339.32 293.83 T
4 F
(-) 332.14 293.83 T
0 12 Q
(a) 351.62 287.73 T
2 F
(1) 370.2 287.73 T
4 F
(-) 360.62 287.73 T
(\050) 346.52 287.73 T
(\051) 376.81 287.73 T
(=) 297.31 299.39 T
317.9 301.98 382.55 301.98 2 L
0.33 H
0 Z
N
383.8 328.93 316.9 328.93 2 L
N
316.9 328.93 313.9 285.73 2 L
N
313.9 285.73 311.9 297.03 2 L
N
311.9 297.03 310.9 291.38 2 L
N
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "30" 31
%%Page: "31" 31
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-31) 513.33 61.29 T
2 12 Q
1.59 (The parameters for the GA may be speci\336ed using M) 135.65 736.95 P
2 10 Q
1.32 (A) 405.4 736.95 P
1.32 (TLAB) 411.51 736.95 P
2 12 Q
1.59 ( variables. For this) 437.61 736.95 P
(example the following parameters are de\336ned:) 135.65 722.95 T
3 F
(% Def) 171.65 696.95 T
(ine GA Parameters) 207.63 696.95 T
(GGAP = 0.8;) 171.65 681.95 T
(% Generation gap) 315.65 681.95 T
(XOVR = 1;) 171.65 666.95 T
(% Crossover rate) 315.65 666.95 T
(MUTR = 1/NVAR;) 171.65 651.95 T
(% Mutation rate) 315.65 651.95 T
(MAXGEN = 1200;) 171.65 636.95 T
(% Maximum no. of generations) 315.65 636.95 T
(INSR = 0.9;) 171.65 621.95 T
(% Insertion rate) 315.65 621.95 T
(SUBPOP = 8;) 171.65 606.95 T
(% No. of subpopulations) 315.65 606.95 T
(MIGR = 0.2;) 171.65 591.95 T
(% Migration rate) 315.65 591.95 T
(MIGGEN = 20;) 171.65 576.95 T
(% No. of gens / migration) 315.65 576.95 T
(NIND = 20;) 171.65 561.95 T
(% No. of individuals / subpop) 315.65 561.95 T
2 F
1.04 (As well as the conventional GA parameters, such as generation gap \050) 135.65 535.95 P
3 F
2.5 (GGAP) 477.51 535.95 P
2 F
1.04 (\051 and) 506.3 535.95 P
3.32 (crossover rate \050) 135.65 521.95 P
3 F
7.96 (XOVR) 216.21 521.95 P
2 F
3.32 (\051, a number of other parameters associated with multi-) 244.99 521.95 P
0.71 (population GAs are de\336ned. Here,) 135.65 507.95 P
3 F
1.71 (INSR = 0.9) 306.75 507.95 P
2 F
0.71 ( speci\336es that only 90% of the) 382.13 507.95 P
4.47 (individuals produced at each generation are reinserted into the population,) 135.65 493.95 P
3 F
2.2 (SUBPOP = 8) 135.65 479.95 P
2 F
0.92 ( subpopulations are to be used with a migration rate of) 212.01 479.95 P
3 F
2.2 (MIGR =) 486.27 479.95 P
1.31 (0.2) 135.65 465.95 P
2 F
0.55 (, or 20%, between subpopulations and migration occurring at every) 157.24 465.95 P
3 F
1.31 (MIGGEN) 488.47 465.95 P
(= 20) 135.65 451.95 T
2 F
(generations. Each subpopulation contains) 171.63 451.95 T
3 F
(NIND = 20) 373.83 451.95 T
2 F
( individuals.) 438.59 451.95 T
(The functions used by the script-\336le are speci\336ed using M) 135.65 425.95 T
2 10 Q
(A) 414.46 425.95 T
(TLAB) 420.57 425.95 T
2 12 Q
( strings:) 446.66 425.95 T
3 F
(% Specify other functions as strings) 171.65 399.95 T
(SEL_F = \325sus\325;) 171.65 384.95 T
(% Name of selection function) 315.65 384.95 T
(XOV_F = \325recdis\325;) 171.65 369.95 T
(% Name of recombination fun.) 315.65 369.95 T
(MUT_F = \325mutbga\325;) 171.65 354.95 T
(% Name of mutation function) 315.65 354.95 T
(OBJ_F = \325objharv\325;) 171.65 339.95 T
(% Name of objective function) 315.65 339.95 T
2 F
3.51 (Because we are using discrete recombination,) 135.65 313.95 P
3 F
8.42 (recdis) 378.85 313.95 P
2 F
3.51 (, for the breeding of) 422.03 313.95 P
(of) 135.65 299.95 T
(fspring, the crossover rate is not used and, hence) 145.42 299.95 T
3 F
(XOVR = 1) 381.57 299.95 T
2 F
( above.) 439.14 299.95 T
2.11 (The initial population is created using the function) 135.65 273.95 P
3 F
5.07 (crtrp) 397.73 273.95 P
2 F
2.11 ( and the generation) 433.71 273.95 P
(counter) 135.65 259.95 T
(,) 171.14 259.95 T
3 F
(gen) 177.13 259.95 T
2 F
(, set to zero:) 198.72 259.95 T
3 F
(Chrom = crtrp\050SUBPOP*NIND,FieldD\051;) 171.65 233.95 T
(gen = 0;) 171.65 218.95 T
2 F
4.09 (This will consist of) 135.65 192.95 P
3 F
9.82 (SUBPOP) 247.3 192.95 P
4 F
4.09 (\264) 297.57 192.95 P
3 F
9.82 (NIND) 311.25 192.95 P
2 F
4.09 ( individuals with individual decision) 340.03 192.95 P
2.1 (variables chosen uniformly at random in the range speci\336ed by) 135.65 178.95 P
3 F
5.03 (FieldD) 461.73 178.95 P
2 F
2.1 (. The) 504.9 178.95 P
3 F
-0.02 (Chrom) 135.65 164.95 P
2 F
-0.01 ( matrix contains all of the subpopulations and the objective function values) 171.63 164.95 P
(for all the individuals in all the subpopulations may be calculated directly) 135.65 150.95 T
(,) 487.64 150.95 T
3 F
(ObjV = feval\050OBJ_F, Chrom\051;) 171.65 124.95 T
FMENDPAGE
%%EndPage: "31" 32
%%Page: "32" 32
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-32) 513.33 61.29 T
2 12 Q
0 (using the M) 135.65 736.95 P
2 10 Q
0 (A) 192.96 736.95 P
0 (TLAB) 199.07 736.95 P
3 12 Q
0.01 (feval) 228.16 736.95 P
2 F
0 ( command.) 264.14 736.95 P
3 F
0.01 (feval) 320.45 736.95 P
2 F
0 ( performs function evaluation taking) 356.42 736.95 P
-0.19 (the \336rst input ar) 135.65 722.95 P
-0.19 (gument, in this case the name of our objective function,) 211.15 722.95 P
3 F
-0.46 (objharv) 479.06 722.95 P
2 F
-0.19 (,) 528.65 722.95 P
-0.13 (contained in) 135.65 708.95 P
3 F
-0.3 (OBJ_F) 197.35 708.95 P
2 F
-0.13 (, as the function to be evaluated and calls that function with all) 232.37 708.95 P
(the remaining parameters as its input ar) 135.65 694.95 T
(guments. In this case, the function call is:) 324.63 694.95 T
3 F
(ObjV = objharv\050Chrom\051;) 171.65 668.95 T
2 F
0.28 (As a real-valued coding is used, there is no need to convert the chromosomes into) 135.65 642.95 P
2.3 (a phenotypic representation. Like the previous example, the GA now enters a) 135.65 628.95 P
(generational) 135.65 614.95 T
3 F
(while) 197.93 614.95 T
2 F
( loop.) 233.91 614.95 T
0.39 (The M) 135.65 588.95 P
2 10 Q
0.33 (A) 168.35 588.95 P
0.33 (TLAB) 174.46 588.95 P
2 12 Q
0.39 ( code for the generational loop of the multi-population GA is shown) 200.55 588.95 P
(in Fig. 1) 135.65 574.95 T
(1 below) 175.53 574.95 T
(.) 213.05 574.95 T
63.65 96.95 531.65 744.95 C
136.44 123.46 531.65 570.95 C
142.71 164.04 525.38 558 R
7 X
0 K
V
3 12 Q
0 X
(% Generational loop) 142.71 550 T
(while gen < MAXGEN,) 142.71 536 T
(% Fitness assignment to whole population) 167.91 514 T
(FitnV = ranking\050ObjV,2,SUBPOP\051;) 167.91 500 T
(% Select individuals from population) 167.91 478 T
-0.39 (SelCh = select\050SEL_F, Chrom, FitnV, GGAP, SUBPOP\051;) 167.91 464 P
(% Recombine selected individuals) 167.91 442 T
(SelCh=recombin\050XOV_F, SelCh, XOVR, SUBPOP\051;) 167.91 428 T
(% Mutate offspring) 167.91 406 T
(SelCh = mutate\050MUT_F,SelCh,FieldD,[MUTR],SUBPOP\051;) 167.91 392 T
(% Calculate objective function for offsprings) 167.91 370 T
(ObjVOff = feval\050OBJ_F,SelCh\051;) 167.91 356 T
(% Insert best offspring replacing worst parents) 167.91 334 T
([Chrom, ObjV] = reins\050Chrom, SelCh, SUBPOP, ...) 167.91 320 T
([1 INSR], ObjV, ObjVOff\051;) 203.89 306 T
(% Increment counter) 167.91 284 T
(gen=gen+1;) 167.91 270 T
(% Migrate individuals between subpopulations) 167.91 248 T
(if \050rem\050gen,MIGGEN\051 == 0\051) 167.91 234 T
([Chrom, ObjV] = ...) 189.49 220 T
-0.47 (migrate\050Chrom, SUBPOP, [MIGR, 1, 1], ObjV\051;) 218.28 206 P
(end) 167.91 192 T
(end) 142.71 170 T
139.16 129.55 528.92 564.86 R
0.5 H
2 Z
N
5 F
(Figure 1) 196.93 138.85 T
(1: Generational Loop of a Multipopulation GA) 239.25 138.85 T
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "32" 33
%%Page: "33" 33
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-33) 513.33 61.29 T
2 12 Q
2.91 (The \336rst step of the generational loop is the assignment of \336tness values to) 135.65 736.95 P
(individuals:) 135.65 722.95 T
3 F
(FitnV = ranking\050ObjV, 2, SUBPOP\051;) 171.65 696.95 T
2 F
1.22 (Because we are using multiple subpopulations,) 135.65 670.95 P
3 F
2.92 (ranking) 371.15 670.95 P
2 F
1.22 ( requires us to specify) 421.52 670.95 P
2.2 (the selective pressure required, here we use a selective pressure of 2, and the) 135.65 656.95 P
0.96 (number of subpopulations,) 135.65 642.95 P
3 F
2.3 (SUBPOP) 269.77 642.95 P
2 F
0.96 (. Each subpopulation\325) 311.62 642.95 P
0.96 (s individuals\325 objective) 417.8 642.95 P
2.68 (values in) 135.65 628.95 P
3 F
6.43 (ObjV) 186.97 628.95 P
2 F
2.68 ( are ranked separately and the resulting sets of \336tness values) 215.76 628.95 P
(returned in the vector) 135.65 614.95 T
3 F
(FitnV) 241.56 614.95 T
2 F
(.) 275.99 614.95 T
1.97 (W) 135.65 588.95 P
1.97 (ithin each subpopulation, individuals are selected for breeding independently) 146.49 588.95 P
(using the high-level selection function,) 135.65 574.95 T
3 F
(select) 325.53 574.95 T
2 F
(:) 368.7 574.95 T
3 F
(SelCh = select\050SEL_F, Chrom, FitnV, GGAP, SUBPOP\051;) 171.65 548.95 T
5.96 (select) 135.65 522.95 P
2 F
2.48 ( calls the low-level selection function,) 178.82 522.95 P
3 F
5.96 (SEL_F = \325sus\325) 379.26 522.95 P
2 F
2.48 ( for each) 484.73 522.95 P
0.23 (subpopulation and builds the matrix) 135.65 508.95 P
3 F
0.56 (SelCh) 312.38 508.95 P
2 F
0.23 ( containing all the pairs of individuals) 348.36 508.95 P
0.24 (to be recombined. Like the previous example, the generation gap,) 135.65 494.95 P
3 F
0.59 (GGAP = 0.8) 455.52 494.95 P
2 F
0.24 (,) 528.65 494.95 P
2.22 (means that 0.8) 135.65 480.95 P
4 F
2.22 (\264) 214.92 480.95 P
2 F
2.22 ( 20 = 16,) 221.5 480.95 P
3 F
5.32 (GGAP) 276.11 480.95 P
4 F
2.22 (\264) 310.11 480.95 P
3 F
5.32 (NIND) 321.92 480.95 P
2 F
2.22 (, individuals are selected from each) 350.7 480.95 P
-0.03 (subpopulation. Thus,) 135.65 466.95 P
3 F
-0.07 (SelCh) 239.54 466.95 P
2 F
-0.03 ( contains a total of) 275.52 466.95 P
3 F
-0.07 (GGAP) 366.98 466.95 P
4 F
-0.03 (\264) 398.73 466.95 P
3 F
-0.07 (NIND) 408.29 466.95 P
4 F
-0.03 (\264) 440.04 466.95 P
3 F
-0.07 (SUBPOP) 449.59 466.95 P
-0.07 (= 128) 495.74 466.95 P
2 F
(individuals.) 135.65 452.95 T
0.04 (In a similar manner) 135.65 426.95 P
0.04 (, the high-level recombination function,) 228.89 426.95 P
3 F
0.1 (recombin) 422.64 426.95 P
2 F
0.04 (, is used to) 480.21 426.95 P
(recombine the pairs of individuals within each subpopulation of) 135.65 412.95 T
3 F
(SelCh) 445.11 412.95 T
2 F
(:) 481.09 412.95 T
3 F
(SelCh = recombin\050XOV_F, SelCh, XOVR, SUBPOP\051;) 171.65 386.95 T
2 F
5.24 (The recombination function,) 135.65 360.95 P
3 F
12.58 (XOV_F = \325recdis\325) 291.28 360.95 P
2 F
5.24 (, performs discrete) 431.57 360.95 P
1.73 (recombination between pairs of individuals for each subpopulation. As discrete) 135.65 346.95 P
0.6 (recombination does not require the speci\336cation of a conventional crossover rate,) 135.65 332.95 P
(the variable) 135.65 318.95 T
3 F
(XOVR = 1.0) 194.93 318.95 T
2 F
( is used only for compatibility) 266.89 318.95 T
(.) 410.37 318.95 T
(The of) 135.65 292.95 T
(fspring are now mutated:) 167.07 292.95 T
3 F
(SelCh = mutate\050MUT_F,SelCh,FieldD,MUTR,SUBPOP\051;) 171.65 266.95 T
2 F
0.16 (Here, the breeder genetic algorithm mutation function,) 135.65 240.95 P
3 F
0.39 (MUT_F = \325mutbga\325) 401.58 240.95 P
2 F
0.16 (, is) 517.49 240.95 P
2 (called using the high-level mutation routine,) 135.65 226.95 P
3 F
4.81 (mutate) 363.2 226.95 P
2 F
2 (, with a mutation rate of) 406.38 226.95 P
3 F
1.94 (MUTR = 1/NIND = 0.05) 135.65 212.95 P
2 F
0.81 (. The breeder genetic algorithm mutation function) 287.31 212.95 P
2.68 (requires the \336eld descriptor) 135.65 198.95 P
2.68 (,) 274.78 198.95 P
3 F
6.43 (FieldD) 283.45 198.95 P
2 F
2.68 (, so that the result of mutation will not) 326.63 198.95 P
(produce values outside the bounds of the decision variables.) 135.65 184.95 T
0.23 (The objective values of all the of) 135.65 158.95 P
0.23 (fspring,) 294.7 158.95 P
3 F
0.55 (ObjVOff) 334.9 158.95 P
2 F
0.23 ( may now be calculated, again) 385.28 158.95 P
(using) 135.65 144.95 T
3 F
(feval) 164.64 144.95 T
2 F
(:) 200.62 144.95 T
3 F
(ObjVOff = feval\050OBJ_F, SelCh\051;) 171.65 118.95 T
FMENDPAGE
%%EndPage: "33" 34
%%Page: "34" 34
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-34) 513.33 61.29 T
2 12 Q
(Of) 135.65 736.95 T
(fspring may now be reinserted into the appropriate subpopulations:) 148.09 736.95 T
3 F
([Chrom, ObjV] = reins\050Chrom, SelCh, SUBPOP,...) 171.65 710.95 T
([1, INSR], ObjV, ObjVOff\051;) 337.16 695.95 T
2 F
1.72 (Fitness-based reinsertion is used, but the addition of the extra parameter to the) 135.65 669.95 P
1.81 (fourth ar) 135.65 655.95 P
1.81 (gument of) 178.87 655.95 P
3 F
4.34 (reins) 234.46 655.95 P
2 F
1.81 ( speci\336es an insertion rate of) 270.44 655.95 P
3 F
4.34 (INSR = 0.9) 421.87 655.95 P
2 F
1.81 (. This) 502.52 655.95 P
3.04 (means that for each subpopulation the least-\336t 10% of the of) 135.65 641.95 P
3.04 (fspring are not) 455.62 641.95 P
(reinserted.) 135.65 627.95 T
4.78 (Individuals in Multi-population GAs migrate between populations at some) 135.65 601.95 P
2.63 (interval. The T) 135.65 587.95 P
2.63 (oolbox routine) 211.69 587.95 P
3 F
6.32 (migrate) 290.25 587.95 P
2 F
2.63 ( is used to swap individuals between) 340.62 587.95 P
1.84 (subpopulations according to some migration strategy) 135.65 573.95 P
1.84 (. In this example, at every) 398.23 573.95 P
3 F
(MIGGEN = 20) 135.65 559.95 T
2 F
( generations, migration takes place between subpopulations.) 214.8 559.95 T
3 F
(% Migration between subpopulations) 171.65 533.95 T
(if\050rem\050gen, MIGGEN\051 == 0\051) 171.65 518.95 T
([Chrom, ObjV] = migrate\050Chrom, SUBPOP, ...) 200.43 503.95 T
([MIGR, 1, 1], ObjV\051;) 380.33 488.95 T
(end) 171.65 473.95 T
2 F
1.79 (Here, the most \336t 20%,) 135.65 447.95 P
3 F
4.29 (MIGR = 0.2) 258.85 447.95 P
2 F
1.79 (, of each subpopulation is selected for) 339.39 447.95 P
3.37 (migration. Nearest neighbour subpopulations then exchange these individuals) 135.65 433.95 P
2.79 (amongst their subpopulations, uniformly reinserting the immigrant individuals) 135.65 419.95 P
0.32 (\050see the) 135.65 405.95 P
0 F
0.32 (Support for Multiple Populations) 176.26 405.95 P
2 F
0.32 ( Section\051. The return matrix) 336.83 405.95 P
3 F
0.78 (Chrom) 475.02 405.95 P
2 F
0.32 ( and) 511.01 405.95 P
0.24 (vector) 135.65 391.95 P
3 F
0.58 (ObjV) 168.86 391.95 P
2 F
0.24 ( re\337ect the changes of individuals in the subpopulations as a result of) 197.64 391.95 P
(migration.) 135.65 377.95 T
1.39 (The GA iterates around the generational loop until) 135.65 351.95 P
3 F
3.33 (gen = MAXGEN) 391.9 351.95 P
2 F
1.39 ( and then) 484.91 351.95 P
1.41 (terminates. Fig. 12 shows a typical solution of the harvest problem obtained by) 135.65 337.95 P
3 F
(mpga) 135.65 323.95 T
2 F
(.) 164.43 323.95 T
63.65 96.95 531.65 744.95 C
133.38 101.21 531.65 319.95 C
0 77 211 550 590 191.56 153.49 240.81 153.36 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: MATLAB graph
%%CreationDate: 04/13/94  22:48:14
%%DocumentFonts: Times-Roman
%%DocumentNeededFonts: Times-Roman
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: 1
%%BoundingBox:    77   211   550   590
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 120 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc /setrgbcolor ldef
/w /setlinewidth ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath fill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	2 copy moveto lineto stroke
	} bdef


currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

% fonts for text, standard numbers and exponents
%%IncludeFont: Times-Roman

%line width, line cap, and joint spec
0 cap 1 setlinejoin

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    77   211   550   590
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: graph1 1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  710   260  5677  4549 MR c np
76 dict begin %Colortable dictionary
/c0 { 0 0 0 sc} bdef
/c1 { 1 1 1 sc} bdef
/c2 { 1 0 0 sc} bdef
/c3 { 0 1 0 sc} bdef
/c4 { 0 0 1 sc} bdef
/c5 { 1 1 0 sc} bdef
/c6 { 1 0 1 sc} bdef
/c7 { 0 1 1 sc} bdef

/Helvetica 144 FMS

c1
   0    0 6917 5187 PR
6 w
DO
4 w
SO
6 w
c0
 899 4615 mt 6258 4615 L
 899  389 mt 6258  389 L
 899 4615 mt  899  389 L
6258 4615 mt 6258  389 L
 899 4615 mt  899 4615 L
6258 4615 mt 6258 4615 L
 899 4615 mt 6258 4615 L
 899 4615 mt  899  389 L
 899 4615 mt  899 4615 L
 899 4615 mt  899 4561 L
 899  389 mt  899  443 L
 859 4776 mt 
(0) s
1435 4615 mt 1435 4561 L
1435  389 mt 1435  443 L
1395 4776 mt 
(2) s
1971 4615 mt 1971 4561 L
1971  389 mt 1971  443 L
1931 4776 mt 
(4) s
2507 4615 mt 2507 4561 L
2507  389 mt 2507  443 L
2467 4776 mt 
(6) s
3043 4615 mt 3043 4561 L
3043  389 mt 3043  443 L
3003 4776 mt 
(8) s
3579 4615 mt 3579 4561 L
3579  389 mt 3579  443 L
3499 4776 mt 
(10) s
4114 4615 mt 4114 4561 L
4114  389 mt 4114  443 L
4034 4776 mt 
(12) s
4650 4615 mt 4650 4561 L
4650  389 mt 4650  443 L
4570 4776 mt 
(14) s
5186 4615 mt 5186 4561 L
5186  389 mt 5186  443 L
5106 4776 mt 
(16) s
5722 4615 mt 5722 4561 L
5722  389 mt 5722  443 L
5642 4776 mt 
(18) s
6258 4615 mt 6258 4561 L
6258  389 mt 6258  443 L
6178 4776 mt 
(20) s
 899 4615 mt  953 4615 L
6258 4615 mt 6204 4615 L
 792 4668 mt 
(0) s
 899 3911 mt  953 3911 L
6258 3911 mt 6204 3911 L
 712 3964 mt 
(10) s
 899 3206 mt  953 3206 L
6258 3206 mt 6204 3206 L
 712 3259 mt 
(20) s
 899 2502 mt  953 2502 L
6258 2502 mt 6204 2502 L
 712 2555 mt 
(30) s
 899 1798 mt  953 1798 L
6258 1798 mt 6204 1798 L
 712 1851 mt 
(40) s
 899 1093 mt  953 1093 L
6258 1093 mt 6204 1093 L
 712 1146 mt 
(50) s
 899  389 mt  953  389 L
6258  389 mt 6204  389 L
 712  442 mt 
(60) s
 899 4615 mt 6258 4615 L
 899  389 mt 6258  389 L
 899 4615 mt  899  389 L
6258 4615 mt 6258  389 L
 899  389 mt  899  389 L
6258  389 mt 6258  389 L
gs 899 389 5360 4227 MR c np
268 -498 268 -691 268 -535 268 -415 268 -274 268 -381 268 -226 268 -159 
268 -204 267 -157 268 -95 268 -80 268 -95 268 -56 268 -33 268 -59 
268 -34 268 -28 268 -21 1167 4500 20 MP stroke
gr 
gs 0 0 256 192 MR c np

end

eplot
%%EndObject graph 1

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
FMENDEPSF
0 12 Q
0 X
0 K
(u) 334.85 146.66 T
0 10 Q
(k) 340.85 143.66 T
0 12 Q
(J) 232.65 228.4 T
5 F
(Figure 12: Optimal Solution Obtained by) 214.83 124 T
6 F
(mpga) 421.42 124 T
137.63 114.44 527.4 313.33 R
0.5 H
2 Z
N
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "34" 35
%%Page: "35" 35
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-35) 513.33 61.29 T
2 12 Q
0.02 (Again, like the previous example, the results of the GA search are contained in the) 135.65 736.95 P
0.13 (matrix) 135.65 722.95 P
3 F
0.31 (ObjV) 170.09 722.95 P
2 F
0.13 (. The objective value and index of the best individual are found using) 197.33 722.95 P
(the function) 135.65 708.95 T
3 F
(min) 196.27 708.95 T
2 F
(, for example:) 217.86 708.95 T
3 F
([Y, I] = min\050ObjV\051) 171.65 682.95 T
(Y =) 171.65 667.95 T
(-73.2370) 200.43 652.95 T
(I =) 171.65 637.95 T
(50) 200.43 622.95 T
2 F
0.87 (Remembering that the sign of the objective function has been changed to form a) 135.65 596.95 P
0.99 (minimisation problem, these results correspond to an objective function value of) 135.65 582.95 P
2.46 (73.2370. The exact solution is given as 73.2376. The GA optimal solution is) 135.65 568.95 P
1.59 (therefore accurate within a 10) 135.65 554.95 P
2 10 Q
1.32 (-5) 285.2 559.75 P
2 12 Q
1.59 (error bound on the exact optimal solution. The) 297.35 554.95 P
(chromosome values are displayed in Fig. 12 using:) 135.65 540.95 T
3 F
(plot\050Chrom\050I,:\051\051) 171.65 514.95 T
FMENDPAGE
%%EndPage: "35" 36
%%Page: "36" 36
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-36) 513.33 61.29 T
1 16 Q
(Demonstration Scripts) 135.65 734.29 T
2 12 Q
-0.03 (A number of test functions have been implemented for use with the GA script \336les) 135.65 706.95 P
4.04 (supplied with the T) 135.65 692.95 P
4.04 (oolbox. These test functions are supplied in a separate) 239.87 692.95 P
1.62 (directory) 135.65 678.95 P
1.62 (,) 178.16 678.95 P
3 F
3.89 (test_fns) 185.78 678.95 P
2 F
1.62 (, from the main demonstrations and T) 243.35 678.95 P
1.62 (oolbox routines and) 433.13 678.95 P
1.58 (are accompanied by a postscript \336le,) 135.65 664.95 P
3 F
3.79 (test_fns.ps) 323.33 664.95 P
2 F
1.58 (, giving full details of the) 402.48 664.95 P
1.23 (problems implemented. The T) 135.65 650.95 P
1.23 (able below summarises the test functions supplied) 283.74 650.95 P
(with the T) 135.65 636.95 T
(oolbox.) 184.11 636.95 T
(No.) 179.02 604.95 T
(m-\336le name) 232.83 604.95 T
(Description) 379.47 604.95 T
(1) 163.25 580.95 T
3 F
(objfun1) 224.45 580.95 T
2 F
(De Jong\325) 310.85 580.95 T
(s function 1) 353.82 580.95 T
(2) 163.25 558.95 T
3 F
(objfun1a) 224.45 558.95 T
2 F
(axis parallel hyper) 310.85 558.95 T
(-ellipsoid) 399.2 558.95 T
(3) 163.25 536.95 T
3 F
(objfun1b) 224.45 536.95 T
2 F
(rotated hyper) 310.85 536.95 T
(-ellipsoid) 374.22 536.95 T
(4) 163.25 514.95 T
3 F
(objfun2) 224.45 514.95 T
2 F
(Rosenbrock\325) 310.85 514.95 T
(s valley \050banana function\051) 371.48 514.95 T
(5) 163.25 492.95 T
3 F
(objfun6) 224.45 492.95 T
2 F
(Rastrigin\325) 310.85 492.95 T
(s function) 358.16 492.95 T
(6) 163.25 470.95 T
3 F
(objfun7) 224.45 470.95 T
2 F
(Schwefel\325) 310.85 470.95 T
(s function) 358.81 470.95 T
(7) 163.25 448.95 T
3 F
(objfun8) 224.45 448.95 T
2 F
(Griewangk\325) 310.85 448.95 T
(s function) 367.47 448.95 T
(8) 163.25 426.95 T
3 F
(objfun9) 224.45 426.95 T
2 F
(sum of dif) 310.85 426.95 T
(ferent powers) 359.94 426.95 T
(9) 163.25 404.95 T
3 F
(objdopi) 224.45 404.95 T
2 F
(double integrator) 310.85 404.95 T
(10) 163.25 382.95 T
3 F
(objharv) 224.45 382.95 T
2 F
(harvest problem) 310.85 382.95 T
(1) 163.25 360.95 T
(1) 168.8 360.95 T
3 F
(objlinq) 224.45 360.95 T
2 F
(discrete linear) 310.85 360.95 T
(-quadratic problem) 378.21 360.95 T
(12) 163.25 338.95 T
3 F
(objlinq2) 224.45 338.95 T
2 F
(continuous linear) 310.85 338.95 T
(-quadratic problem) 393.55 338.95 T
(13) 163.25 316.95 T
3 F
(objpush) 224.45 316.95 T
2 F
(push-cart problem) 310.85 316.95 T
157.25 620.7 157.25 309.2 2 L
V
0.5 H
0 Z
N
218.45 621.2 218.45 308.7 2 L
V
N
304.85 621.2 304.85 308.7 2 L
V
N
510.05 620.7 510.05 309.2 2 L
V
N
157 620.95 510.3 620.95 2 L
V
N
157.5 596.2 509.8 596.2 2 L
V
N
157.5 593.7 509.8 593.7 2 L
V
N
157 572.95 510.3 572.95 2 L
V
N
157 550.95 510.3 550.95 2 L
V
N
157 528.95 510.3 528.95 2 L
V
N
157 506.95 510.3 506.95 2 L
V
N
157 484.95 510.3 484.95 2 L
V
N
157 462.95 510.3 462.95 2 L
V
N
157 440.95 510.3 440.95 2 L
V
N
157 418.95 510.3 418.95 2 L
V
2 H
N
157 396.95 510.3 396.95 2 L
V
0.5 H
N
157 374.95 510.3 374.95 2 L
V
N
157 352.95 510.3 352.95 2 L
V
N
157 330.95 510.3 330.95 2 L
V
N
157 308.95 510.3 308.95 2 L
V
N
FMENDPAGE
%%EndPage: "36" 37
%%Page: "37" 37
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-37) 513.33 61.29 T
63.65 716.95 531.65 726.95 C
63.65 725.95 531.65 725.95 2 L
1 H
2 Z
0 X
0 K
N
-8.35 24.95 603.65 816.95 C
1 18 Q
0 X
0 K
(Refer) 63.65 732.95 T
(ences) 106.27 732.95 T
2 12 Q
2.36 ([1] D. E. Goldber) 135.65 694.95 P
2.36 (g,) 226.77 694.95 P
0 F
2.36 (Genetic Algorithms in Sear) 241.12 694.95 P
2.36 (ch, Optimization and Machine) 378.67 694.95 P
(Learning) 150.05 680.95 T
2 F
(, Addison W) 194.03 680.95 T
(esley Publishing Company) 254.03 680.95 T
(, January 1989.) 381.86 680.95 T
1.14 ([2] C. L. Karr) 135.65 658.95 P
1.14 (, \322Design of an Adaptive Fuzzy Logic Controller Using a Genetic) 204.85 658.95 P
(Algorithm\323,) 150.05 644.95 T
0 F
(Pr) 211.35 644.95 T
(oc. ICGA 4) 222.9 644.95 T
2 F
(, pp. 450-457, 1991.) 277.19 644.95 T
1.8 ([3] R. B. Holstien,) 135.65 622.95 P
0 F
1.8 (Arti\336cial Genetic Adaptation in Computer Contr) 234.46 622.95 P
1.8 (ol Systems) 476.55 622.95 P
2 F
1.8 (,) 528.65 622.95 P
7.26 (PhD Thesis, Department of Computer and Communication Sciences,) 150.05 608.95 P
(University of Michigan, Ann Arbor) 150.05 594.95 T
(, 1971.) 320.45 594.95 T
0.67 ([4] R. A. Caruana and J. D. Schaf) 135.65 572.95 P
0.67 (fer) 301.64 572.95 P
0.67 (, \322Representation and Hidden Bias: Gray vs.) 314.47 572.95 P
(Binary Coding\323,) 150.05 558.95 T
0 F
(Pr) 232.34 558.95 T
(oc. 6) 243.88 558.95 T
274.98 562.79 267.2 562.79 2 L
V
0.48 H
0 Z
N
0 10 Q
(th) 267.2 563.75 T
0 12 Q
( Int. Conf. Machine Learning) 274.98 558.95 T
2 F
(, pp153-161, 1988.) 415.56 558.95 T
2.14 ([5] W) 135.65 536.95 P
2.14 (. E. Schmitendor) 164.99 536.95 P
2.14 (gf, O. Shaw) 249.67 536.95 P
2.14 (, R. Benson and S. Forrest, \322Using Genetic) 310.46 536.95 P
1.16 (Algorithms for Controller Design: Simultaneous Stabilization and Eigenvalue) 150.05 522.95 P
4.21 (Placement in a Region\323,) 150.05 508.95 P
0 F
4.21 (T) 286.49 508.95 P
4.21 (echnical Report No. CS92-9) 292.05 508.95 P
2 F
4.21 (, Dept. Computer) 439.94 508.95 P
(Science, College of Engineering, University of New Mexico, 1992.) 150.05 494.95 T
1.52 ([6] M. F) 135.65 472.95 P
1.52 (. Bramlette, \322Initialization, Mutation and Selection Methods in Genetic) 178.04 472.95 P
(Algorithms for Function Optimization\323,) 150.05 458.95 T
0 F
(Pr) 344.94 458.95 T
(oc ICGA 4) 356.49 458.95 T
2 F
(, pp. 100-107, 1991.) 407.79 458.95 T
0.31 ([7] C. B. Lucasius and G. Kateman, \322T) 135.65 436.95 P
0.31 (owards Solving Subset Selection Problems) 324.51 436.95 P
2.37 (with the Aid of the Genetic Algorithm\323, In) 150.05 422.95 P
0 F
2.37 (Parallel Pr) 377.18 422.95 P
2.37 (oblem Solving fr) 433.41 422.95 P
2.37 (om) 516.99 422.95 P
2.89 (Natur) 150.05 408.95 P
2.89 (e 2) 177.6 408.95 P
2 F
2.89 (, R. M\212nner and B. Manderick, \050Eds.\051, pp. 239-247, Amsterdam:) 194.81 408.95 P
(North-Holland, 1992.) 150.05 394.95 T
2.88 ([8] A. H. W) 135.65 372.95 P
2.88 (right, \322Genetic Algorithms for Real Parameter Optimization\323, In) 201.41 372.95 P
0 F
-0.29 (Foundations of Genetic Algorithms) 150.05 358.95 P
2 F
-0.29 (, J. E. Rawlins \050Ed.\051, Mor) 318.74 358.95 P
-0.29 (gan Kaufmann, pp.) 440.31 358.95 P
(205-218, 1991.) 150.05 344.95 T
-0.01 ([9] Z. Michalewicz,) 135.65 322.95 P
0 F
-0.01 (Genetic Algorithms + Data Structur) 233.88 322.95 P
-0.01 (es = Evolution Pr) 407.41 322.95 P
-0.01 (ograms) 492.67 322.95 P
2 F
-0.01 (,) 528.65 322.95 P
(Springer V) 150.05 308.95 T
(erlag, 1992.) 201.68 308.95 T
4.12 ([10] T) 135.65 286.95 P
4.12 (. B\212ck, F) 169.19 286.95 P
4.12 (. Hof) 219.77 286.95 P
4.12 (fmeister and H.-P) 248.32 286.95 P
4.12 (. Schwefel, \322A Survey of Evolution) 340.17 286.95 P
(Strategies\323,) 150.05 272.95 T
0 F
(Pr) 208.67 272.95 T
(oc. ICGA 4) 220.22 272.95 T
2 F
(, pp. 2-10, 1991.) 274.52 272.95 T
1.27 ([1) 135.65 250.95 P
1.27 (1] J. J. Grefenstette, \322Incorporating Problem Speci\336c Knowledge into Genetic) 145.2 250.95 P
1.83 (Algorithms\323, In) 150.05 236.95 P
0 F
1.83 (Genetic Algorithms and Simulated Annealing) 232.66 236.95 P
2 F
1.83 (, pp. 42-60, L.) 457.86 236.95 P
(Davis \050Ed.\051, Mor) 150.05 222.95 T
(gan Kaufmann, 1987.) 231.77 222.95 T
0.89 ([12] D. Whitley) 135.65 200.95 P
0.89 (, K. Mathias and P) 212.93 200.95 P
0.89 (. Fitzhorn, \322Delta Coding: An Iterative Search) 304.45 200.95 P
(Strategy for Genetic Algorithms\323,) 150.05 186.95 T
0 F
(Pr) 316.27 186.95 T
(oc. ICGA 4) 327.81 186.95 T
2 F
(, pp. 77-84, 1991.) 382.11 186.95 T
1.8 ([13] K. A. De Jong,) 135.65 164.95 P
0 F
1.8 (Analysis of the Behaviour of a Class of Genetic Adaptive) 242.59 164.95 P
4.64 (Systems) 150.05 150.95 P
2 F
4.64 (, PhD Thesis, Dept. of Computer and Communication Sciences,) 188.02 150.95 P
(University of Michigan, Ann Arbor) 150.05 136.95 T
(, 1975.) 320.45 136.95 T
2.09 ([14] J. E. Baker) 135.65 114.95 P
2.09 (, \322Adaptive Selection Methods for Genetic Algorithms\323,) 217.03 114.95 P
0 F
2.09 (Pr) 505.78 114.95 P
2.09 (oc.) 517.33 114.95 P
(ICGA 1) 150.05 100.95 T
2 F
(, pp. 101-1) 187.02 100.95 T
(1) 238.55 100.95 T
(1, 1985.) 244.1 100.95 T
FMENDPAGE
%%EndPage: "37" 38
%%Page: "38" 38
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-38) 513.33 61.29 T
2 12 Q
-0.08 ([15] J. E. Baker) 135.65 736.95 P
-0.08 (, \322Reducing bias and inef) 210.55 736.95 P
-0.08 (\336ciency in the selection algorithm\323,) 331.61 736.95 P
0 F
-0.08 (Pr) 505.78 736.95 P
-0.08 (oc.) 517.33 736.95 P
(ICGA 2) 150.05 722.95 T
2 F
(, pp. 14-21, 1987.) 187.02 722.95 T
0.71 ([16] L. Booker) 135.65 700.95 P
0.71 (, \322Improving search in genetic algorithms,\323 In) 208.2 700.95 P
0 F
0.71 (Genetic Algorithms) 437.33 700.95 P
4.04 (and Simulated Annealing) 150.05 686.95 P
2 F
4.04 (, L. Davis \050Ed.\051, pp. 61-73, Mor) 279.4 686.95 P
4.04 (gan Kaufmann) 456.66 686.95 P
(Publishers, 1987.) 150.05 672.95 T
0 ([17] W) 135.65 650.95 P
0 (. M. Spears and K. A. De Jong, \322An Analysis of Multi-Point Crossover\323, In) 168.85 650.95 P
0 F
(Foundations of Genetic Algorithms) 150.05 636.95 T
2 F
(, J. E. Rawlins \050Ed.\051, pp. 301-315, 1991.) 319.62 636.95 T
0.66 ([18] G. Syswerda, \322Uniform crossover in genetic algorithms\323, Proc. ICGA 3, pp.) 135.65 614.95 P
(2-9, 1989.) 150.05 600.95 T
0.46 ([19] W) 135.65 578.95 P
0.46 (. M. Spears and K. A. De Jong, \322On the V) 169.31 578.95 P
0.46 (irtues of Parameterised Uniform) 375.38 578.95 P
(Crossover\323,) 150.05 564.95 T
0 F
(Pr) 210 564.95 T
(oc. ICGA 4) 221.55 564.95 T
2 F
(, pp.230-236, 1991.) 275.85 564.95 T
1.05 ([20] R. A. Caruana, L. A. Eshelman, J. D. Schaf) 135.65 542.95 P
1.05 (fer) 376.42 542.95 P
1.05 (, \322Representation and hidden) 389.25 542.95 P
-0.3 (bias II: Eliminating de\336ning length bias in genetic search via shuf) 150.05 528.95 P
-0.3 (\337e crossover\323,) 462.67 528.95 P
2.77 (In) 150.05 514.95 P
0 F
2.77 (Eleventh International Joint Confer) 165.81 514.95 P
2.77 (ence on Arti\336cial Intelligence) 345.24 514.95 P
2 F
2.77 (, N. S.) 495.79 514.95 P
(Sridharan \050Ed.\051, V) 150.05 500.95 T
(ol. 1, pp. 750-755, Mor) 237.1 500.95 T
(gan Kaufmann Publishers, 1989.) 348.82 500.95 T
3.24 ([21] H. M\237hlenbein and D. Schlierkamp-V) 135.65 478.95 P
3.24 (oosen, \322Predictive Models for the) 357.14 478.95 P
0.37 (Breeder Genetic Algorithm\323,) 150.05 464.95 P
0 F
0.37 (Evolutionary Computation) 293.72 464.95 P
2 F
0.37 (, V) 422.36 464.95 P
0.37 (ol. 1, No. 1, pp. 25-) 435.84 464.95 P
(49, 1993.) 150.05 450.95 T
1.26 ([22] H. Furuya and R. T) 135.65 428.95 P
1.26 (. Haftka, \322Genetic Algorithms for Placing Actuators on) 257.33 428.95 P
(Space Structures\323,) 150.05 414.95 T
0 F
(Pr) 241.64 414.95 T
(oc. ICGA 5) 253.19 414.95 T
2 F
(, pp. 536-542, 1993.) 307.48 414.95 T
0.3 ([23] C. Z. Janikow and Z. Michalewicz, \322An Experimental Comparison of Binary) 135.65 392.95 P
0.49 (and Floating Point Representations in Genetic Algorithms\323,) 150.05 378.95 P
0 F
0.49 (Pr) 443.33 378.95 P
0.49 (oc. ICGA 4) 454.89 378.95 P
2 F
0.49 (, pp.) 510.17 378.95 P
(31-36, 1991.) 150.05 364.95 T
0.74 ([24] D. M. T) 135.65 342.95 P
0.74 (ate and A. E. Smith, \322Expected Allele Conver) 198.65 342.95 P
0.74 (gence and the Role of) 424.11 342.95 P
(Mutation in Genetic Algorithms\323,) 150.05 328.95 T
0 F
(Pr) 315.62 328.95 T
(oc. ICGA) 327.17 328.95 T
2 F
( 5, pp.31-37, 1993.) 372.47 328.95 T
2.12 ([25] L. Davis, \322Adapting Operator Probabilities in Genetic Algorithms\323,) 135.65 306.95 P
0 F
2.12 (Pr) 505.78 306.95 P
2.12 (oc.) 517.33 306.95 P
(ICGA 3) 150.05 292.95 T
2 F
(, pp. 61-69, 1989.) 187.02 292.95 T
5.14 ([26] T) 135.65 270.95 P
5.14 (. C. Fogarty) 170.21 270.95 P
5.14 (, \322V) 237.02 270.95 P
5.14 (arying the Probability of Mutation in the Genetic) 260.81 270.95 P
(Algorithm\323,) 150.05 256.95 T
0 F
(Pr) 211.35 256.95 T
(oc. ICGA 3) 222.9 256.95 T
2 F
(, pp. 104-109, 1989.) 277.19 256.95 T
0.12 ([27] K. A. De Jong and J. Sarma, \322Generation Gaps Revisited\323, In) 135.65 234.95 P
0 F
0.12 ( Foundations of) 455.43 234.95 P
2.86 (Genetic Algorithms 2) 150.05 220.95 P
2 F
2.86 (, L. D. Whitley \050Ed.\051, Mor) 258.37 220.95 P
2.86 (gan Kaufmann Publishers,) 399.02 220.95 P
(1993.) 150.05 206.95 T
2.13 ([28] D. Whitley) 135.65 184.95 P
2.13 (, \322The GENIT) 215.4 184.95 P
2.13 (OR algorithm and selection pressure: why rank-) 288.38 184.95 P
1.7 (based allocations of reproductive trials is best\323,) 150.05 170.95 P
0 F
1.7 ( Pr) 387.77 170.95 P
1.7 (oc. ICGA 3) 404.02 170.95 P
2 F
1.7 (, pp. 1) 461.73 170.95 P
1.7 (16-121,) 494.67 170.95 P
(1989.) 150.05 156.95 T
2.82 ([29] R. Huang and T. C. Fogarty, \322Adaptive Classification and Control-Rule) 135.65 134.95 P
1.46 (Optimization Via a Learning Algorithm for Controlling a Dynamic System\323,) 150.05 120.95 P
0 F
(Proc. 30th Conf. Decision and Control) 150.05 106.95 T
2 F
(, Brighton, England, pp. 867-868, 1991.) 336.95 106.95 T
FMENDPAGE
%%EndPage: "38" 39
%%Page: "39" 39
595.3 841.9 0 FMBEGINPAGE
0 10 Q
0 X
0 K
(Genetic Algorithm Toolbox User\325s Guide) 63.65 61.61 T
(1-39) 513.33 61.29 T
2 12 Q
0.5 ([30] T) 135.65 736.95 P
0.5 (. C. Fogarty) 165.57 736.95 P
0.5 (, \322An Incremental Genetic Algorithm for Real-T) 223.11 736.95 P
0.5 (ime Learning\323,) 458.53 736.95 P
0 F
(Pr) 150.05 722.95 T
(oc. 6th Int. W) 161.6 722.95 T
(orkshop on Machine Learning) 225.45 722.95 T
2 F
(, pp. 416-419, 1989.) 371.03 722.95 T
2.13 ([31] D. E. Goldber) 135.65 700.95 P
2.13 (g and J. Richardson, \322Genetic Algorithms with Sharing for) 232.1 700.95 P
(Multimodal Function Optimization\323,) 150.05 686.95 T
0 F
(Pr) 329.96 686.95 T
(oc. ICGA 2) 341.51 686.95 T
2 F
(, pp.41-49, 1987.) 395.8 686.95 T
0.39 ([32] H. M\237hlenbein, M. Schomisch and J. Born, \322The Parallel Genetic Algorithm) 135.65 664.95 P
(as a Function Optimizer\323,) 150.05 650.95 T
0 F
(Parallel Computing) 276.96 650.95 T
2 F
(, No. 17, pp. 619-632, 1991.) 372.59 650.95 T
-0.14 ([33] T) 135.65 628.95 P
-0.14 (. Starkweather) 164.93 628.95 P
-0.14 (, D. Whitley and K. Mathias, \322Optimization Using Distributed) 233.59 628.95 P
0.85 (Genetic Algorithms\323,) 150.05 614.95 P
0 F
0.85 (Pr) 258 614.95 P
0.85 (oc. Parallel Pr) 269.55 614.95 P
0.85 (oblem Solving Fr) 342.43 614.95 P
0.85 (om Natur) 426.96 614.95 P
0.85 (e 1) 473.01 614.95 P
2 F
0.85 (, Lecture) 488.18 614.95 P
(Notes in Computer Science No. 496, pp. 176-185, Springer) 150.05 600.95 T
(-V) 434.29 600.95 T
(erlag, 1990.) 445.61 600.95 T
0.22 ([34] M. Geor) 135.65 578.95 P
0.22 (ges-Schleuter) 199.48 578.95 P
0.22 (, \322Comparison of Local Mating Strategies in Massively) 264.28 578.95 P
1.35 (Parallel Genetic Algorithms\323, In) 150.05 564.95 P
0 F
1.35 ( Parallel Pr) 309.98 564.95 P
1.35 (oblem Solving fr) 369.54 564.95 P
1.35 (om Natur) 451.08 564.95 P
1.35 (e 2) 497.64 564.95 P
2 F
1.35 (, R.) 513.3 564.95 P
1.77 (M\212nner and B. Manderick, \050Eds.\051, pp. 553-562, Amsterdam: North-Holland,) 150.05 550.95 P
(1992.) 150.05 536.95 T
FMENDPAGE
%%EndPage: "39" 40
%%Trailer
%%BoundingBox: 0 0 595.3 841.9
%%Pages: 39 1
%%DocumentFonts: Times-Italic
%%+ Times-Bold
%%+ Times-Roman
%%+ Courier
%%+ Symbol
%%+ Times-BoldItalic
%%+ Courier-BoldOblique
